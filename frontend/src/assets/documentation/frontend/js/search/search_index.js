var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,1.031,1,1.273]],["body/injectables/ApiService.html",[0,1.526,1,2.102,2,2.027,3,0.393,4,0.333,5,0.333,6,2.707,7,1.795,8,0.526,9,1.526,10,1.899,11,4.323,12,4.323,13,5.12,14,5.12,15,4.323,16,4.323,17,1.292,18,3.297,19,2.488,20,1.427,21,3.297,22,2.083,23,0.042,24,1.088,25,1.088,26,2.317,27,4.323,28,4.323,29,3.297,30,4.203,31,1.4,32,4.009,33,4.323,34,3.297,35,2.488,36,3.297,37,3.297,38,4.323,39,3.297,40,4.323,41,3.297,42,0.611,43,0.458,44,4.364,45,1.292,46,1.602,47,2.027,48,1.164,49,0.288,50,2.707,51,2.707,52,3.297,53,3.297,54,1.164,55,1.602,56,2.707,57,2.027,58,0.393,59,0.943,60,1.925,61,3.297,62,3.297,63,1.807,64,4.629,65,3.599,66,1.807,67,2.788,68,4.203,69,3.297,70,3.297,71,3.297,72,3.297,73,0.022,74,0.029,75,0.022]],["title/components/AppComponent.html",[76,0.103,77,0.75]],["body/components/AppComponent.html",[3,0.358,4,0.303,5,0.41,8,0.479,9,1.434,10,1.881,17,1.177,19,2.581,20,1.394,22,1.177,23,0.042,24,0.942,25,1.01,26,1.309,31,0.771,42,0.549,43,0.417,45,1.177,46,1.46,47,1.847,49,0.2,54,1.434,57,2.498,58,0.358,59,0.859,73,0.02,74,0.028,75,0.02,76,0.163,77,1.266,78,1.434,79,1.177,80,1.177,81,1.177,82,0.771,83,2.466,84,1.434,85,1.625,86,1.177,87,1.466,88,1.158,89,1.043,90,4.604,91,1.043,92,4.063,93,1.291,94,3.779,95,4.604,96,4.23,97,3.236,98,2.507,99,1.568,100,2.111,101,4.063,102,3.003,103,1.434,104,2.504,105,2.02,106,3.335,107,3.003,108,1.41,109,4.063,110,2.856,111,3.003,112,3.335,113,3.003,114,2.856,115,3.003,116,3.003,117,2.466,118,2.831,119,3.003,120,3.003,121,3.335,122,2.212,123,1.625,124,2.856,125,3.396,126,1.974,127,4.063,128,4.049,129,4.932,130,4.063,131,2.856,132,4.063,133,4.063,134,4.063,135,4.063,136,3.003,137,4.063,138,3.335,139,3.003,140,3.003,141,4.063,142,3.003,143,4.063,144,3.003,145,3.003,146,3.779,147,1.974,148,2.466,149,3.003,150,2.466,151,3.003,152,3.003,153,3.003,154,2.111,155,2.466,156,3.003,157,2.466,158,2.111,159,2.466,160,2.466,161,2.466,162,2.111,163,2.856,164,2.466,165,0.955,166,1.434,167,1.291,168,1.177,169,1.41,170,1.177,171,1.177,172,0.69,173,1.177,174,0.69,175,1.177,176,0.771,177,1.177,178,0.955,179,1.177,180,0.69,181,1.177,182,0.69,183,1.177,184,0.545,185,1.177,186,0.69,187,1.177,188,0.69,189,1.177,190,1.177]],["title/modules/AppModule.html",[191,1.796,192,1.796]],["body/modules/AppModule.html",[3,0.356,4,0.301,5,0.408,23,0.042,42,0.725,43,0.414,45,1.168,49,0.199,58,0.356,73,0.02,74,0.028,75,0.02,77,1.475,88,0.61,165,0.947,172,1.217,174,1.217,176,1.36,178,0.947,180,1.217,182,1.217,184,0.961,186,1.217,188,1.217,191,1.832,192,3.695,193,1.623,194,1.832,195,3.764,196,3.223,197,2.2,198,2.095,199,2.446,200,2.446,201,2.446,202,2.446,203,2.885,204,3.317,205,2.446,206,2.095,207,2.98,208,3.317,209,4.041,210,3.317,211,1.832,212,3.317,213,2.98,214,4.041,215,4.041,216,2.446,217,4.041,218,2.446,219,4.041,220,2.446,221,4.041,222,2.98,223,4.041,224,2.98,225,1.448,226,4.041,227,2.98,228,4.041,229,2.98,230,4.041,231,1.623,232,2.2,233,4.041,234,2.98,235,4.041,236,2.98,237,4.041,238,2.98,239,1.168,240,4.041,241,2.98,242,4.041,243,2.98,244,4.041,245,2.98,246,4.041,247,2.98,248,4.041,249,4.041,250,4.041,251,2.98,252,4.041,253,2.98,254,4.041,255,1.832,256,1.832,257,4.041,258,1.832,259,2.98,260,2.98,261,2.98,262,2.446,263,2.446,264,2.446,265,2.446,266,1.832,267,2.98,268,2.446,269,4.041,270,2.446,271,2.446]],["title/classes/AppPage.html",[49,0.195,272,2.053]],["body/classes/AppPage.html",[3,0.52,4,0.44,5,0.44,8,0.695,9,1.816,20,1.321,23,0.041,31,1.321,42,0.52,49,0.291,57,2.682,58,0.52,60,1.816,67,2.375,73,0.03,74,0.035,75,0.03,167,1.386,211,2.682,272,3.618,273,2.682,274,3.58,275,5.655,276,5.655,277,4.361,278,5.848,279,4.361,280,3.58,281,4.361,282,4.361,283,4.361]],["title/modules/AppRoutingModule.html",[191,1.796,203,1.59]],["body/modules/AppRoutingModule.html",[3,0.479,4,0.405,5,0.405,23,0.042,42,0.7,43,0.558,49,0.268,54,1.418,58,0.479,63,1.418,73,0.027,74,0.033,75,0.027,76,0.206,122,2.188,123,1.418,124,2.825,125,2.471,172,1.126,174,1.126,182,1.215,184,0.888,186,1.126,188,1.126,193,2.188,198,2.825,203,2.668,208,3.299,212,4.022,262,3.299,263,3.299,264,3.299,265,3.299,268,3.299,271,3.299,284,4.019,285,4.019,286,3.25,287,4.9,288,3.299,289,5.81,290,4.019]],["title/injectables/ChecklistDatabase.html",[0,1.031,291,1.59]],["body/injectables/ChecklistDatabase.html",[0,0.718,1,1.492,2,0.747,3,0.145,4,0.122,5,0.265,8,0.684,9,0.718,10,0.647,17,0.476,20,1.294,22,1.863,23,0.042,24,1.128,25,0.973,26,2.071,31,1.261,35,1.494,42,0.469,43,0.169,48,0.429,49,0.205,54,0.718,55,1.494,58,0.367,59,0.582,60,1.707,63,1.833,66,1.779,73,0.014,74,0.014,75,0.008,76,0.072,82,0.951,84,0.429,85,0.718,87,0.312,88,0.249,89,0.312,91,0.312,93,0.647,99,0.386,103,1.208,104,0.59,105,1.826,108,1.538,126,1.277,147,2.005,169,0.347,184,0.22,197,0.661,225,0.989,231,0.661,232,1.108,239,1.681,255,0.747,256,1.615,258,0.747,291,1.674,292,0.661,293,1.614,294,1.431,295,2.537,296,1.89,297,1.431,298,2.537,299,2.264,300,1.431,301,4.005,302,1.431,303,2.799,304,2.765,305,2.161,306,1.674,307,2.017,308,1.251,309,1.847,310,2.035,311,2.035,312,2.035,313,2.035,314,1.615,315,2.309,316,2.035,317,2.035,318,2.035,319,2.035,320,2.161,321,2.035,322,2.035,323,2.035,324,2.035,325,2.035,326,0.997,327,2.035,328,1.214,329,2.765,330,1.714,331,1.214,332,1.214,333,1.214,334,3.237,335,1.214,336,1.431,337,3.015,338,2.803,339,1.214,340,2.627,341,1.431,342,1.214,343,1.431,344,1.214,345,1.214,346,1.431,347,1.214,348,1.431,349,2.161,350,1.214,351,1.847,352,1.214,353,1.214,354,1.214,355,1.431,356,1.214,357,1.214,358,1.431,359,1.214,360,1.431,361,2.406,362,1.431,363,1.214,364,1.431,365,1.214,366,1.431,367,1.214,368,1.847,369,1.214,370,1.214,371,0.661,372,1.431,373,2.161,374,0.854,375,0.854,376,1.251,377,0.747,378,1.431,379,0.854,380,1.431,381,1.431,382,0.854,383,1.431,384,0.854,385,0.747,386,0.661,387,0.661,388,1.108,389,0.661,390,0.854,391,0.854,392,0.854,393,0.854,394,0.854,395,2.406,396,1.615,397,1.89,398,1.997,399,0.854,400,0.854,401,2.406,402,3.275,403,0.854,404,2.161,405,0.854,406,0.854,407,1.431,408,3.874,409,0.854,410,2.406,411,2.406,412,1.431,413,1.431,414,1.431,415,0.854,416,0.854,417,1.847,418,1.431,419,1.847,420,1.847,421,1.847,422,1.847,423,1.847,424,1.431,425,1.431,426,0.854,427,0.854,428,0.854,429,1.431,430,0.854,431,0.854,432,0.854,433,0.854,434,0.854,435,0.854,436,1.494,437,0.854,438,0.854,439,0.854,440,2.161,441,1.431,442,1.431,443,0.854,444,0.854,445,0.854,446,0.854,447,0.854,448,0.854,449,0.747,450,0.854,451,0.854,452,0.854,453,0.854,454,0.854,455,0.854,456,0.854,457,0.747,458,1.847,459,0.854,460,0.854,461,0.854,462,0.854,463,0.854,464,0.854,465,0.854,466,0.854,467,1.43,468,0.747,469,1.431,470,0.854,471,0.854,472,1.431,473,0.854,474,0.854,475,0.854,476,0.854,477,0.854,478,0.854,479,1.251,480,0.854,481,0.854,482,0.854,483,0.854,484,0.854,485,0.854,486,1.431,487,1.431,488,0.854,489,0.854,490,0.854,491,1.431,492,0.854,493,0.854,494,0.854,495,0.854,496,0.747,497,1.847,498,0.854,499,1.847,500,0.854,501,0.854,502,0.854,503,0.854,504,0.854,505,0.854,506,0.747,507,0.854,508,0.854,509,0.854,510,0.854,511,0.854,512,2.161,513,2.161,514,0.854,515,0.854,516,1.494,517,0.989,518,1.431,519,1.251,520,1.251,521,1.615,522,1.494,523,1.251,524,1.251,525,1.431,526,1.251,527,1.108,528,0.854,529,1.431,530,0.854,531,0.854,532,0.854,533,0.854,534,2.161,535,0.854,536,1.431,537,2.277,538,2.277,539,1.251,540,1.431,541,0.854,542,1.615,543,0.854,544,1.431,545,0.854,546,0.854,547,0.854,548,0.854,549,0.854,550,1.431,551,0.854,552,0.747,553,0.854,554,0.798,555,1.494,556,1.431,557,1.145,558,0.854,559,0.747,560,0.854,561,0.854,562,0.854,563,0.989,564,1.251,565,0.887,566,1.431,567,1.89,568,0.854,569,0.854,570,0.854,571,0.854,572,0.854,573,1.431,574,0.854,575,0.854,576,0.854,577,0.854,578,0.854,579,0.854,580,0.854,581,0.854,582,0.854,583,0.854,584,0.854,585,0.747,586,0.854,587,0.854,588,2.406,589,0.854,590,1.431,591,0.854,592,0.854,593,1.431,594,0.854,595,0.854,596,0.854,597,0.854,598,2.765,599,0.854,600,1.431,601,2.406,602,0.854,603,1.431,604,0.854,605,0.854,606,0.854,607,0.854,608,0.854,609,0.854,610,0.854,611,0.854,612,0.854,613,1.251,614,0.747,615,2.161,616,0.854,617,1.431,618,2.161,619,0.854,620,0.854,621,0.854,622,0.854,623,0.854,624,1.431,625,0.854,626,0.854,627,0.854,628,2.161,629,1.431,630,0.747,631,0.854,632,0.854,633,0.854,634,0.854,635,0.854,636,0.854,637,0.854,638,0.854,639,0.854,640,0.854]],["title/components/DashboardComponent.html",[76,0.103,172,0.671]],["body/components/DashboardComponent.html",[3,0.415,4,0.351,5,0.451,7,1.894,8,0.554,9,1.58,17,1.94,20,1.149,23,0.042,24,0.916,31,0.893,42,0.415,43,0.483,49,0.298,58,0.415,73,0.024,74,0.03,75,0.024,76,0.185,77,0.893,78,1.58,79,1.363,80,1.363,81,1.363,82,0.893,84,1.58,85,1.747,86,1.363,87,1.501,88,1.189,89,1.149,91,1.149,99,1.661,103,1.58,114,3.673,123,1.228,124,3.8,147,2.175,154,2.445,155,3.674,157,2.855,158,3.146,159,2.855,160,2.855,161,2.855,162,2.445,163,3.479,164,3.674,165,1.106,166,1.58,167,1.423,168,1.363,169,1.494,170,1.363,171,1.363,172,1.242,173,1.363,174,0.799,175,1.363,176,0.893,177,1.363,178,1.106,179,1.363,180,0.799,181,1.363,182,0.799,183,1.363,184,0.631,185,1.363,186,0.799,187,1.363,188,0.799,189,1.363,190,1.363,641,2.855,642,4.949,643,4.476,644,3.478,645,3.478,646,3.478,647,3.478,648,3.478,649,3.478,650,4.476,651,4.476,652,4.476,653,4.476,654,4.476,655,4.476,656,4.476,657,3.674,658,3.674,659,4.438,660,3.478,661,3.478,662,2.445,663,3.478,664,3.478,665,4.476,666,3.478,667,3.478,668,3.478,669,2.855]],["title/components/DocumentViewTableComponent.html",[76,0.103,176,0.75]],["body/components/DocumentViewTableComponent.html",[1,1.621,3,0.2,4,0.169,5,0.267,7,0.912,8,0.421,9,0.933,10,1.797,17,0.656,19,0.814,20,1.439,22,1.831,23,0.042,24,1.008,25,1.096,26,1.964,31,1.33,32,2.615,35,0.814,42,0.587,43,0.232,45,0.656,48,0.591,49,0.176,54,1.828,55,1.285,58,0.2,59,0.479,60,1.156,63,1.313,66,1.59,73,0.011,74,0.025,75,0.011,76,0.132,77,0.43,78,0.933,79,0.656,80,0.656,81,0.656,82,0.43,84,0.933,85,1.156,86,0.656,87,1.289,88,0.956,89,0.679,91,0.679,93,0.84,98,1.439,99,1.182,103,1.697,104,2.092,105,1.766,108,1.532,122,2.78,123,0.591,126,1.285,147,0.814,158,1.177,165,0.532,166,0.933,167,0.84,168,0.656,169,1.064,170,0.656,171,0.656,172,0.385,173,0.656,174,0.385,175,0.656,176,1.04,177,2.099,178,1.837,179,0.656,180,0.385,181,0.656,182,0.385,183,0.656,184,0.304,185,0.656,186,0.385,187,0.656,188,0.385,189,0.656,190,0.656,218,1.374,220,1.374,225,0.814,231,0.912,232,1.439,239,1.458,293,1.964,299,0.814,306,1.783,307,1.783,314,2.287,315,2.092,326,1.374,330,1.152,371,0.912,376,2.287,377,1.029,385,1.029,387,0.912,388,2.205,396,1.029,397,1.029,398,1.458,436,1.592,449,2.014,457,2.287,467,2.543,468,2.014,479,2.287,506,1.625,516,1.592,517,0.814,519,1.029,522,1.592,523,2.014,526,1.029,537,1.625,538,1.625,539,1.625,542,3.348,552,1.029,554,1.036,555,2.27,557,1.876,559,1.625,563,0.814,565,1.152,585,1.625,659,1.374,670,4.623,671,1.374,672,3.275,673,3.699,674,3.275,675,2.643,676,3.275,677,3.275,678,3.275,679,3.72,680,3.275,681,3.275,682,2.643,683,2.643,684,3.72,685,3.275,686,2.643,687,2.643,688,3.275,689,2.643,690,2.646,691,4.304,692,2.19,693,2.643,694,3.72,695,1.674,696,1.674,697,2.643,698,1.674,699,2.643,700,1.674,701,2.643,702,2.643,703,1.674,704,3.275,705,1.674,706,1.674,707,2.643,708,4.05,709,1.674,710,2.643,711,1.674,712,2.643,713,1.674,714,2.643,715,1.674,716,4.304,717,1.674,718,1.674,719,1.674,720,3.275,721,1.674,722,3.054,723,3.054,724,2.17,725,3.72,726,1.674,727,3.275,728,1.674,729,1.674,730,2.643,731,1.674,732,3.275,733,2.17,734,2.643,735,1.674,736,3.275,737,2.643,738,1.674,739,1.808,740,1.177,741,1.674,742,1.674,743,1.029,744,1.177,745,1.674,746,1.674,747,1.674,748,1.674,749,1.674,750,1.674,751,1.674,752,1.674,753,2.643,754,1.674,755,1.674,756,1.674,757,1.674,758,2.17,759,2.643,760,1.674,761,1.674,762,2.643,763,1.674,764,1.674,765,1.674,766,1.674,767,1.674,768,1.674,769,1.674,770,1.674,771,1.674,772,1.674,773,1.674,774,3.275,775,1.674,776,1.674,777,1.374,778,1.674,779,1.674,780,1.674,781,1.674,782,1.674,783,1.674,784,1.374,785,1.177,786,1.674,787,1.374,788,1.674,789,1.674,790,1.674,791,1.674,792,1.674,793,1.674,794,1.674,795,2.643,796,1.674,797,1.674,798,1.674,799,1.674,800,1.674,801,1.674,802,1.674,803,1.674,804,1.674,805,1.674,806,1.674,807,1.674,808,1.674,809,2.643,810,2.643,811,1.674,812,1.674,813,2.643,814,2.643,815,2.643,816,2.643,817,2.643,818,2.643,819,2.643,820,1.674,821,2.643,822,2.643,823,2.643,824,0.912,825,1.674,826,1.674,827,1.674,828,1.674,829,1.674,830,1.674]],["title/components/DocumentationComponent.html",[76,0.103,174,0.671]],["body/components/DocumentationComponent.html",[3,0.229,4,0.194,5,0.545,7,2.833,8,0.306,19,2.565,20,0.493,22,2.247,23,0.042,24,0.602,25,1.178,30,2.414,31,1.472,35,2.709,42,0.351,43,0.267,49,0.316,54,1.806,55,2.213,58,0.566,59,1.302,63,1.038,65,2.815,67,1.046,73,0.013,74,0.02,75,0.013,76,0.127,77,0.493,78,1.038,79,0.753,80,0.753,81,0.753,82,0.493,86,0.753,87,1.336,88,1.047,89,0.755,91,0.755,93,0.935,98,1.046,99,1.448,108,1.398,110,2.815,118,1.808,123,0.678,125,2.463,126,1.429,131,2.815,138,1.577,146,1.577,150,1.577,154,1.35,162,1.35,163,1.35,165,0.61,166,1.038,167,0.935,168,0.753,169,1.145,170,0.753,171,0.753,172,0.441,173,0.753,174,0.92,175,0.753,176,0.493,177,2.039,178,0.61,179,0.753,180,0.441,181,0.753,182,0.441,183,0.753,184,0.348,185,0.753,186,0.441,187,0.753,188,0.441,189,0.753,190,0.753,225,1.429,239,1.692,270,1.577,293,1.282,295,3.618,303,1.181,306,1.046,307,2.874,308,1.808,315,1.429,371,1.046,398,1.153,436,1.429,520,3.007,521,3.498,524,1.808,554,1.57,557,1.282,564,3.007,565,1.282,567,3.245,613,2.463,614,1.808,630,1.181,662,3.332,669,2.414,690,2.8,733,1.577,784,3.288,787,3.288,824,1.046,831,1.577,832,3.574,833,2.941,834,3.574,835,3.574,836,2.941,837,1.92,838,2.941,839,2.815,840,5.278,841,4.89,842,4.005,843,4.005,844,5.574,845,5.497,846,4.005,847,4.005,848,4.554,849,5.401,850,4.554,851,2.941,852,2.941,853,2.414,854,2.941,855,4.014,856,2.941,857,2.941,858,2.941,859,2.941,860,5.278,861,2.941,862,2.941,863,4.554,864,4.005,865,4.005,866,4.89,867,4.005,868,3.739,869,4.005,870,1.92,871,4.89,872,2.941,873,1.92,874,1.92,875,2.941,876,2.941,877,2.941,878,2.414,879,2.941,880,2.941,881,2.941,882,3.437,883,4.005,884,2.941,885,2.941,886,2.941,887,4.005,888,4.005,889,2.941,890,1.92,891,4.317,892,4.005,893,4.005,894,4.005,895,1.92,896,1.92,897,1.92,898,1.92,899,1.92,900,1.577,901,1.92,902,1.92,903,1.92,904,1.92,905,1.92]],["title/components/FileUploadComponent.html",[76,0.103,180,0.671]],["body/components/FileUploadComponent.html",[3,0.463,4,0.284,5,0.59,8,0.448,9,1.371,10,1.655,17,1.103,20,1.293,22,1.744,23,0.042,24,1.031,25,0.982,26,1.939,31,1.142,42,0.601,43,0.39,45,1.103,48,0.993,49,0.259,58,0.336,59,0.804,60,0.993,73,0.019,74,0.026,75,0.019,76,0.17,77,0.722,78,1.371,79,1.103,80,1.103,81,1.103,82,0.722,84,1.371,85,1.571,86,1.103,87,1.449,88,1.144,89,0.997,91,0.997,93,1.235,99,1.525,103,1.694,104,1.367,105,1.103,108,1.111,118,1.73,123,0.993,148,2.309,165,0.894,166,1.694,167,1.601,168,1.103,169,1.372,170,1.103,171,1.103,172,0.646,173,1.103,174,0.646,175,1.103,176,0.722,177,1.103,178,0.894,179,1.103,180,1.157,181,1.103,182,0.646,183,1.103,184,0.51,185,1.103,186,0.646,187,1.103,188,0.646,189,1.103,190,1.103,239,1.103,266,3.202,293,1.939,299,1.367,330,1.226,398,1.103,467,2.115,516,1.367,517,1.367,522,2.332,527,2.423,554,1.523,555,1.367,563,1.367,565,1.226,662,1.978,692,2.531,743,1.73,744,1.978,785,1.978,824,1.532,839,3.374,882,1.978,900,2.309,906,3.661,907,1.978,908,3.653,909,3.189,910,3.202,911,3.885,912,3.653,913,2.813,914,3.885,915,2.813,916,3.189,917,3.661,918,2.813,919,2.813,920,2.951,921,2.813,922,2.813,923,3.189,924,2.309,925,1.978,926,1.978,927,1.367,928,3.653,929,2.309,930,2.309,931,2.309,932,2.309,933,2.309,934,2.309,935,3.189,936,4.382,937,2.309,938,2.309,939,4.134,940,2.309,941,2.309,942,2.309,943,2.309,944,2.309,945,3.94,946,2.309,947,3.94,948,2.309,949,2.309,950,2.309,951,2.309,952,2.309,953,2.309,954,2.309,955,1.978,956,2.309,957,2.309,958,2.309,959,2.309,960,2.309,961,3.885,962,2.813,963,2.813,964,2.813]],["title/components/HomeComponent.html",[76,0.103,182,0.671]],["body/components/HomeComponent.html",[3,0.334,4,0.283,5,0.507,8,0.447,9,1.367,10,1.928,17,1.098,19,2.527,20,1.471,22,1.74,23,0.042,24,1.029,25,1.091,26,1.935,31,1.14,42,0.572,43,0.389,45,1.098,46,1.361,47,1.722,49,0.187,58,0.334,59,0.801,63,1.567,66,0.989,73,0.019,74,0.026,75,0.019,76,0.157,77,0.719,78,1.367,79,1.098,80,1.098,81,1.098,82,0.719,84,1.367,85,1.567,86,1.098,87,1.448,88,1.143,89,0.994,91,0.994,93,1.231,94,3.645,96,3.645,97,3.121,98,2.418,99,1.523,100,1.969,103,1.691,104,2.68,105,2.188,106,3.18,108,1.27,110,2.723,112,3.18,114,2.723,117,2.3,121,3.18,122,2.109,123,0.989,165,0.89,166,1.367,167,1.231,168,1.098,169,1.37,170,1.098,171,1.098,172,0.644,173,1.098,174,0.644,175,1.098,176,0.719,177,1.518,178,0.89,179,1.098,180,0.644,181,1.098,182,1.101,183,1.098,184,0.508,185,1.098,186,0.644,187,1.098,188,0.644,189,1.098,190,1.098,554,1.74,690,3.278,739,2.444,740,1.969,758,2.3,910,1.722,917,3.121,965,2.3,966,4.44,967,3.874,968,4.44,969,4.44,970,4.44,971,4.44,972,3.874,973,3.874,974,3.874,975,3.874,976,2.801,977,3.874,978,2.801,979,2.801,980,2.801,981,2.801,982,3.874,983,2.801,984,3.874,985,2.801,986,2.801,987,2.801,988,2.801,989,3.874,990,2.801,991,2.801,992,2.801,993,2.801,994,3.933,995,2.801,996,2.3,997,2.801,998,3.874,999,2.801,1000,2.801,1001,2.801,1002,2.801,1003,2.801,1004,3.18]],["title/interfaces/IDocument.html",[739,1.419,927,1.419]],["body/interfaces/IDocument.html",[3,0.49,4,0.414,5,0.414,8,0.654,23,0.041,25,1.23,42,0.49,54,1.956,58,0.49,67,3.018,73,0.028,74,0.034,75,0.028,93,1.578,98,3.018,108,1.743,330,2.325,722,4.551,723,4.551,724,4.551,739,2.412,855,4.551,927,1.995,1005,2.886,1006,3.37,1007,5.336,1008,4.106,1009,3.37]],["title/interfaces/IFile.html",[920,1.796,927,1.419]],["body/interfaces/IFile.html",[3,0.527,4,0.344,5,0.595,8,0.544,10,1.405,23,0.042,25,1.062,42,0.641,43,0.473,45,1.337,48,1.204,49,0.294,58,0.407,59,0.976,60,1.204,73,0.023,74,0.03,75,0.023,76,0.174,84,1.204,85,1.56,87,0.876,88,0.698,89,0.876,91,0.876,93,1.405,99,1.084,103,1.204,108,1.574,118,3.189,166,1.204,167,1.405,180,1.016,266,2.098,293,1.487,330,2.137,398,1.337,516,1.658,517,1.658,522,2.383,527,2.407,554,1.337,555,1.658,563,1.658,565,1.487,692,2.383,743,2.098,744,2.398,785,2.398,824,1.858,839,2.398,882,2.398,906,2.398,907,2.398,908,2.8,909,2.8,910,3.015,912,2.8,916,2.8,917,3.447,920,2.718,923,3.629,924,2.8,925,2.398,926,2.398,927,1.658,928,4.519,929,4.258,930,2.8,931,2.8,932,2.8,933,2.8,934,2.8,935,3.629,936,4.411,937,2.8,938,2.8,939,4.025,940,2.8,941,2.8,942,2.8,943,2.8,944,2.8,945,4.258,946,2.8,947,4.258,948,2.8,949,2.8,950,2.8,951,2.8,952,2.8,953,2.8,954,2.8,955,2.398,956,2.8,957,2.8,958,2.8,959,2.8,960,2.8,1005,2.398]],["title/classes/ItemFlatNode.html",[49,0.195,338,1.59]],["body/classes/ItemFlatNode.html",[0,0.811,1,1.27,3,0.168,4,0.142,5,0.232,8,0.723,10,0.731,20,0.748,23,0.042,24,0.928,25,0.597,31,0.361,35,1.635,42,0.501,43,0.195,48,0.497,49,0.224,54,0.811,55,1.635,58,0.401,59,0.657,60,1.749,63,1.888,66,1.8,73,0.016,74,0.016,75,0.01,76,0.081,82,0.748,84,0.497,85,0.811,87,0.361,88,0.288,89,0.361,91,0.361,93,0.731,99,0.447,103,0.497,105,1.777,108,1.505,126,1.117,147,2.129,169,0.402,184,0.255,197,0.766,225,1.117,231,0.766,232,1.252,239,1.646,255,0.865,256,1.792,258,0.865,273,0.865,291,1.587,292,0.766,293,1.735,294,0.989,295,2.582,296,1.413,297,0.989,298,2.069,299,1.934,300,0.989,301,3.993,302,0.989,303,2.935,304,2.365,305,2.049,306,1.252,307,2.02,308,0.865,309,0.989,314,0.865,315,2.129,320,0.989,329,3.08,330,1.735,334,3.093,336,0.989,337,2.049,338,2.74,341,0.989,343,0.989,346,0.989,348,0.989,349,1.616,351,1.616,355,0.989,358,0.989,360,0.989,361,2.365,362,0.989,364,0.989,366,0.989,368,1.616,371,0.766,372,1.616,373,2.365,374,0.989,375,0.989,376,1.413,377,0.865,378,1.616,379,0.989,380,1.616,381,1.616,382,1.616,383,2.607,384,1.616,385,1.413,386,0.766,387,0.766,388,1.252,389,0.766,390,0.989,391,0.989,392,0.989,393,0.989,394,0.989,395,2.607,396,1.792,397,2.069,398,2.063,399,0.989,400,0.989,401,2.607,402,3.424,403,0.989,404,2.365,405,0.989,406,0.989,407,1.616,408,3.955,409,0.989,410,2.607,411,2.607,412,1.616,413,1.616,414,1.616,415,0.989,416,0.989,417,2.049,418,1.616,419,2.049,420,2.049,421,2.049,422,2.049,423,2.049,424,1.616,425,1.616,426,0.989,427,0.989,428,0.989,429,1.616,430,0.989,431,0.989,432,0.989,433,0.989,434,0.989,435,0.989,436,1.635,437,0.989,438,0.989,439,0.989,440,2.365,441,1.616,442,1.616,443,0.989,444,0.989,445,0.989,446,0.989,447,0.989,448,0.989,449,0.865,450,0.989,451,0.989,452,0.989,453,0.989,454,0.989,455,0.989,456,0.989,457,0.865,458,2.049,459,0.989,460,0.989,461,0.989,462,0.989,463,0.989,464,0.989,465,0.989,466,0.989,467,1.587,468,0.865,469,1.616,470,0.989,471,0.989,472,1.616,473,0.989,474,0.989,475,0.989,476,0.989,477,0.989,478,0.989,479,1.413,480,0.989,481,0.989,482,0.989,483,0.989,484,0.989,485,0.989,486,1.616,487,1.616,488,0.989,489,0.989,490,0.989,491,1.616,492,0.989,493,0.989,494,0.989,495,0.989,496,0.865,497,2.049,498,0.989,499,2.049,500,0.989,501,0.989,502,0.989,503,0.989,504,0.989,505,0.989,506,0.865,507,0.989,508,0.989,509,0.989,510,0.989,511,0.989,512,2.365,513,2.365,514,0.989,515,0.989,516,1.635,517,1.117,518,1.616,519,1.413,520,1.413,521,1.792,522,1.635,523,1.413,524,1.413,525,1.616,526,1.413,527,1.252,528,0.989,529,1.616,530,0.989,531,0.989,532,0.989,533,0.989,534,2.365,535,0.989,536,1.616,537,2.447,538,2.447,539,1.413,540,1.616,541,0.989,542,1.792,543,0.989,544,1.616,545,0.989,546,0.989,547,0.989,548,0.989,549,0.989,550,1.616,551,0.989,552,0.865,553,0.989,554,0.901,555,1.635,556,1.616,557,1.27,558,0.989,559,0.865,560,0.989,561,0.989,562,0.989,563,1.117,564,1.413,565,1.002,566,1.616,567,2.069,568,0.989,569,0.989,570,0.989,571,0.989,572,0.989,573,1.616,574,0.989,575,0.989,576,0.989,577,0.989,578,0.989,579,0.989,580,0.989,581,0.989,582,0.989,583,0.989,584,0.989,585,0.865,586,0.989,587,0.989,588,2.607,589,0.989,590,1.616,591,0.989,592,0.989,593,1.616,594,0.989,595,0.989,596,0.989,597,0.989,598,2.952,599,0.989,600,1.616,601,2.607,602,0.989,603,1.616,604,0.989,605,0.989,606,0.989,607,0.989,608,0.989,609,0.989,610,0.989,611,0.989,612,0.989,613,1.413,614,0.865,615,2.365,616,0.989,617,1.616,618,2.365,619,0.989,620,0.989,621,0.989,622,0.989,623,0.989,624,1.616,625,0.989,626,0.989,627,0.989,628,2.365,629,1.616,630,0.865,631,0.989,632,0.989,633,0.989,634,0.989,635,0.989,636,0.989,637,0.989,638,0.989,639,0.989,640,0.989,1010,1.407,1011,1.407,1012,1.407]],["title/classes/ItemNode.html",[49,0.195,334,1.59]],["body/classes/ItemNode.html",[0,0.815,1,1.275,3,0.169,4,0.143,5,0.233,8,0.724,10,0.734,20,0.593,23,0.042,24,0.93,25,0.473,31,0.363,35,1.64,42,0.502,43,0.196,48,0.499,49,0.225,54,0.815,55,1.64,58,0.403,59,0.66,60,1.752,63,1.89,66,1.802,73,0.016,74,0.016,75,0.01,76,0.082,82,0.751,84,0.499,85,0.815,87,0.363,88,0.29,89,0.363,91,0.363,93,0.734,99,0.45,103,0.499,105,1.78,108,1.507,126,1.122,147,2.133,169,0.404,184,0.256,197,0.77,225,1.122,231,0.77,232,1.257,239,1.65,255,0.87,256,1.798,258,0.87,273,0.87,291,1.593,292,0.77,293,1.739,294,0.994,295,2.588,296,1.42,297,0.994,298,2.076,299,1.939,300,0.994,301,3.996,302,0.994,303,3,304,2.373,305,2.615,306,1.257,307,2.025,308,0.87,309,0.994,314,0.87,315,2.133,320,0.994,329,2.615,330,1.621,334,3.112,336,0.994,337,2.056,338,2.703,341,0.994,343,0.994,346,0.994,348,0.994,349,1.623,351,1.623,355,0.994,358,0.994,360,0.994,361,2.373,362,0.994,364,0.994,366,0.994,368,1.623,371,0.77,372,1.623,373,2.373,374,0.994,375,0.994,376,1.42,377,0.87,378,1.623,379,0.994,380,1.623,381,1.623,382,0.994,383,1.623,384,0.994,385,0.87,386,0.77,387,0.77,388,1.257,389,0.77,390,0.994,391,0.994,392,0.994,393,0.994,394,0.994,395,2.615,396,1.798,397,2.076,398,2.065,399,0.994,400,0.994,401,2.615,402,3.43,403,0.994,404,2.373,405,0.994,406,0.994,407,1.623,408,3.958,409,0.994,410,2.615,411,2.615,412,1.623,413,1.623,414,1.623,415,0.994,416,0.994,417,2.056,418,1.623,419,2.056,420,2.056,421,2.056,422,2.056,423,2.056,424,1.623,425,1.623,426,0.994,427,0.994,428,0.994,429,1.623,430,0.994,431,0.994,432,0.994,433,0.994,434,0.994,435,0.994,436,1.64,437,0.994,438,0.994,439,0.994,440,2.373,441,1.623,442,1.623,443,0.994,444,0.994,445,0.994,446,0.994,447,0.994,448,0.994,449,0.87,450,0.994,451,0.994,452,0.994,453,0.994,454,0.994,455,0.994,456,0.994,457,0.87,458,2.056,459,0.994,460,0.994,461,0.994,462,0.994,463,0.994,464,0.994,465,0.994,466,0.994,467,1.593,468,0.87,469,1.623,470,0.994,471,0.994,472,1.623,473,0.994,474,0.994,475,0.994,476,0.994,477,0.994,478,0.994,479,1.42,480,0.994,481,0.994,482,0.994,483,0.994,484,0.994,485,0.994,486,1.623,487,1.623,488,0.994,489,0.994,490,0.994,491,1.623,492,0.994,493,0.994,494,0.994,495,0.994,496,0.87,497,2.056,498,0.994,499,2.056,500,0.994,501,0.994,502,0.994,503,0.994,504,0.994,505,0.994,506,0.87,507,0.994,508,0.994,509,0.994,510,0.994,511,0.994,512,2.373,513,2.373,514,0.994,515,0.994,516,1.64,517,1.122,518,1.623,519,1.42,520,1.42,521,1.798,522,1.64,523,1.42,524,1.42,525,1.623,526,1.42,527,1.257,528,0.994,529,1.623,530,0.994,531,0.994,532,0.994,533,0.994,534,2.373,535,0.994,536,1.623,537,2.453,538,2.453,539,1.42,540,1.623,541,0.994,542,1.798,543,0.994,544,1.623,545,0.994,546,0.994,547,0.994,548,0.994,549,0.994,550,1.623,551,0.994,552,0.87,553,0.994,554,0.905,555,1.64,556,1.623,557,1.275,558,0.994,559,0.87,560,0.994,561,0.994,562,0.994,563,1.122,564,1.42,565,1.006,566,1.623,567,2.076,568,0.994,569,0.994,570,0.994,571,0.994,572,0.994,573,1.623,574,0.994,575,0.994,576,0.994,577,0.994,578,0.994,579,0.994,580,0.994,581,0.994,582,0.994,583,0.994,584,0.994,585,0.87,586,0.994,587,0.994,588,2.615,589,0.994,590,1.623,591,0.994,592,0.994,593,1.623,594,0.994,595,0.994,596,0.994,597,0.994,598,2.959,599,0.994,600,1.623,601,2.615,602,0.994,603,1.623,604,0.994,605,0.994,606,0.994,607,0.994,608,0.994,609,0.994,610,0.994,611,0.994,612,0.994,613,1.42,614,0.87,615,2.373,616,0.994,617,1.623,618,2.373,619,0.994,620,0.994,621,0.994,622,0.994,623,0.994,624,1.623,625,0.994,626,0.994,627,0.994,628,2.373,629,1.623,630,0.87,631,0.994,632,0.994,633,0.994,634,0.994,635,0.994,636,0.994,637,0.994,638,0.994,639,0.994,640,0.994,1013,1.414,1014,1.414]],["title/components/SearchComponent.html",[76,0.103,186,0.671]],["body/components/SearchComponent.html",[3,0.481,4,0.407,5,0.495,23,0.041,24,1.005,42,0.481,43,0.559,49,0.269,58,0.481,73,0.027,74,0.033,75,0.027,76,0.188,77,1.035,78,1.733,79,1.58,80,1.58,81,1.58,82,1.035,86,1.58,87,1.534,88,1.217,89,1.26,91,1.26,122,3,123,1.423,165,1.281,166,1.733,167,1.56,168,1.58,169,1.575,170,1.58,171,1.58,172,0.926,173,1.58,174,0.926,175,1.58,176,1.035,177,1.58,178,1.281,179,1.58,180,0.926,181,1.58,182,0.926,183,1.58,184,0.731,185,1.58,186,1.266,187,1.58,188,0.926,189,1.58,190,1.58,1015,3.309,1016,5.293,1017,4.909,1018,4.03]],["title/components/SettingsComponent.html",[76,0.103,188,0.671]],["body/components/SettingsComponent.html",[3,0.481,4,0.407,5,0.495,23,0.041,24,1.005,42,0.481,43,0.559,49,0.269,58,0.481,73,0.027,74,0.033,75,0.027,76,0.188,77,1.035,78,1.733,79,1.58,80,1.58,81,1.58,82,1.035,86,1.58,87,1.534,88,1.217,89,1.26,91,1.26,123,1.993,165,1.281,166,1.733,167,1.56,168,1.58,169,1.575,170,1.58,171,1.58,172,0.926,173,1.58,174,0.926,175,1.58,176,1.035,177,1.58,178,1.281,179,1.58,180,0.926,181,1.58,182,0.926,183,1.58,184,0.731,185,1.58,186,0.926,187,1.58,188,1.266,189,1.58,190,1.58,1018,4.03,1019,3.309,1020,5.293,1021,4.909]],["title/injectables/UploadService.html",[0,1.031,692,1.419]],["body/injectables/UploadService.html",[0,1.629,2,2.244,3,0.435,4,0.368,5,0.565,7,1.987,8,0.582,9,1.629,10,1.781,17,1.43,19,2.723,20,1.3,22,1.984,23,0.042,24,1.036,25,1.089,26,2.206,31,1.185,32,3.857,42,0.669,43,0.507,44,3.789,45,1.43,46,1.774,47,2.244,48,1.288,49,0.307,50,2.996,51,2.996,56,2.996,57,2.244,58,0.435,59,1.044,60,1.629,63,1.629,64,3.789,65,2.566,66,1.629,67,1.987,68,2.996,73,0.025,74,0.031,75,0.025,100,2.566,557,1.591,690,2.244,692,2.46,739,2.585,740,2.566,743,2.244,777,3.789,925,2.566,926,2.566,955,2.566,994,4.367,996,3.789,1022,2.996,1023,4.615,1024,4.615,1025,3.65,1026,4.615,1027,3.65,1028,4.615,1029,3.65,1030,3.65,1031,3.65,1032,3.65,1033,3.65,1034,3.65,1035,3.65,1036,3.65,1037,3.65,1038,3.65,1039,3.65,1040,3.65,1041,3.65,1042,3.65]],["title/coverage.html",[1043,3.272]],["body/coverage.html",[0,1.808,1,1.633,5,0.378,6,3.076,23,0.042,25,0.767,46,2.28,49,0.341,66,1.323,73,0.026,74,0.032,75,0.026,76,0.207,77,0.962,83,3.076,125,2.304,172,0.861,174,0.861,176,0.962,178,1.191,180,0.861,182,0.861,184,0.679,186,0.861,188,0.861,266,2.885,272,2.634,274,3.076,291,2.041,292,3.072,334,2.041,338,2.041,386,2.041,389,2.041,398,2.366,641,3.076,670,3.076,671,3.076,673,3.076,692,1.821,739,1.821,824,2.555,831,3.076,906,3.299,907,3.299,920,2.304,927,2.28,965,3.076,1006,3.076,1015,3.076,1019,3.076,1022,3.076,1043,3.076,1044,3.747,1045,3.747,1046,4.693,1047,4.693,1048,3.747,1049,3.747,1050,3.747,1051,3.747,1052,3.747,1053,3.747,1054,3.747,1055,3.747,1056,3.747,1057,3.747,1058,3.747,1059,3.747,1060,3.747,1061,5.641,1062,4.693,1063,3.747,1064,5.641,1065,3.747,1066,3.076,1067,3.076,1068,3.852,1069,3.076,1070,3.076,1071,3.747]],["title/dependencies.html",[194,2.16,1072,2.439]],["body/dependencies.html",[23,0.042,43,0.606,48,1.542,73,0.03,74,0.035,75,0.03,194,2.686,196,3.071,210,4.229,211,3.167,216,3.586,288,3.586,1009,3.586,1073,4.368,1074,4.914,1075,4.368,1076,4.368,1077,4.368,1078,4.368,1079,4.368,1080,4.368,1081,4.368,1082,4.368,1083,4.368,1084,4.368,1085,4.368,1086,4.368,1087,4.368,1088,4.368,1089,4.368]],["title/index.html",[8,0.389,1090,2.439,1091,2.439]],["body/index.html",[4,0.413,23,0.034,24,0.839,66,1.447,73,0.028,74,0.034,75,0.028,76,0.189,88,0.839,128,4.548,131,3.486,206,2.882,280,3.365,296,3.488,496,3.279,853,3.365,868,4.377,878,4.071,910,2.521,1074,3.365,1092,4.099,1093,4.959,1094,4.099,1095,5.332,1096,4.099,1097,4.099,1098,5.673,1099,5.833,1100,4.099,1101,4.099,1102,4.099,1103,4.099,1104,4.099,1105,4.099,1106,4.099,1107,4.099,1108,5.332,1109,4.099,1110,4.099,1111,4.099,1112,4.099,1113,4.099,1114,4.099,1115,4.099,1116,3.365,1117,4.959,1118,5.54,1119,4.099,1120,4.959,1121,4.959,1122,4.099,1123,4.099,1124,4.099,1125,5.332,1126,4.099,1127,4.099,1128,4.099,1129,4.099]],["title/modules.html",[193,2.17]],["body/modules.html",[23,0.037,73,0.032,74,0.037,75,0.032,192,2.885,193,2.555,203,2.555,211,2.885,1004,3.851,1130,4.691,1131,4.691,1132,5.369,1133,4.691]],["title/overview.html",[1134,3.272]],["body/overview.html",[2,2.505,23,0.041,73,0.028,74,0.034,75,0.028,77,1.496,78,1.438,165,1.295,172,1.222,174,1.222,176,1.365,180,1.222,182,1.222,184,0.964,186,1.222,188,1.222,191,2.505,192,3.77,193,2.219,194,2.505,195,3.345,196,2.864,197,2.219,198,2.864,199,3.345,200,3.345,201,3.345,202,3.345,203,2.896,204,4.056,205,3.345,206,2.864,273,2.505,286,2.505,657,4.056,658,4.056,1005,2.864,1134,3.345,1135,4.074,1136,4.074]],["title/routes.html",[286,2.451]],["body/routes.html",[23,0.037,73,0.032,74,0.037,75,0.032,286,2.931]],["title/miscellaneous/variables.html",[1137,2.002,1138,2.883]],["body/miscellaneous/variables.html",[8,0.665,23,0.041,25,1.185,46,2.708,73,0.028,74,0.034,75,0.028,82,1.071,97,3.522,104,2.708,105,2.184,108,1.192,239,1.634,292,2.271,298,2.564,299,2.61,315,2.435,386,2.728,387,2.271,388,2.271,389,2.728,436,2.026,557,2.184,1066,3.423,1067,3.423,1068,3.423,1069,4.113,1070,4.113,1116,4.113,1137,3.423,1138,3.423,1139,5.011,1140,4.17,1141,4.17,1142,5.011,1143,4.17,1144,4.17,1145,4.17,1146,4.17,1147,4.17,1148,4.17,1149,4.17,1150,4.17,1151,4.17,1152,4.17]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":398,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["0.75",{"_index":627,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["0/1",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1046,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1065,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1047,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["1.10.0",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["1.amazonaws.com:5000",{"_index":1151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["100",{"_index":824,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["10px",{"_index":661,"title":{},"body":{"components/DashboardComponent.html":{}}}],["131.compute",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["180",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":657,"title":{},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["200",{"_index":844,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["200px",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["20px",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["25",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":658,"title":{},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["3.5.0",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["3/17",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":461,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["3000",{"_index":538,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["33",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["4.4.1",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":847,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["40em",{"_index":963,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["500",{"_index":849,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["502",{"_index":850,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["52",{"_index":1147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.5.4",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1136,"title":{},"body":{"overview.html":{}}}],["7/44",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8px",{"_index":899,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["9",{"_index":1135,"title":{},"body":{"overview.html":{}}}],["9.1.3",{"_index":1074,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.2.2",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":486,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["_nodedata",{"_index":487,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["_nodedata.expandable",{"_index":488,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["_nodedata.item",{"_index":490,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["abc",{"_index":1036,"title":{},"body":{"injectables/UploadService.html":{}}}],["above",{"_index":632,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["accessors",{"_index":325,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["accordion",{"_index":834,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["accumulator",{"_index":399,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["accumulator.concat(node",{"_index":406,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["action",{"_index":890,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["actual_component",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["add",{"_index":360,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["add_circle",{"_index":823,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["added",{"_index":307,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["addkeywordtodoc",{"_index":676,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["addnewitem(node",{"_index":587,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["adds",{"_index":774,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["adduncategorizeddimension",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{}}}],["adduncategorizeddimension(dim",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{}}}],["adduncategorizedkeyword",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{}}}],["adduncategorizedkeyword(key",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{}}}],["align",{"_index":891,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["already",{"_index":539,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular",{"_index":868,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":742,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["angular/cdk/drag",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/cdk/tree",{"_index":379,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/common",{"_index":1009,"title":{},"body":{"interfaces/IDocument.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["angular/compiler",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentationComponent.html":{}}}],["angular/material/form",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/material/sort",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentViewTableComponent.html":{}}}],["angular/material/table",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentViewTableComponent.html":{}}}],["angular/material/toolbar",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tree",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/platform",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["app",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["app.component",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":77,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appears",{"_index":553,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["application/json",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["apply",{"_index":812,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["applybulkkeywords",{"_index":682,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["applybulkkeywords(keyword",{"_index":697,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["applykeyword",{"_index":683,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["applykeyword(doc",{"_index":699,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["appmodule",{"_index":192,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":272,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":203,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":620,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["arr.findindex((elem",{"_index":561,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["array",{"_index":554,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["artifacts",{"_index":1110,"title":{},"body":{"index.html":{}}}],["assets/img/infinitag1.png",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["assign",{"_index":857,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["assigned",{"_index":854,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["auto",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/FileUploadComponent.html":{}}}],["automated",{"_index":651,"title":{},"body":{"components/DashboardComponent.html":{}}}],["automatically",{"_index":1104,"title":{},"body":{"index.html":{}}}],["available",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{},"modules.html":{}}}],["back",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["backend",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["backendstatus",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["bar",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["basis",{"_index":895,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["behaviorsubject",{"_index":368,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["below",{"_index":629,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["between",{"_index":897,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["body",{"_index":841,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["boolean",{"_index":385,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["bootstrap",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":665,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bottom",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["break",{"_index":947,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["breakpoint",{"_index":677,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["browse",{"_index":1132,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":281,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":296,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"index.html":{}}}],["buildfiletree",{"_index":310,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["buildfiletree(obj",{"_index":328,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["button:focus",{"_index":825,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["buttons",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{}}}],["called",{"_index":517,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["case",{"_index":945,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["catcherror",{"_index":925,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["category",{"_index":304,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["cdkdragdrop",{"_index":373,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["center",{"_index":630,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["change",{"_index":853,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["changed",{"_index":856,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["changekeywords",{"_index":852,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["changes",{"_index":710,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["changes.documents",{"_index":763,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["changes.documents.currentvalue",{"_index":764,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["changes.filter",{"_index":766,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["changes.filter.currentvalue",{"_index":768,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["check",{"_index":1128,"title":{},"body":{"index.html":{}}}],["checked",{"_index":556,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["checklist",{"_index":294,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["checklistdatabase",{"_index":291,"title":{"injectables/ChecklistDatabase.html":{}},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["checks",{"_index":552,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["children",{"_index":305,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["class",{"_index":49,"title":{"classes/AppPage.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["classes",{"_index":273,"title":{},"body":{"classes/AppPage.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"overview.html":{}}}],["cli",{"_index":1095,"title":{},"body":{"index.html":{}}}],["close",{"_index":940,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["cloud_done",{"_index":960,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["cloud_upload",{"_index":956,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["cluster_appmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1106,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":838,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["column",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["columns",{"_index":751,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["communication",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{}}}],["component",{"_index":76,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["components",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["console",{"_index":938,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["console.log(\"postfile",{"_index":1033,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('document",{"_index":958,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["console.log(response",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(value",{"_index":992,"title":{},"body":{"components/HomeComponent.html":{}}}],["const",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["constructor(api",{"_index":326,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{}}}],["constructor(http",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(httpclient",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["constructor(private",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["constructor(uploadservice",{"_index":913,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["container",{"_index":660,"title":{},"body":{"components/DashboardComponent.html":{}}}],["containing",{"_index":922,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["content",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"classes/AppPage.html":{},"components/DocumentationComponent.html":{},"interfaces/IDocument.html":{},"injectables/UploadService.html":{}}}],["context",{"_index":1069,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["convert",{"_index":492,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copypasteitem",{"_index":311,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["copypasteitem(from",{"_index":336,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copypasteitemabove",{"_index":312,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["copypasteitemabove(from",{"_index":341,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copypasteitembelow",{"_index":313,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["copypasteitembelow(from",{"_index":343,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["coverage",{"_index":1043,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createdat",{"_index":818,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["creation_date",{"_index":724,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"interfaces/IDocument.html":{}}}],["currently",{"_index":387,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["currentroot",{"_index":354,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["dashboard",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["dashboard.component.html",{"_index":643,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":642,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.component",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboardcomponent",{"_index":172,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":315,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["data.splice(index",{"_index":795,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["database",{"_index":295,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["database.datachange.subscribe(data",{"_index":478,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["datachange",{"_index":309,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["datasource",{"_index":457,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["date",{"_index":1007,"title":{},"body":{"interfaces/IDocument.html":{}}}],["date().gettime",{"_index":617,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["date(document.creation_date",{"_index":757,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["date:'dd.mm.yy",{"_index":820,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["date:\\'dd.mm.yy",{"_index":830,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["declarations",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":733,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{}}}],["default",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["defines",{"_index":749,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["delete",{"_index":564,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deleted",{"_index":573,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deletedimension(dimension",{"_index":568,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deleteexample",{"_index":869,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["deleteitem",{"_index":316,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["deleteitem(node",{"_index":346,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deletekeyword(keyword",{"_index":574,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deletenode",{"_index":317,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["deletenode(nodes",{"_index":348,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dependencies",{"_index":194,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":293,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deutch",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["dev",{"_index":1101,"title":{},"body":{"index.html":{}}}],["development",{"_index":1097,"title":{},"body":{"index.html":{}}}],["dim",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{}}}],["dimension",{"_index":521,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dimensions",{"_index":863,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["dimformatted",{"_index":529,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dims",{"_index":862,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["direction",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["directives",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1109,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1113,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":811,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["disabled\\'}}apply",{"_index":829,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["display",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["displayed",{"_index":770,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["displayedcolumns",{"_index":678,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["displaying",{"_index":931,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["displays",{"_index":745,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["dist",{"_index":1112,"title":{},"body":{"index.html":{}}}],["doc",{"_index":701,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["doc.id",{"_index":794,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["document",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["document.creation_date",{"_index":756,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["document.id",{"_index":793,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["documentation",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{},"coverage.html":{}}}],["documentation'},{'name",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["documentation.component.html",{"_index":833,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.scss",{"_index":832,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation/documentation.component",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["documentationcomponent",{"_index":174,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documents",{"_index":690,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["documentsurl",{"_index":968,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentview/document",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["documentviewtablecomponent",{"_index":176,"title":{"components/DocumentViewTableComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["doe",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["doesnt",{"_index":605,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dom",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["down",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{}}}],["download",{"_index":972,"title":{},"body":{"components/HomeComponent.html":{}}}],["download(document",{"_index":975,"title":{},"body":{"components/HomeComponent.html":{}}}],["downloadurl",{"_index":969,"title":{},"body":{"components/HomeComponent.html":{}}}],["drag",{"_index":458,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragdropmodule",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["dragnode",{"_index":459,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandoverarea",{"_index":464,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandovernode",{"_index":462,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandovertime",{"_index":463,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandoverwaittimems",{"_index":460,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["drop",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["drop(event",{"_index":579,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dropdim(event",{"_index":510,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dropkey(event",{"_index":514,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["duration",{"_index":537,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dynamic",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1123,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":274,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":279,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":277,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":300,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["edit",{"_index":659,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{}}}],["edit.checked",{"_index":809,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["editediting",{"_index":828,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["editing",{"_index":808,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["elem",{"_index":562,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["element",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["element(by.css('app",{"_index":282,"title":{},"body":{"classes/AppPage.html":{}}}],["element.creation_date",{"_index":819,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.keywords",{"_index":822,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.language",{"_index":816,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.size",{"_index":817,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.title",{"_index":814,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.type",{"_index":815,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["elementref",{"_index":372,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["emptyitem",{"_index":466,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["enabled",{"_index":810,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["end",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["english",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["enter",{"_index":518,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["entered",{"_index":851,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["environment",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.serverurl",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["environments/environment",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["err",{"_index":796,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["error",{"_index":776,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["error(\"method",{"_index":391,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event",{"_index":704,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["event.body",{"_index":959,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["event.container",{"_index":581,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.container.data",{"_index":584,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.currentindex",{"_index":513,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.datatransfer.setdata('foo",{"_index":608,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.datatransfer.setdragimage(this.emptyitem.nativeelement",{"_index":609,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.offsetx",{"_index":622,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.offsety",{"_index":625,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.preventdefault",{"_index":612,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.previouscontainer",{"_index":580,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.previousindex",{"_index":512,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.target.clientheight",{"_index":626,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.target.clientwidth",{"_index":623,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.target.focus",{"_index":769,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["event.total",{"_index":954,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["event.type",{"_index":944,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["events",{"_index":1041,"title":{},"body":{"injectables/UploadService.html":{}}}],["example",{"_index":7,"title":{},"body":{"injectables/ApiService.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"injectables/UploadService.html":{}}}],["execute",{"_index":1120,"title":{},"body":{"index.html":{}}}],["existingnode",{"_index":497,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["existingnode.item",{"_index":500,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["expand",{"_index":614,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["expandable",{"_index":383,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["expansion",{"_index":892,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["export",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{}}}],["exports",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["failed(check",{"_index":937,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["failure",{"_index":885,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["false",{"_index":436,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["fetched",{"_index":865,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["field",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["file.file.name",{"_index":961,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["file.icon",{"_index":939,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["file.name",{"_index":996,"title":{},"body":{"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["file.progress",{"_index":952,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["file.status",{"_index":936,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["filekey",{"_index":842,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["filelist",{"_index":917,"title":{},"body":{"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{}}}],["filename",{"_index":813,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["files",{"_index":910,"title":{},"body":{"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"index.html":{}}}],["files[0",{"_index":993,"title":{},"body":{"components/HomeComponent.html":{}}}],["fileuploadcomponent",{"_index":180,"title":{"components/FileUploadComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fill",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["fills",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["filter",{"_index":691,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["filtered",{"_index":746,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["filtereddata",{"_index":771,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["filterstring",{"_index":970,"title":{},"body":{"components/HomeComponent.html":{}}}],["finding",{"_index":443,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["firefox",{"_index":603,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["fixed",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["flag",{"_index":1115,"title":{},"body":{"index.html":{}}}],["flat",{"_index":441,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatitem",{"_index":382,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode",{"_index":499,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode.expandable",{"_index":503,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode.item",{"_index":501,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode.level",{"_index":502,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnodemap",{"_index":445,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flattened",{"_index":446,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flattreecontrol",{"_index":378,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":475,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flex",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{}}}],["flexbox",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["focus",{"_index":523,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["focus(event",{"_index":702,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["footer",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["form",{"_index":843,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["formatted",{"_index":525,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["formdata",{"_index":994,"title":{},"body":{"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["formdata.append('file",{"_index":995,"title":{},"body":{"components/HomeComponent.html":{}}}],["formdata.append('filekey",{"_index":1034,"title":{},"body":{"injectables/UploadService.html":{}}}],["formdata.append('test",{"_index":1035,"title":{},"body":{"injectables/UploadService.html":{}}}],["formsmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":558,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["from.children",{"_index":421,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["from.children.foreach(child",{"_index":422,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["from.item",{"_index":420,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["front",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["frontend",{"_index":1092,"title":{},"body":{"index.html":{}}}],["functionality",{"_index":648,"title":{},"body":{"components/DashboardComponent.html":{}}}],["further",{"_index":1124,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1108,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1094,"title":{},"body":{"index.html":{}}}],["getchildren",{"_index":484,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getdata",{"_index":370,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["getlevel",{"_index":480,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getparent",{"_index":318,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["getparent(currentroot",{"_index":352,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["getparentfromnodes",{"_index":319,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["getparentfromnodes(node",{"_index":355,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["gets",{"_index":516,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getting",{"_index":1090,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":275,"title":{},"body":{"classes/AppPage.html":{}}}],["getuncategorizeddimensions",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{}}}],["getuncategorizedkeywords",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{}}}],["go",{"_index":1127,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1133,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":663,"title":{},"body":{"components/DashboardComponent.html":{}}}],["h2",{"_index":902,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["handle",{"_index":613,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledragend(event",{"_index":638,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledragover(event",{"_index":611,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledragstart(event",{"_index":596,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledrop(event",{"_index":631,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handlefileinput",{"_index":973,"title":{},"body":{"components/HomeComponent.html":{}}}],["handlefileinput(files",{"_index":977,"title":{},"body":{"components/HomeComponent.html":{}}}],["handles",{"_index":930,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["handling",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["haschild",{"_index":485,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["hasnocontent",{"_index":489,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["header",{"_index":894,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["headers",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{},"injectables/UploadService.html":{}}}],["health",{"_index":875,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["height",{"_index":900,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["hello",{"_index":887,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["help",{"_index":1125,"title":{},"body":{"index.html":{}}}],["helps",{"_index":442,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["hh:mm",{"_index":821,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["home",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["home.component.html",{"_index":967,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":966,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":182,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["html5",{"_index":606,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["http",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://ec2",{"_index":1146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1103,"title":{},"body":{"index.html":{}}}],["http://localhost:5000",{"_index":1152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["httpclientmodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1031,"title":{},"body":{"injectables/UploadService.html":{}}}],["httpevent",{"_index":923,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype",{"_index":924,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype.response",{"_index":957,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype.responseheader",{"_index":948,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype.sent",{"_index":946,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype.uploadprogress",{"_index":951,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpheaders",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["httpoptions",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["httpresponse",{"_index":1030,"title":{},"body":{"injectables/UploadService.html":{}}}],["https://stackoverflow.com/questions/19055264/why",{"_index":604,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["icon",{"_index":929,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["iconpath",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["id",{"_index":855,"title":{},"body":{"components/DocumentationComponent.html":{},"interfaces/IDocument.html":{}}}],["identifier",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["idoc",{"_index":777,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"injectables/UploadService.html":{}}}],["idoc.keywords.includes(keyword",{"_index":778,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["idoc.keywords.push(keyword",{"_index":779,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["idoc.keywords.sort",{"_index":780,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["idoc.title",{"_index":783,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["idocument",{"_index":739,"title":{"interfaces/IDocument.html":{}},"body":{"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["idx",{"_index":935,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["if(!from",{"_index":417,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(!this.isduplicate(this.uncatdimensions",{"_index":532,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(!this.isduplicate(this.uncatkeywords",{"_index":547,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(dimformatted",{"_index":531,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(keyformatted",{"_index":546,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(newitem",{"_index":597,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["ifile",{"_index":920,"title":{"interfaces/IFile.html":{}},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["implemented",{"_index":392,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["implements",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["import",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{}}}],["important",{"_index":901,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["imports",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":866,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["infineon",{"_index":656,"title":{},"body":{"components/DashboardComponent.html":{}}}],["infinitag",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{}}}],["information",{"_index":384,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["initialize",{"_index":320,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"injectables/UploadService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"injectables/UploadService.html":{},"overview.html":{}}}],["input",{"_index":522,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["inputs",{"_index":689,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["insert",{"_index":586,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["inserted",{"_index":451,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insertitem",{"_index":321,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["insertitem(parent",{"_index":358,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insertitemabove",{"_index":322,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["insertitemabove(node",{"_index":362,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insertitembelow",{"_index":323,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["insertitembelow(node",{"_index":364,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["interface",{"_index":927,"title":{"interfaces/IDocument.html":{},"interfaces/IFile.html":{}},"body":{"components/FileUploadComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["interfaces",{"_index":1005,"title":{},"body":{"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"overview.html":{}}}],["interval",{"_index":679,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["isallselected",{"_index":684,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["isduplicate(arr",{"_index":560,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["isexpandable",{"_index":482,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["isnewitem:boolean",{"_index":435,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["item",{"_index":303,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["item's",{"_index":453,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["itemflatnode",{"_index":338,"title":{"classes/ItemFlatNode.html":{}},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["itemnode",{"_index":334,"title":{"classes/ItemNode.html":{}},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["items",{"_index":306,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["itemvalue",{"_index":593,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["jjohn",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["jquery",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":298,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":896,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["karma",{"_index":1122,"title":{},"body":{"index.html":{}}}],["keep",{"_index":447,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["key",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keyformatted",{"_index":544,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keys",{"_index":871,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["keyword",{"_index":542,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keyword).subscribe",{"_index":789,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["keywords",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/IDocument.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywords'},{'name",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["keywords.component.html",{"_index":431,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywords.component.scss",{"_index":432,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywords/keywords.component",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["keywordscomponent",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["language",{"_index":722,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"interfaces/IDocument.html":{}}}],["later",{"_index":495,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["layout",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["learning",{"_index":653,"title":{},"body":{"components/DashboardComponent.html":{}}}],["left",{"_index":898,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["legend",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["level",{"_index":329,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["list",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["listitem",{"_index":337,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["listitem.item",{"_index":419,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["literal",{"_index":1145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["machine",{"_index":652,"title":{},"body":{"components/DashboardComponent.html":{}}}],["make",{"_index":876,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["map",{"_index":440,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["maps",{"_index":494,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["margin",{"_index":669,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["mastertoggle",{"_index":685,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["mat",{"_index":662,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["mataccordion",{"_index":835,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["matbuttonmodule",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglemodule",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["math.round(event.loaded",{"_index":953,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["maticonmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodule",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":376,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["matsnackbarmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["matsort",{"_index":732,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["matsortmodule",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["mattable",{"_index":736,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["mattabledatasource",{"_index":720,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["mattablemodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["mattreeflatdatasource",{"_index":380,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":477,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreeflattener",{"_index":381,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreeflattener(this.transformer",{"_index":470,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreemodule",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":962,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["message",{"_index":883,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["metadata",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["methods",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["miscellaneous",{"_index":1137,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/idocument.model",{"_index":740,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["modified",{"_index":444,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["module",{"_index":191,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":193,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1126,"title":{},"body":{"index.html":{}}}],["moveiteminarray",{"_index":374,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["moveiteminarray(event.container.data",{"_index":582,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["moveiteminarray(this.uncatdimensions",{"_index":511,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["moveiteminarray(this.uncatkeywords",{"_index":515,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mykeywords",{"_index":725,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["name",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["nav",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1102,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":276,"title":{},"body":{"classes/AppPage.html":{}}}],["nested",{"_index":395,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nestednode",{"_index":594,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nestednodemap",{"_index":450,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["new",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"coverage.html":{},"index.html":{}}}],["newdimension",{"_index":433,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newitem",{"_index":408,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newitem:any",{"_index":437,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newitemname",{"_index":454,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newkeyword",{"_index":434,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["ng",{"_index":1099,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":686,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["ngonchanges(changes",{"_index":707,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["ngoninit",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node",{"_index":301,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.children",{"_index":404,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.children.length",{"_index":429,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.expandable",{"_index":483,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.item",{"_index":401,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.level",{"_index":481,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes",{"_index":351,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes.foreach(node",{"_index":428,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes.indexof(nodetodelete",{"_index":426,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes.splice(index",{"_index":427,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodetodelete",{"_index":349,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["none",{"_index":827,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["now",{"_index":649,"title":{},"body":{"components/DashboardComponent.html":{}}}],["null",{"_index":402,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["number",{"_index":330,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["obj",{"_index":335,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["obj[key",{"_index":400,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["object",{"_index":299,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentViewTableComponent.html":{},"injectables/UploadService.html":{}}}],["observe",{"_index":1040,"title":{},"body":{"injectables/UploadService.html":{}}}],["of(idoc",{"_index":781,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["onchanges",{"_index":672,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["ondimenter",{"_index":528,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["oninit",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["onkey",{"_index":687,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["onkey(event",{"_index":712,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["onkeyenter",{"_index":543,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["onselectfile",{"_index":911,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onselectfile(files",{"_index":916,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["open_in_new",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["option.tolowercase().startswith(filter",{"_index":807,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["optional",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["order",{"_index":750,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["otherwise",{"_index":559,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["out",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":826,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["overflow",{"_index":964,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["overview",{"_index":1134,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1072,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["panel",{"_index":893,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["param",{"_index":555,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["parent",{"_index":361,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parent.children",{"_index":407,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parent.children.push(newitem",{"_index":409,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parentnode",{"_index":411,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parentnode.children.splice(parentnode.children.indexof(node",{"_index":413,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parses",{"_index":933,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["patch",{"_index":784,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{}}}],["patchkeywords",{"_index":1023,"title":{},"body":{"injectables/UploadService.html":{}}}],["patchkeywords(idoc",{"_index":1026,"title":{},"body":{"injectables/UploadService.html":{}}}],["path",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["percentagex",{"_index":621,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["percentagey",{"_index":624,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["popper.js",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["post",{"_index":840,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["post(`${environment.serverurl}/upload",{"_index":1038,"title":{},"body":{"injectables/UploadService.html":{}}}],["postexample",{"_index":872,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["postfile",{"_index":1024,"title":{},"body":{"injectables/UploadService.html":{}}}],["postfile(file",{"_index":1028,"title":{},"body":{"injectables/UploadService.html":{}}}],["present",{"_index":540,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["pressed",{"_index":519,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["private",{"_index":467,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["prod",{"_index":1114,"title":{},"body":{"index.html":{}}}],["production",{"_index":1116,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":928,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["project",{"_index":1093,"title":{},"body":{"index.html":{}}}],["promise",{"_index":278,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["protractor",{"_index":280,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providedin",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["providers",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"overview.html":{}}}],["public",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["query",{"_index":860,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["quey",{"_index":864,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["reached",{"_index":861,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["read",{"_index":524,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["reading",{"_index":858,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["readme",{"_index":1129,"title":{},"body":{"index.html":{}}}],["received",{"_index":950,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["record",{"_index":493,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["regarding",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{}}}],["reload",{"_index":1105,"title":{},"body":{"index.html":{}}}],["remaining",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["removed",{"_index":567,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["removeuncategorizeddimension",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeuncategorizeddimension(dim",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeuncategorizedkeyword",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeuncategorizedkeyword(key",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{}}}],["reportprogress",{"_index":1039,"title":{},"body":{"injectables/UploadService.html":{}}}],["representing",{"_index":646,"title":{},"body":{"components/DashboardComponent.html":{}}}],["represents",{"_index":302,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["request",{"_index":565,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["require",{"_index":1070,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":602,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["res",{"_index":790,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["reset",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":949,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["result",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["returns",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["right",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["root",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/UploadService.html":{}}}],["root'},{'name",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["route",{"_index":889,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["routermodule",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":286,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["rows",{"_index":800,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["run",{"_index":1098,"title":{},"body":{"index.html":{}}}],["running",{"_index":878,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["rxjs",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":926,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["same",{"_index":448,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["save",{"_index":591,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["saved",{"_index":846,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["savenode(node",{"_index":592,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["scaffolding",{"_index":1107,"title":{},"body":{"index.html":{}}}],["search",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{}}}],["search'},{'name",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["search(value",{"_index":714,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["search.component.html",{"_index":1017,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":1016,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search.component",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["searchcomponent",{"_index":186,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searches",{"_index":804,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["select",{"_index":585,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selected",{"_index":388,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["selectedkeywords",{"_index":680,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["selectedkwm",{"_index":389,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedparent",{"_index":452,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selection",{"_index":449,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selectionchange(event",{"_index":639,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selectionmodel",{"_index":741,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["selectionmodel(true",{"_index":730,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["selector",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["send",{"_index":527,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["sendfiletoservice",{"_index":912,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["sendfiletoservice(file",{"_index":919,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["sends",{"_index":563,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["sent",{"_index":848,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["serve",{"_index":1100,"title":{},"body":{"index.html":{}}}],["server",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{},"index.html":{}}}],["serverstatus",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["serverurl",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["services/api.service",{"_index":377,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["services/upload.service",{"_index":744,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["setdatasource",{"_index":688,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["settimeout",{"_index":759,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["settings",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1021,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":1020,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["settingscomponent",{"_index":188,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shut",{"_index":886,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["shutting",{"_index":884,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["simplechanges",{"_index":708,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["size",{"_index":723,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"interfaces/IDocument.html":{}}}],["snackbar",{"_index":468,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["software",{"_index":654,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solid",{"_index":667,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solution",{"_index":655,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sort",{"_index":681,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["space",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{}}}],["span')).gettext",{"_index":283,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../keywords.component.ts",{"_index":1142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":641,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:15",{"_index":644,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:19",{"_index":645,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/documentation/documentation.component.ts",{"_index":831,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{}}}],["src/app/documentation/documentation.component.ts:10",{"_index":837,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/documentview/document",{"_index":670,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"coverage.html":{}}}],["src/app/file",{"_index":906,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":965,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:12",{"_index":988,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:13",{"_index":987,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:14",{"_index":980,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:15",{"_index":983,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:16",{"_index":990,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:17",{"_index":985,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:19",{"_index":986,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:21",{"_index":981,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:22",{"_index":974,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:26",{"_index":979,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:34",{"_index":978,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:44",{"_index":976,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/keywords/keywords.component.ts",{"_index":292,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/keywords/keywords.component.ts:101",{"_index":363,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:113",{"_index":365,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:125",{"_index":356,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:13",{"_index":1013,"title":{},"body":{"classes/ItemNode.html":{}}}],["src/app/keywords/keywords.component.ts:136",{"_index":353,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:14",{"_index":1014,"title":{},"body":{"classes/ItemNode.html":{}}}],["src/app/keywords/keywords.component.ts:153",{"_index":367,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:158",{"_index":347,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:163",{"_index":339,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:180",{"_index":342,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:19",{"_index":1011,"title":{},"body":{"classes/ItemFlatNode.html":{}}}],["src/app/keywords/keywords.component.ts:196",{"_index":344,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:20",{"_index":1012,"title":{},"body":{"classes/ItemFlatNode.html":{}}}],["src/app/keywords/keywords.component.ts:21",{"_index":1010,"title":{},"body":{"classes/ItemFlatNode.html":{}}}],["src/app/keywords/keywords.component.ts:213",{"_index":350,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:40",{"_index":345,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:43",{"_index":369,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:45",{"_index":327,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:51",{"_index":357,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:72",{"_index":331,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:91",{"_index":359,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/models/idocument.model.ts",{"_index":1006,"title":{},"body":{"interfaces/IDocument.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts",{"_index":1015,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:16",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:20",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:24",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:28",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:37",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:46",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:55",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/upload.service.ts",{"_index":1022,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/services/upload.service.ts:20",{"_index":1025,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:26",{"_index":1029,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:39",{"_index":1027,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/settings/settings.component.ts",{"_index":1019,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1066,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1067,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1068,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1091,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1045,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":314,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["status",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["stops",{"_index":881,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["stopserver",{"_index":880,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["stored",{"_index":1111,"title":{},"body":{"index.html":{}}}],["string",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":332,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["structured",{"_index":297,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["style",{"_index":666,"title":{},"body":{"components/DashboardComponent.html":{}}}],["styles",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["styleurls",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["sub",{"_index":333,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["subscribe((data",{"_index":397,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["subscribe((event",{"_index":942,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["subscribe((response",{"_index":998,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscribe((value",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["subscribe(res",{"_index":534,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["subscription",{"_index":727,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["succedes",{"_index":566,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["succesfull",{"_index":786,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["succesfully",{"_index":867,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["success",{"_index":882,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["successfully",{"_index":845,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["support",{"_index":1130,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":877,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["svg",{"_index":1131,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":943,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["tab",{"_index":647,"title":{},"body":{"components/DashboardComponent.html":{}}}],["table",{"_index":673,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["table.component",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["table.component.html",{"_index":675,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.scss",{"_index":674,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts",{"_index":671,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:102",{"_index":705,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:116",{"_index":706,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:130",{"_index":718,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:148",{"_index":700,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:169",{"_index":698,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:184",{"_index":713,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:194",{"_index":715,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:30",{"_index":729,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:31",{"_index":693,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:34",{"_index":726,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:36",{"_index":735,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:37",{"_index":738,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:38",{"_index":728,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:39",{"_index":695,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:40",{"_index":696,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:41",{"_index":721,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:42",{"_index":731,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:43",{"_index":719,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:46",{"_index":711,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:60",{"_index":717,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:79",{"_index":709,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:90",{"_index":703,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":748,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["template",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["templateurl",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["term",{"_index":716,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["test",{"_index":1119,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1118,"title":{},"body":{"index.html":{}}}],["thin",{"_index":668,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.addkeywordtodoc(doc",{"_index":788,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.api.adduncategorizeddimension(dimformatted",{"_index":533,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.adduncategorizedkeyword(keyformatted",{"_index":548,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.getuncategorizeddimensions",{"_index":507,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.getuncategorizedkeywords",{"_index":396,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.removeuncategorizeddimension(dimension",{"_index":570,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.removeuncategorizedkeyword(keyword",{"_index":576,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.applykeyword(doc",{"_index":802,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.breakpoint",{"_index":754,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.buildfiletree(value",{"_index":405,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.copypasteitem(child",{"_index":423,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.data.splice(this.data.indexof(node",{"_index":414,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.copypasteitem(this.flatnodemap.get(this.dragnode",{"_index":635,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.copypasteitemabove(this.flatnodemap.get(this.dragnode",{"_index":633,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.copypasteitembelow(this.flatnodemap.get(this.dragnode",{"_index":634,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.datachange.next(tree_data[event[0].value",{"_index":640,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.deleteitem(this.flatnodemap.get(this.dragnode",{"_index":636,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.insertitem(parentnode",{"_index":589,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.updateitem(nestednode",{"_index":595,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datachange.next(this.data",{"_index":410,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datachange.value",{"_index":393,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datasource",{"_index":476,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datasource.data",{"_index":479,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datasource.filter",{"_index":767,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.datasource.filtereddata",{"_index":772,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.datasource.sort",{"_index":760,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.deletenode(node.children",{"_index":430,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.deletenode(this.data",{"_index":416,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.documents",{"_index":758,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{}}}],["this.documents.findindex(document",{"_index":792,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.documents.push(response",{"_index":999,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.documentsurl}/download",{"_index":984,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.documentsurl}/upload",{"_index":989,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.downloadurl}/${document.title",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.dragnode",{"_index":598,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnode.item",{"_index":599,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandoverarea",{"_index":628,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandovernode",{"_index":615,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandovertime",{"_index":618,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandoverwaittimems",{"_index":619,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.files",{"_index":934,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["this.flatnodemap.get(node",{"_index":588,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.flatnodemap.set(flatnode",{"_index":504,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getchildren",{"_index":473,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getlevel",{"_index":471,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getparent(child",{"_index":415,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getparentfromnodes(node",{"_index":412,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.http.delete(`${environment.serverurl}/dims/${dim",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.delete(`${environment.serverurl}/keys/${key",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${environment.serverurl}/dims",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${environment.serverurl}/keys",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${environment.serverurl}/dims",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${environment.serverurl}/keys",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient",{"_index":1037,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.httpclient.delete('/dims/123456",{"_index":870,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.delete('/keys/123456",{"_index":874,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.delete(\\'/dims/123456",{"_index":903,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.delete(\\'/keys/123456",{"_index":905,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.get(this.backendstatus",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["this.httpclient.get(this.documentsurl",{"_index":991,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.httpclient.get(url",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.httpclient.patch(`${environment.serverurl}/changekeywords",{"_index":1042,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.httpclient.post('/keys",{"_index":873,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.post(\\'/keys",{"_index":904,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.post(this.uploadurl",{"_index":997,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.initialize",{"_index":394,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.insertitem(to",{"_index":418,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.insertitemabove(to",{"_index":424,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.insertitembelow(to",{"_index":425,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.isexpandable",{"_index":472,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.isnewitem",{"_index":600,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywords",{"_index":506,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywords.filter(option",{"_index":806,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.nestednodemap.get(node",{"_index":498,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.nestednodemap.set(node",{"_index":505,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newdimension",{"_index":541,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newdimension.trim().tolowercase",{"_index":530,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newitem",{"_index":601,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newkeyword",{"_index":551,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newkeyword.trim().tolowercase",{"_index":545,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.ngoninit",{"_index":765,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.search(event.target.value",{"_index":803,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.selectedkeywords",{"_index":753,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.selection.select(row",{"_index":773,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.selection.selected.foreach(doc",{"_index":801,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.selection.selected.length",{"_index":798,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.serverstatus",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["this.serverurl}/documents",{"_index":982,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.serverurl}/health",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["this.setdatasource",{"_index":752,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.snackbar.open('no",{"_index":799,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.snackbar.open(`${dimension",{"_index":572,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${dimformatted",{"_index":536,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${keyformatted",{"_index":550,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${keyword",{"_index":578,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(err",{"_index":797,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.sort",{"_index":761,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.treecontrol",{"_index":474,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.collapse(node",{"_index":610,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.expand(node",{"_index":590,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.expanddescendants(this.nestednodemap.get(newitem",{"_index":637,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.isexpanded(node",{"_index":616,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treeflattener",{"_index":469,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions",{"_index":508,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions.indexof(dimension",{"_index":569,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions.push(dimformatted",{"_index":535,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions.splice(index",{"_index":571,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords",{"_index":509,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords.indexof(keyword",{"_index":575,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords.push(keyformatted",{"_index":549,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords.splice(index",{"_index":577,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uploadservice.patchkeywords(res).subscribe",{"_index":791,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["thorws",{"_index":775,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["through",{"_index":747,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["throw",{"_index":390,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["throwerror",{"_index":743,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["throwerror('keyword",{"_index":782,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["throwerror(error",{"_index":941,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["tile",{"_index":664,"title":{},"body":{"components/DashboardComponent.html":{}}}],["time",{"_index":1008,"title":{},"body":{"interfaces/IDocument.html":{}}}],["title",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{}}}],["toggle",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["transferarrayitem",{"_index":375,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["transferarrayitem(event.previouscontainer.data",{"_index":583,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["transformer",{"_index":491,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["tree",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["tree_data",{"_index":386,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treecontrol",{"_index":455,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["treeflattener",{"_index":456,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["true",{"_index":557,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":403,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["uncatdimensions",{"_index":438,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["uncategorized",{"_index":520,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["uncatkeywords",{"_index":439,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["undefined",{"_index":694,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["under",{"_index":308,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["unit",{"_index":1117,"title":{},"body":{"index.html":{}}}],["unsuccessful",{"_index":859,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["up",{"_index":879,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["update",{"_index":785,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["updated",{"_index":787,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{}}}],["updateing",{"_index":1032,"title":{},"body":{"injectables/UploadService.html":{}}}],["updateitem",{"_index":324,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["updateitem(node",{"_index":366,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["updates",{"_index":762,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["upload",{"_index":839,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["upload'},{'name",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["upload.component",{"_index":267,"title":{},"body":{"modules/AppModule.html":{}}}],["upload.component.html",{"_index":909,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["upload.component.scss",{"_index":908,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["upload.component.ts",{"_index":907,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["upload.component.ts:25",{"_index":914,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:29",{"_index":915,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:36",{"_index":918,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:50",{"_index":921,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload/file",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["uploading",{"_index":955,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["uploadservice",{"_index":692,"title":{"injectables/UploadService.html":{}},"body":{"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["uploadurl",{"_index":971,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{}}}],["use",{"_index":496,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"index.html":{}}}],["used",{"_index":932,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["uses",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["using",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["value",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["value.status",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["value.tolowercase",{"_index":805,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["var",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["variable",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1138,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1096,"title":{},"body":{"index.html":{}}}],["via",{"_index":1121,"title":{},"body":{"index.html":{}}}],["view",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":371,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["viewchild('emptyitem",{"_index":465,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["viewchild(mataccordion",{"_index":836,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["viewchild(matsort",{"_index":734,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["viewchild(mattable",{"_index":737,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["void",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["welcome",{"_index":650,"title":{},"body":{"components/DashboardComponent.html":{}}}],["well",{"_index":526,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["width",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{}}}],["window.innerwidth",{"_index":755,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["work",{"_index":607,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["works",{"_index":1018,"title":{},"body":{"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["world",{"_index":888,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["yes",{"_index":340,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["zone.js",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addUncategorizedDimension\n                            \n                            \n                                    Public\n                                addUncategorizedKeyword\n                            \n                            \n                                    Public\n                                getUncategorizedDimensions\n                            \n                            \n                                    Public\n                                getUncategorizedKeywords\n                            \n                            \n                                    Public\n                                removeUncategorizedDimension\n                            \n                            \n                                    Public\n                                removeUncategorizedKeyword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addUncategorizedDimension\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUncategorizedDimension(dim)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dim\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addUncategorizedKeyword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUncategorizedKeyword(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUncategorizedDimensions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUncategorizedDimensions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUncategorizedKeywords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUncategorizedKeywords()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeUncategorizedDimension\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUncategorizedDimension(dim)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dim\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeUncategorizedKeyword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUncategorizedKeyword(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\nimport { Observable } from 'rxjs';\n\n/**\n *\n * @class ApiService\n *\n * Service handling communication regarding the keywords with the backend\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  public getUncategorizedDimensions() {\n    return this.http.get(`${environment.serverUrl}/dims`);\n  }\n\n  public getUncategorizedKeywords() {\n    return this.http.get(`${environment.serverUrl}/keys`);\n  }\n\n  public addUncategorizedDimension(dim): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(`${environment.serverUrl}/dims`, { dim: dim }, httpOptions);\n  }\n\n  public addUncategorizedKeyword(key): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(`${environment.serverUrl}/keys`, { key: key }, httpOptions);\n  }\n\n  public removeUncategorizedDimension(dim): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.delete(`${environment.serverUrl}/dims/${dim}`, httpOptions);\n  }\n\n  public removeUncategorizedKeyword(key): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.delete(`${environment.serverUrl}/keys/${key}`, httpOptions);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backendStatus\n                            \n                            \n                                    Public\n                                iconPath\n                            \n                            \n                                    Public\n                                serverStatus\n                            \n                            \n                                    Public\n                                serverUrl\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backendStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.serverUrl}/health`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/img/InfiniTag1.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DOWN'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.serverUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'infinitag'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../environments/environment';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  public title = 'infinitag';\n  public serverUrl = environment.serverUrl;\n  public backendStatus = `${this.serverUrl}/health`;\n  public serverStatus = 'DOWN';\n\n  public iconPath = 'assets/img/InfiniTag1.png';\n\n\n  constructor(private httpClient: HttpClient) {\n  }\n  public ngOnInit(): void {\n    this.httpClient.get(this.backendStatus)\n      .subscribe((value: { status: string }) => {\n        this.serverStatus = value.status;\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      Home\n      Search\n      Settings\n      Keywords\n      Dashboard\n      Documentation\n      \n        API Documentation\n        Front End Documentation open_in_new\n        Back End Documentation open_in_new\n      \n    \n    \n    \n    Server Status: {{serverStatus}}\n      JJohn Doe \n      \n        \n          \n            English\n            Deutch\n          \n        \n      \n\n  \n\n\n\n\n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .fill-remaining-space {\n  /* This fills the remaining space, by using flexbox.\n     Every toolbar row uses a flexbox row layout. */\n  flex: 1 1 auto;\n}\n\n.nav-buttons {\n  display: flex;\n  flex-direction: column;\n  padding-top: 10%;\n}\n.footer {\n    width: 200px;\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Home      Search      Settings      Keywords      Dashboard      Documentation              API Documentation        Front End Documentation open_in_new        Back End Documentation open_in_new                      Server Status: {{serverStatus}}      JJohn Doe                                     English            Deutch                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDocumentViewTableComponent\n\nDocumentViewTableComponent\n\nAppModule -->\n\nDocumentViewTableComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\nAppModule -->\n\nFileUploadComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nKeywordsComponent\n\nKeywordsComponent\n\nAppModule -->\n\nKeywordsComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            DocumentViewTableComponent\n                        \n                        \n                            DocumentationComponent\n                        \n                        \n                            FileUploadComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            KeywordsComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { AppComponent } from './app.component';\nimport { DocumentViewTableComponent } from './documentview/document-view-table.component';\nimport { HomeComponent } from './home/home.component';\nimport { SearchComponent } from './search/search.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\nimport { DocumentationComponent } from './documentation/documentation.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { KeywordsComponent } from './keywords/keywords.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent,\n    SettingsComponent,\n    DocumentViewTableComponent,\n    HomeComponent,\n    FileUploadComponent,\n    DashboardComponent,\n    DocumentationComponent,\n    KeywordsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    MatTableModule,\n    MatSortModule,\n    BrowserAnimationsModule,\n    MatChipsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatListModule,\n    MatProgressBarModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatButtonToggleModule,\n    DragDropModule,\n    MatTreeModule,\n    MatExpansionModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { SearchComponent } from './search/search.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { KeywordsComponent } from './keywords/keywords.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport {DocumentationComponent} from './documentation/documentation.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'search', component: SearchComponent },\n  { path: 'settings', component: SettingsComponent },\n  { path: 'keywords', component: KeywordsComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'documentation', component: DocumentationComponent },\n  { path: '**', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChecklistDatabase.html":{"url":"injectables/ChecklistDatabase.html","title":"injectable - ChecklistDatabase","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChecklistDatabase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/keywords/keywords.component.ts\n        \n\n            \n                Description\n            \n            \n                Checklist database, it can build a tree structured Json object.\nEach node in Json object represents a item or a category.\nIf a node is a category, it has children items and new items can be added under the category.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildFileTree\n                            \n                            \n                                copyPasteItem\n                            \n                            \n                                copyPasteItemAbove\n                            \n                            \n                                copyPasteItemBelow\n                            \n                            \n                                    Static\n                                data\n                            \n                            \n                                deleteItem\n                            \n                            \n                                deleteNode\n                            \n                            \n                                getParent\n                            \n                            \n                                getParentFromNodes\n                            \n                            \n                                initialize\n                            \n                            \n                                insertItem\n                            \n                            \n                                insertItemAbove\n                            \n                            \n                                insertItemBelow\n                            \n                            \n                                updateItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/keywords/keywords.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildFileTree\n                        \n                        \n                    \n                \n            \n            \n                \nbuildFileTree(obj: object, level: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:72\n                \n            \n\n\n            \n                \n                    Build the file structure tree. The value is the Json object, or a sub-tree of a Json object.\nThe return value is the list of ItemNode.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyPasteItem\n                        \n                        \n                    \n                \n            \n            \n                \ncopyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listItem\n                                    \n                                                ItemFlatNode\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyPasteItemAbove\n                        \n                        \n                    \n                \n            \n            \n                \ncopyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listItem\n                                    \n                                                ItemFlatNode\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyPasteItemBelow\n                        \n                        \n                    \n                \n            \n            \n                \ncopyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listItem\n                                    \n                                                ItemFlatNode\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data()\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteItem(node: ItemNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteNode\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteNode(nodes: ItemNode[], nodeToDelete: ItemNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                ItemNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nodeToDelete\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent(currentRoot: ItemNode, node: ItemNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentRoot\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentFromNodes\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentFromNodes(node: ItemNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insertItem\n                        \n                        \n                    \n                \n            \n            \n                \ninsertItem(parent: ItemNode, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:91\n                \n            \n\n\n            \n                \n                    Add an item to list \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insertItemAbove\n                        \n                        \n                    \n                \n            \n            \n                \ninsertItemAbove(node: ItemNode, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insertItemBelow\n                        \n                        \n                    \n                \n            \n            \n                \ninsertItemBelow(node: ItemNode, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateItem\n                        \n                        \n                    \n                \n            \n            \n                \nupdateItem(node: ItemNode, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/keywords/keywords.component.ts:45\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Component, OnInit, Injectable, ViewChild, ElementRef } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '../services/api.service';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Node for item\n */\nexport class ItemNode {\n  children: ItemNode[];\n  item: string;\n}\n\n/** Flatitem node with expandable and level information */\nexport class ItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The Json object for list data.\n */\nlet TREE_DATA: any = [];\n\n/**\n * Currently selected tree data.\n */\nlet selectedKwm: string;\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n  static data(): any {\n    throw new Error(\"Method not implemented.\");\n  }\n  dataChange = new BehaviorSubject([]);\n\n  get data(): ItemNode[] { return this.dataChange.value; }\n\n  constructor(private api: ApiService) {\n    this.initialize();\n  }\n\n  initialize() {\n    //Build the tree nodes from Json object. The result is a list of `ItemNode` with nested\n    //    file node as children.\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n\n      for (var i = 0 ; i ((accumulator, key) => {\n      const value = obj[key];\n      const node = new ItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  /** Add an item to list */\n  insertItem(parent: ItemNode, name: string): ItemNode {\n    if (!parent.children) {\n      parent.children = [];\n    }\n    const newItem = { item: name } as ItemNode;\n    parent.children.push(newItem);\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemAbove(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node), 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemBelow(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node) + 1, 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  getParentFromNodes(node: ItemNode): ItemNode {\n    for (let i = 0; i  0) {\n      for (let i = 0; i  0) {\n          const parent = this.getParent(child, node);\n          if (parent != null) {\n            return parent;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  updateItem(node: ItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n\n  deleteItem(node: ItemNode) {\n    this.deleteNode(this.data, node);\n    this.dataChange.next(this.data);\n  }\n\n  copyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItem(to, listItem.item);\n    } else {\n      newItem = this.insertItem(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItemAbove(to, listItem.item);\n    } else {\n      newItem = this.insertItemAbove(to, from.item);\n    }\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n\n    let newItem;\n    if(!from) {\n      newItem = this.insertItemBelow(to, listItem.item);\n    } else {\n      newItem = this.insertItemBelow(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  deleteNode(nodes: ItemNode[], nodeToDelete: ItemNode) {\n    const index = nodes.indexOf(nodeToDelete, 0);\n    if (index > -1) {\n      nodes.splice(index, 1);\n    } else {\n      nodes.forEach(node => {\n        if (node.children && node.children.length > 0) {\n          this.deleteNode(node.children, nodeToDelete);\n        }\n      });\n    }\n  }\n}\n\n@Component({\n  selector: 'app-keywords',\n  templateUrl: './keywords.component.html',\n  styleUrls: ['./keywords.component.scss'],\n  providers: [ChecklistDatabase]\n})\nexport class KeywordsComponent implements OnInit {\n\n\n  newDimension: string;\n  newKeyword: string;\n  isNewItem:boolean = false;\n  newItem:any;\n  uncatDimensions = []\n  uncatKeywords = []\n  keywords = []\n\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map();\n\n  /** A selected parent node to be inserted */\n  selectedParent: ItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl;\n\n  treeFlattener: MatTreeFlattener;\n\n  dataSource: MatTreeFlatDataSource;\n\n\n  /* Drag and drop */\n  dragNode: any;\n  dragNodeExpandOverWaitTimeMs = 300;\n  dragNodeExpandOverNode: any;\n  dragNodeExpandOverTime: number;\n  dragNodeExpandOverArea: string;\n  @ViewChild('emptyItem') emptyItem: ElementRef;\n\n  constructor(private api: ApiService, private snackBar: MatSnackBar, private database: ChecklistDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = [];\n      this.dataSource.data = data;\n    });\n   }\n\n  getLevel = (node: ItemFlatNode) => node.level;\n\n  isExpandable = (node: ItemFlatNode) => node.expandable;\n\n  getChildren = (node: ItemNode): ItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: ItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: ItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: ItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n      ? existingNode\n      : new ItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = (node.children && node.children.length > 0);\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  ngOnInit(): void {\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n      this.keywords = data;\n    });\n    this.api.getUncategorizedDimensions()\n      .subscribe((data: []) => {\n        this.uncatDimensions = data;\n      });\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.uncatKeywords = data;\n      });\n  }\n\n  dropDim(event: CdkDragDrop) {\n    moveItemInArray(this.uncatDimensions, event.previousIndex, event.currentIndex);\n  }\n\n  dropKey(event: CdkDragDrop) {\n    moveItemInArray(this.uncatKeywords, event.previousIndex, event.currentIndex);\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized dimension\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onDimEnter() {\n    const dimFormatted = this.newDimension.trim().toLowerCase();\n    if(dimFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatDimensions, dimFormatted)) {\n        this.api.addUncategorizedDimension(dimFormatted)\n          .subscribe(res => {\n            this.uncatDimensions.push(dimFormatted)\n            this.snackBar.open(`${dimFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${dimFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newDimension=\"\";\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized keyword\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onKeyEnter() {\n    const keyFormatted = this.newKeyword.trim().toLowerCase();\n    if(keyFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatKeywords, keyFormatted)) {\n        this.api.addUncategorizedKeyword(keyFormatted)\n          .subscribe(res => {\n            this.uncatKeywords.push(keyFormatted)\n            this.snackBar.open(`${keyFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${keyFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newKeyword=\"\";\n  }\n\n  /**\n  * @description\n  * Checks if a value appears in an array\n  * @param array to be checked\n  * @param value to be checked\n  * @returns true if the value was found, false otherwise\n  */\n  private isDuplicate(arr, value) {\n    const index = arr.findIndex((elem) => elem === value);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the dimension is\n  * removed from the list\n  * @param {string} dimension to be removed\n  */\n  public deleteDimension(dimension: string) {\n    const index = this.uncatDimensions.indexOf(dimension);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedDimension(dimension)\n      .subscribe(res => {\n        this.uncatDimensions.splice(index, 1);\n        this.snackBar.open(`${dimension} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the keyword is\n  * removed from the list\n  * @param {string} keyword to be removed\n  */\n  public deleteKeyword(keyword: string) {\n    const index = this.uncatKeywords.indexOf(keyword);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedKeyword(keyword)\n      .subscribe(res => {\n        this.uncatKeywords.splice(index, 1);\n        this.snackBar.open(`${keyword} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: ItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode, '');\n    this.treeControl.expand(node);\n  }\n\n  /** Save the node to database */\n  saveNode(node: ItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this.database.updateItem(nestedNode, itemValue);\n  }\n\n  handleDragStart(event, node, newItem) {\n    if(newItem) {\n      this.dragNode = new ItemFlatNode;\n      this.dragNode.item = node;\n      this.isNewItem = true;\n      this.newItem = this.dragNode;\n    } else {\n      this.dragNode = node;\n    }\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\n    event.dataTransfer.setData('foo', 'bar');\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\n    this.treeControl.collapse(node);\n  }\n\n  handleDragOver(event, node) {\n    event.preventDefault();\n\n    // Handle node expand\n    if (node === this.dragNodeExpandOverNode) {\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\n          this.treeControl.expand(node);\n        }\n      }\n    } else {\n      this.dragNodeExpandOverNode = node;\n      this.dragNodeExpandOverTime = new Date().getTime();\n    }\n\n    // Handle drag area\n    const percentageX = event.offsetX / event.target.clientWidth;\n    const percentageY = event.offsetY / event.target.clientHeight;\n    if (percentageY  0.75) {\n      this.dragNodeExpandOverArea = 'below';\n    } else {\n      this.dragNodeExpandOverArea = 'center';\n    }\n  }\n\n  handleDrop(event, node) {\n    if (node !== this.dragNode) {\n      let newItem: ItemNode;\n      if (this.dragNodeExpandOverArea === 'above') {\n        newItem = this.database.copyPasteItemAbove(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else if (this.dragNodeExpandOverArea === 'below') {\n        newItem = this.database.copyPasteItemBelow(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else {\n        newItem = this.database.copyPasteItem(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      }\n      this.database.deleteItem(this.flatNodeMap.get(this.dragNode));\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\n    }\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n  }\n\n  handleDragEnd(event) {\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n    this.newItem = null;\n    this.isNewItem = false;\n  }\n\n  selectionChange(event){\n    this.database.dataChange.next(TREE_DATA[event[0].value])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:15\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dashboard.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *\n * @class DashboardComponent\n *\n * Component representing the dashboard tab (no functionality right now)\n *\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    Dashboard InfiniTag\n     Welcome to InfiniTag - The automated machine learning software solution of Infineon\n    \n        1\n        2\n        3\n    \n    \n        Edit\n        edit\n    \n    \n\n        \n\n    \n\n\n\n\n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                .container {\n    padding-top: 10px;\n}\nmat-grid-tile{\n    border-style: solid;\n    border-width: thin;\n}\n\n.edit {\n    margin-top: 20px;\n}\n\n.footer {\n    width: 200px;\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n}\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Dashboard InfiniTag     Welcome to InfiniTag - The automated machine learning software solution of Infineon            1        2        3                Edit        edit                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentViewTableComponent.html":{"url":"components/DocumentViewTableComponent.html","title":"component - DocumentViewTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentViewTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/documentview/document-view-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                document-view-table\n            \n\n            \n                styleUrls\n                document-view-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                document-view-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addKeywordToDoc\n                            \n                            \n                                breakpoint\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                interval\n                            \n                            \n                                keywords\n                            \n                            \n                                selectedKeywords\n                            \n                            \n                                selection\n                            \n                            \n                                sort\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyBulkKeywords\n                            \n                            \n                                    Public\n                                applyKeyword\n                            \n                            \n                                    Public\n                                focus\n                            \n                            \n                                    Public\n                                isAllSelected\n                            \n                            \n                                    Public\n                                masterToggle\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onKey\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                    Public\n                                setDatasource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                documents\n                            \n                            \n                                filter\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, uploadService: UploadService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/documentview/document-view-table.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        UploadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        documents\n                    \n                \n                \n                    \n                        Type :         Array | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:40\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyBulkKeywords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyBulkKeywords(keyword)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyKeyword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyKeyword(doc, keyword)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keyword\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    focus(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAllSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the items are selected, false otherwise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            masterToggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    masterToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onKey(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        List of keywords matching search term\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDatasource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDatasource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addKeywordToDoc\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:130\n                            \n                        \n\n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        document\n                                                \n                                                \n                                                        keyword\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breakpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['select', 'title', 'type', 'language', 'size', 'creation_date', 'MyKeywords']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keywords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedKeywords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SelectionModel(true, [])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatTable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatTable, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { IDocument } from '../models/IDocument.model';\n\nimport { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { of, throwError, Observable, Subscription, interval } from 'rxjs';\nimport { ApiService } from '../services/api.service';\n\nimport { UploadService } from '../services/upload.service';\n\n\n/**\n * @class DocumentViewTableComponent\n *\n * Component gets document data from the backend and displays it as a table.\n * The data can be filtered through a search bar and new tags can be added\n * to the documents\n */\n@Component({\n  selector: 'document-view-table',\n  styleUrls: ['document-view-table.component.scss'],\n  templateUrl: 'document-view-table.component.html',\n})\n\nexport class DocumentViewTableComponent implements OnInit, OnChanges {\n\n  keywords: string[] = [];\n  selectedKeywords: string[] = [];\n  constructor(private api: ApiService, private uploadService: UploadService, private snackBar: MatSnackBar) { }\n  // defines order of columns\n  displayedColumns: string[] = ['select', 'title', 'type', 'language', 'size', 'creation_date', 'MyKeywords'];\n\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(MatTable, { static: true }) table: MatTable;\n  interval: Subscription;\n  @Input() documents: Array | undefined;\n  @Input() filter: string | undefined;\n  dataSource = new MatTableDataSource();\n  selection = new SelectionModel(true, []);\n  breakpoint: number;\n\n\n  public ngOnInit() {\n    this.setDatasource();\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.keywords = data;\n        this.selectedKeywords = this.keywords;\n      });\n    this.breakpoint = (window.innerWidth  {\n        document.creation_date = new Date(document.creation_date);\n      });\n\n      this.dataSource.data = this.documents;\n      setTimeout(() => {\n        this.dataSource.sort = this.sort;\n      });\n    }\n  }\n\n\n  /**\n  * @description\n  * Updates the documents list as well as the filter term\n  * @param {SimpleChanges} changes\n  */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.documents) {\n      this.documents = changes.documents.currentValue;\n      this.ngOnInit();\n    }\n\n    if (changes.filter) {\n      this.dataSource.filter = changes.filter.currentValue;\n    }\n  }\n\n  public focus(event) {\n    setTimeout(() => {\n      event.target.focus();\n    }, 0);\n  }\n\n\n  /**\n  * @description\n  * Checks if all currently displayed items are selected\n  * @returns true if the items are selected, false otherwise\n  */\n  public isAllSelected() {\n    const filteredData = this.dataSource.filteredData;\n    for (let i = 0; i  this.selection.select(row));\n  }\n\n  /**\n  * @description\n  * Adds a new keyword to an IDocument object. Thorws an error if the keyword\n  * is already added to the document\n  * @param {IDocument} document\n  * @param {string} keyword\n  * @returns {Observable} Observable of the document\n  */\n  private addKeywordToDoc = (iDoc, keyword): Observable => {\n    if (iDoc.keywords.includes(keyword) === false) {\n      iDoc.keywords.push(keyword);\n      iDoc.keywords.sort();\n      return of(iDoc);\n    } else {\n      return throwError('Keyword already added to ' + iDoc.title);\n    }\n  }\n\n  /**\n  * @description\n  * Adds a keyword to a document, then sends a PATCH request to the backend\n  * to update the document. If the request is succesfull the datasource gets\n  * updated.\n  * @param {IDocument} document\n  * @param {string} keyword\n  */\n  public applyKeyword(doc, keyword) {\n    this.addKeywordToDoc(doc, keyword).subscribe(\n      res => {\n        this.uploadService.patchKeywords(res).subscribe(() => {\n          const index = this.documents.findIndex(document => document.id === doc.id);\n          const data = this.dataSource.data;\n          data.splice(index, 1);\n          this.dataSource.data = data;\n          data.splice(index, 0, doc);\n          this.dataSource.data = data;\n        });\n      },\n      err => this.snackBar.open(err, ``, { duration: 3000 })\n    );\n  }\n\n   /**\n  * @description\n  * Adds a keyword to all selected documents.\n  * @param {string} keyword\n  */\n  public applyBulkKeywords(keyword) {\n    if (this.selection.selected.length === 0) {\n      this.snackBar.open('no rows selected', ``, { duration: 3000 });\n    }\n    this.selection.selected.forEach(doc => {\n      this.applyKeyword(doc, keyword);\n    });\n  }\n\n  /**\n  * @description\n  * Gets called when a key is pressed while the search field for the keywords\n  * is in focus. Updates the filter term.\n  * @param event\n  */\n  public onKey(event) {\n    this.selectedKeywords = this.search(event.target.value);\n  }\n\n  /**\n  * @description\n  * Searches the keywords list for a search term\n  * @param {string} search term\n  * @returns {string[]} List of keywords matching search term\n  */\n  private search(value: string) {\n    const filter = value.toLowerCase();\n    return this.keywords.filter(option => option.toLowerCase().startsWith(filter));\n  }\n}\n\n\n    \n\n    \n        Edit\nEditing is {{edit.checked ? 'enabled' : 'disabled'}}\nApply Keywords\n\n  \n    Search Keywords...\n    \n  \n  {{keyword}}\n\n\n\n\n  \n  \n    \n      \n      \n    \n    \n      \n      \n    \n  \n\n  \n     Filename \n     {{element.title}} \n  \n\n  \n     Type \n     {{element.type}} \n  \n\n  \n     Language \n     {{element.language}} \n  \n\n  \n     Size \n     {{element.size}} \n  \n\n  \n     CreatedAt \n     {{element.creation_date | date:'dd.MM.yy HH:mm'}} \n  \n\n  \n     MyKeywords \n    \n      {{element.keywords}}\n      \n        add_circle\n      \n      \n        \n          Search Keywords...\n          \n        \n        {{keyword}}\n      \n    \n  \n\n  \n  \n\n    \n\n    \n                \n                    document-view-table.component.scss\n                \n                table {\n    width: 100%;\n}\nbutton:focus {\n    outline: none;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'EditEditing is {{edit.checked ? \\'enabled\\' : \\'disabled\\'}}Apply Keywords      Search Keywords...        {{keyword}}                                                     Filename      {{element.title}}          Type      {{element.type}}          Language      {{element.language}}          Size      {{element.size}}          CreatedAt      {{element.creation_date | date:\\'dd.MM.yy HH:mm\\'}}          MyKeywords           {{element.keywords}}              add_circle                              Search Keywords...                          {{keyword}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentViewTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/documentation/documentation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                styleUrls\n                ./documentation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accordion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accordion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAccordion\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatAccordion)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentation/documentation.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ViewChild} from '@angular/core';\nimport {MatAccordion} from '@angular/material/expansion';\n\n@Component({\n  selector: 'app-documentation',\n  templateUrl: './documentation.component.html',\n  styleUrls: ['./documentation.component.scss']\n})\nexport class DocumentationComponent {\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n}\n\n    \n\n    \n        \n\n  API Documentation\n  \n  Expand All\n  Collapse All\n  \n  \n  \n    \n      \n        /upload\n      \n      \n        Upload a document to the backend\n        POST\n      \n    \n    \n      \n      POST\n      \n        Type: Body\n        Parameters:\n          \n            fileKey: Form data with file under the fileKey key.\n          \n        \n        Returns:\n          \n            200: Successfully saved file\n            400: Sent file could not be read\n            500: Sent file could not be saved\n            502: Sent file could not be entered into the database\n          \n        \n      \n    \n    \n  \n    \n    \n      \n        /changekeywords\n      \n      \n        Change keywords assigned to document\n        PATCH\n      \n    \n    \n      \n      PATCH\n      \n        Type: Body\n        Parameters:\n          \n            id: id of the document to be changed\n            keywords: Array of keywords to assign to the document\n          \n        \n        Returns:\n          \n            200: Successfully updated keywords on file\n            400: Reading of request unsuccessful\n            502: Keywords on document could not be updated in database\n          \n        \n      \n    \n    \n  \n    \n    \n      \n        /documents\n      \n      \n        Get documents from database\n        GET\n      \n    \n    \n      \n      GET\n      \n        Type: Query\n        Parameters:\n        \n        Returns:\n          \n            200: Array of all documents in database\n            502: Database could not be reached\n          \n        \n      \n    \n    \n  \n    \n    \n      \n        /dims\n      \n      \n        Handle uncategorized dimensions\n        GET, POST, DELETE\n      \n    \n    \n      \n      GET\n      \n        Type: Quey\n        Parameters:\n        \n        Returns:\n          \n            200: A list of uncategorized dimensions\n            500: Dimensions could not be fetched\n          \n        \n      \n    \n      \n      \n        POST\n        \n          Type: Body\n          Parameters:\n            \n              dim: String indicating the dimension to be added to the database\n            \n          \n          Returns:\n            \n              200: Dimension succesfully added to database\n              500: Dimension not succesfully added to database\n            \n          \n        \n      \n      \n      \n        DELETE\n        \n          Type: Query\n          Parameters:\n            \n              dimension id: String indicating the dimension to be removed to the database\n            \n          \n          Returns:\n            \n              200: Dimension successfully removed from database\n              500: Dimension not successfully removed from database\n            \n          \n          Example (Angular):\n             {{\"\n              export class DeleteExample {\n                constructor(private httpClient: HttpClient) {}\n                ngOnInit() {\n                   this.httpClient.delete('/dims/123456');\n                }\n              }\n            \"}}\n            \n          \n        \n      \n    \n  \n    \n    \n      \n        /keys\n      \n      \n        Handle uncategorized keys\n        GET, POST, DELETE\n      \n    \n    \n      \n      GET\n      \n        Type: Quey\n        Parameters:\n        \n        Returns:\n          \n            200: A list of uncategorized keys\n            500: keys could not be fetched\n          \n        \n      \n    \n      \n      \n        POST\n        \n          Type: Body\n          Parameters:\n            \n              key: String indicating the key to be added to the database\n            \n          \n          Returns:\n            \n              200: key successfully added to database\n              500: key not successfully added to database\n            \n          \n          Example (Angular):\n             {{\"\n              export class PostExample {\n                constructor(private httpClient: HttpClient) {}\n                ngOnInit() {\n                  const key: {\n                    'key': 'my-key',\n                  };\n                  this.httpClient.post('/keys', key);\n                }\n              }\n            \"}}\n            \n          \n        \n      \n      \n      \n        DELETE\n        \n          Type: Query\n          Parameters:\n            \n              dimension id: String indicating the dimension to be removed to the database\n            \n          \n          Returns:\n            \n              200: Dimension successfully removed from database\n              500: Dimension not successfully removed from database\n            \n          \n          Example (Angular):\n             {{\"\n              export class DeleteExample {\n                constructor(private httpClient: HttpClient) {}\n                ngOnInit() {\n                   this.httpClient.delete('/keys/123456');\n                }\n              }\n            \"}}\n            \n          \n        \n      \n    \n  \n    \n    \n      \n        /health\n      \n      \n        Make sure the backend is running\n        GET\n      \n    \n    \n      \n      GET\n      \n        Type: Query\n        Parameters:\n        \n        Returns:\n          {{\" {status: 'UP'} \"}}\n        \n      \n    \n    \n  \n    \n    \n      \n        /stopServer\n      \n      \n        Stops the backend\n        GET\n      \n    \n    \n      \n      GET\n      \n        Type: Query\n        Parameters:\n        \n        Returns:\n\n          \n            Success: {{\" {success: 'True', message: 'Server is shutting down...'} \"}}\n            Failure: {{\" {success: 'False', message: 'Server could not be shut down'} \"}}\n          \n\n        \n      \n    \n    \n  \n    \n    \n      \n        /\n      \n      \n        Hello World Route\n        GET\n      \n    \n    \n      \n      GET\n      \n        Type: Query\n        Parameters:\n        \n        Returns:\n\n          \n            Success: {{\" 'Hello World' \"}}\n          \n\n        \n      \n    \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./documentation.component.scss\n                \n                .example-action-buttons {\n  padding-bottom: 20px;\n}\n\n.example-headers-align .mat-expansion-panel-header-title,\n.example-headers-align .mat-expansion-panel-header-description {\n  flex-basis: 0;\n}\n\n.example-headers-align .mat-expansion-panel-header-description {\n  justify-content: space-between;\n  align-items: center;\n}\n\n.example-headers-align .mat-form-field + .mat-form-field {\n  margin-left: 8px;\n}\n\n.mat-list-item {\n  height: 100% !important;\n}\n\nmat-expansion-panel-header {\n  h2 {\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  API Documentation    Expand All  Collapse All                        /upload                    Upload a document to the backend        POST                          POST              Type: Body        Parameters:                      fileKey: Form data with file under the fileKey key.                          Returns:                      200: Successfully saved file            400: Sent file could not be read            500: Sent file could not be saved            502: Sent file could not be entered into the database                                                        /changekeywords                    Change keywords assigned to document        PATCH                          PATCH              Type: Body        Parameters:                      id: id of the document to be changed            keywords: Array of keywords to assign to the document                          Returns:                      200: Successfully updated keywords on file            400: Reading of request unsuccessful            502: Keywords on document could not be updated in database                                                        /documents                    Get documents from database        GET                          GET              Type: Query        Parameters:                Returns:                      200: Array of all documents in database            502: Database could not be reached                                                        /dims                    Handle uncategorized dimensions        GET, POST, DELETE                          GET              Type: Quey        Parameters:                Returns:                      200: A list of uncategorized dimensions            500: Dimensions could not be fetched                                                POST                  Type: Body          Parameters:                          dim: String indicating the dimension to be added to the database                                Returns:                          200: Dimension succesfully added to database              500: Dimension not succesfully added to database                                                        DELETE                  Type: Query          Parameters:                          dimension id: String indicating the dimension to be removed to the database                                Returns:                          200: Dimension successfully removed from database              500: Dimension not successfully removed from database                                Example (Angular):             {{\"              export class DeleteExample {                constructor(private httpClient: HttpClient) {}                ngOnInit() {                   this.httpClient.delete(\\'/dims/123456\\');                }              }            \"}}                                                                /keys                    Handle uncategorized keys        GET, POST, DELETE                          GET              Type: Quey        Parameters:                Returns:                      200: A list of uncategorized keys            500: keys could not be fetched                                                POST                  Type: Body          Parameters:                          key: String indicating the key to be added to the database                                Returns:                          200: key successfully added to database              500: key not successfully added to database                                Example (Angular):             {{\"              export class PostExample {                constructor(private httpClient: HttpClient) {}                ngOnInit() {                  const key: {                    \\'key\\': \\'my-key\\',                  };                  this.httpClient.post(\\'/keys\\', key);                }              }            \"}}                                                        DELETE                  Type: Query          Parameters:                          dimension id: String indicating the dimension to be removed to the database                                Returns:                          200: Dimension successfully removed from database              500: Dimension not successfully removed from database                                Example (Angular):             {{\"              export class DeleteExample {                constructor(private httpClient: HttpClient) {}                ngOnInit() {                   this.httpClient.delete(\\'/keys/123456\\');                }              }            \"}}                                                                /health                    Make sure the backend is running        GET                          GET              Type: Query        Parameters:                Returns:          {{\" {status: \\'UP\\'} \"}}                                              /stopServer                    Stops the backend        GET                          GET              Type: Query        Parameters:                Returns:                      Success: {{\" {success: \\'True\\', message: \\'Server is shutting down...\\'} \"}}            Failure: {{\" {success: \\'False\\', message: \\'Server could not be shut down\\'} \"}}                                                        /                    Hello World Route        GET                          GET              Type: Query        Parameters:                Returns:                      Success: {{\" \\'Hello World\\' \"}}                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileUploadComponent.html":{"url":"components/FileUploadComponent.html","title":"component - FileUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FileUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/file-upload/file-upload.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-upload\n            \n\n            \n                styleUrls\n                ./file-upload.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                files\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSelectFile\n                            \n                            \n                                    Private\n                                sendFileToService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(uploadService: UploadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/file-upload/file-upload.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        UploadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelectFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelectFile(files: FileList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : FileList from the input html element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sendFileToService\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendFileToService(file: IFile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : IFile object containing the file to be send\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            files\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UploadService } from '../services/upload.service';\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\ninterface IFile {\n  file: File;\n  status: string;\n  progress: number;\n  icon: string;\n}\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\n\n/**\n * @class FileUploadComponent\n *\n * Component handles the file input and displaying the progress\n */\nexport class FileUploadComponent implements OnInit {\n  files: Array = [];\n\n  constructor(private uploadService: UploadService) { }\n\n  public ngOnInit(): void {}\n\n  /**\n   * @description\n   * Gets called when the file input element is used, parses the files and sends them to sendFileToService()\n   * @param {FileList} files: FileList from the input html element\n   */\n  public onSelectFile(files: FileList) {\n    this.files = [];\n    for (let idx = 0; idx  {\n        file.status = \"failed(check console for info)\";\n        file.icon = \"close\";\n        return throwError(error);\n      })\n    ).subscribe((event: HttpEvent) => {\n      switch (event.type) {\n        case HttpEventType.Sent:\n          file.status = \"request send\";\n          break;\n        case HttpEventType.ResponseHeader:\n          file.status = \"response received\";\n          break;\n        case HttpEventType.UploadProgress:\n          //update progress\n          file.progress = Math.round(event.loaded / event.total * 100);\n          file.status = \"uploading...\";\n          file.icon = \"cloud_upload\";\n          break;\n        case HttpEventType.Response:\n          file.status = \"success\";\n          console.log('Document send', event.body);\n          file.icon = \"cloud_done\";\n          break;\n      }\n    })\n  }\n\n}\n\n    \n\n    \n        File Upload\n\n\n\n  \n    {{file.icon}}\n     {{file.file.name}} \n     {{file.status}} \n    \n  \n\n\n    \n\n    \n                \n                    ./file-upload.component.scss\n                \n                \nmat-list {\n    max-height: 40em;\n    overflow: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'File Upload      {{file.icon}}     {{file.file.name}}      {{file.status}}       '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backendStatus\n                            \n                            \n                                    Public\n                                documents\n                            \n                            \n                                    Public\n                                documentsUrl\n                            \n                            \n                                    Public\n                                downloadUrl\n                            \n                            \n                                    Public\n                                filterString\n                            \n                            \n                                    Public\n                                serverStatus\n                            \n                            \n                                    Public\n                                serverUrl\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                uploadUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                download\n                            \n                            \n                                    Public\n                                handleFileInput\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            download\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    download(document: IDocument)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                IDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleFileInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFileInput(files: FileList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backendStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.serverUrl}/health`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            documents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            documentsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.serverUrl}/documents`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            downloadUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.documentsUrl}/download`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DOWN'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.serverUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'infinitag'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploadUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.documentsUrl}/upload`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IDocument } from '../models/IDocument.model';\nimport { environment } from './../../environments/environment';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n  public title = 'infinitag';\n  public serverUrl = environment.serverUrl;\n  public backendStatus = `${this.serverUrl}/health`;\n  public documentsUrl = `${this.serverUrl}/documents`;\n  public uploadUrl = `${this.documentsUrl}/upload`;\n  public downloadUrl = `${this.documentsUrl}/download`;\n\n  public serverStatus = 'DOWN';\n\n  public documents: Array = [];\n  public filterString = '';\n\n  constructor(private httpClient: HttpClient) { }\n\n  public ngOnInit(): void {\n    this.httpClient.get(this.documentsUrl)\n      .subscribe((value: Array) => {\n        console.log(value)\n        this.documents = value;\n      });\n  }\n\n  public handleFileInput(files: FileList) {\n    const file: File = files[0];\n    const formData: FormData = new FormData();\n    formData.append('file', file, file.name);\n    this.httpClient.post(this.uploadUrl, formData)\n      .subscribe((response: IDocument) => {\n        this.documents.push(response);\n      });\n  }\n\n  public download(document: IDocument) {\n    const url = `${this.downloadUrl}/${document.title}`;\n\n    this.httpClient.get(url)\n      .subscribe((response: any) => {\n        console.log(response);\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Search for documents\n      \n    \n  \n  Available Documents\n  \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Search for documents              Available Documents  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDocument.html":{"url":"interfaces/IDocument.html","title":"interface - IDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/IDocument.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creation_date\n                                \n                                \n                                        id\n                                \n                                \n                                        keywords\n                                \n                                \n                                        language\n                                \n                                \n                                        size\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                    \n                                \n                                \n                                    \n                                        creation_date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keywords\n                                    \n                                \n                                \n                                    \n                                        keywords:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Time } from '@angular/common';\n\nexport interface IDocument {\n  content: string;\n  creation_date: Date;\n  id: string;\n  language: string;\n  size: number;\n  keywords: string[];\n  title: string;\n  type: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFile.html":{"url":"interfaces/IFile.html","title":"interface - IFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/file-upload/file-upload.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        file\n                                \n                                \n                                        icon\n                                \n                                \n                                        progress\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UploadService } from '../services/upload.service';\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\ninterface IFile {\n  file: File;\n  status: string;\n  progress: number;\n  icon: string;\n}\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\n\n/**\n * @class FileUploadComponent\n *\n * Component handles the file input and displaying the progress\n */\nexport class FileUploadComponent implements OnInit {\n  files: Array = [];\n\n  constructor(private uploadService: UploadService) { }\n\n  public ngOnInit(): void {}\n\n  /**\n   * @description\n   * Gets called when the file input element is used, parses the files and sends them to sendFileToService()\n   * @param {FileList} files: FileList from the input html element\n   */\n  public onSelectFile(files: FileList) {\n    this.files = [];\n    for (let idx = 0; idx  {\n        file.status = \"failed(check console for info)\";\n        file.icon = \"close\";\n        return throwError(error);\n      })\n    ).subscribe((event: HttpEvent) => {\n      switch (event.type) {\n        case HttpEventType.Sent:\n          file.status = \"request send\";\n          break;\n        case HttpEventType.ResponseHeader:\n          file.status = \"response received\";\n          break;\n        case HttpEventType.UploadProgress:\n          //update progress\n          file.progress = Math.round(event.loaded / event.total * 100);\n          file.status = \"uploading...\";\n          file.icon = \"cloud_upload\";\n          break;\n        case HttpEventType.Response:\n          file.status = \"success\";\n          console.log('Document send', event.body);\n          file.icon = \"cloud_done\";\n          break;\n      }\n    })\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ItemFlatNode.html":{"url":"classes/ItemFlatNode.html","title":"class - ItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/keywords/keywords.component.ts\n        \n\n            \n                Description\n            \n            \n                Flatitem node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Injectable, ViewChild, ElementRef } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '../services/api.service';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Node for item\n */\nexport class ItemNode {\n  children: ItemNode[];\n  item: string;\n}\n\n/** Flatitem node with expandable and level information */\nexport class ItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The Json object for list data.\n */\nlet TREE_DATA: any = [];\n\n/**\n * Currently selected tree data.\n */\nlet selectedKwm: string;\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n  static data(): any {\n    throw new Error(\"Method not implemented.\");\n  }\n  dataChange = new BehaviorSubject([]);\n\n  get data(): ItemNode[] { return this.dataChange.value; }\n\n  constructor(private api: ApiService) {\n    this.initialize();\n  }\n\n  initialize() {\n    //Build the tree nodes from Json object. The result is a list of `ItemNode` with nested\n    //    file node as children.\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n\n      for (var i = 0 ; i ((accumulator, key) => {\n      const value = obj[key];\n      const node = new ItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  /** Add an item to list */\n  insertItem(parent: ItemNode, name: string): ItemNode {\n    if (!parent.children) {\n      parent.children = [];\n    }\n    const newItem = { item: name } as ItemNode;\n    parent.children.push(newItem);\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemAbove(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node), 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemBelow(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node) + 1, 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  getParentFromNodes(node: ItemNode): ItemNode {\n    for (let i = 0; i  0) {\n      for (let i = 0; i  0) {\n          const parent = this.getParent(child, node);\n          if (parent != null) {\n            return parent;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  updateItem(node: ItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n\n  deleteItem(node: ItemNode) {\n    this.deleteNode(this.data, node);\n    this.dataChange.next(this.data);\n  }\n\n  copyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItem(to, listItem.item);\n    } else {\n      newItem = this.insertItem(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItemAbove(to, listItem.item);\n    } else {\n      newItem = this.insertItemAbove(to, from.item);\n    }\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n\n    let newItem;\n    if(!from) {\n      newItem = this.insertItemBelow(to, listItem.item);\n    } else {\n      newItem = this.insertItemBelow(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  deleteNode(nodes: ItemNode[], nodeToDelete: ItemNode) {\n    const index = nodes.indexOf(nodeToDelete, 0);\n    if (index > -1) {\n      nodes.splice(index, 1);\n    } else {\n      nodes.forEach(node => {\n        if (node.children && node.children.length > 0) {\n          this.deleteNode(node.children, nodeToDelete);\n        }\n      });\n    }\n  }\n}\n\n@Component({\n  selector: 'app-keywords',\n  templateUrl: './keywords.component.html',\n  styleUrls: ['./keywords.component.scss'],\n  providers: [ChecklistDatabase]\n})\nexport class KeywordsComponent implements OnInit {\n\n\n  newDimension: string;\n  newKeyword: string;\n  isNewItem:boolean = false;\n  newItem:any;\n  uncatDimensions = []\n  uncatKeywords = []\n  keywords = []\n\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map();\n\n  /** A selected parent node to be inserted */\n  selectedParent: ItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl;\n\n  treeFlattener: MatTreeFlattener;\n\n  dataSource: MatTreeFlatDataSource;\n\n\n  /* Drag and drop */\n  dragNode: any;\n  dragNodeExpandOverWaitTimeMs = 300;\n  dragNodeExpandOverNode: any;\n  dragNodeExpandOverTime: number;\n  dragNodeExpandOverArea: string;\n  @ViewChild('emptyItem') emptyItem: ElementRef;\n\n  constructor(private api: ApiService, private snackBar: MatSnackBar, private database: ChecklistDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = [];\n      this.dataSource.data = data;\n    });\n   }\n\n  getLevel = (node: ItemFlatNode) => node.level;\n\n  isExpandable = (node: ItemFlatNode) => node.expandable;\n\n  getChildren = (node: ItemNode): ItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: ItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: ItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: ItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n      ? existingNode\n      : new ItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = (node.children && node.children.length > 0);\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  ngOnInit(): void {\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n      this.keywords = data;\n    });\n    this.api.getUncategorizedDimensions()\n      .subscribe((data: []) => {\n        this.uncatDimensions = data;\n      });\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.uncatKeywords = data;\n      });\n  }\n\n  dropDim(event: CdkDragDrop) {\n    moveItemInArray(this.uncatDimensions, event.previousIndex, event.currentIndex);\n  }\n\n  dropKey(event: CdkDragDrop) {\n    moveItemInArray(this.uncatKeywords, event.previousIndex, event.currentIndex);\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized dimension\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onDimEnter() {\n    const dimFormatted = this.newDimension.trim().toLowerCase();\n    if(dimFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatDimensions, dimFormatted)) {\n        this.api.addUncategorizedDimension(dimFormatted)\n          .subscribe(res => {\n            this.uncatDimensions.push(dimFormatted)\n            this.snackBar.open(`${dimFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${dimFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newDimension=\"\";\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized keyword\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onKeyEnter() {\n    const keyFormatted = this.newKeyword.trim().toLowerCase();\n    if(keyFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatKeywords, keyFormatted)) {\n        this.api.addUncategorizedKeyword(keyFormatted)\n          .subscribe(res => {\n            this.uncatKeywords.push(keyFormatted)\n            this.snackBar.open(`${keyFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${keyFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newKeyword=\"\";\n  }\n\n  /**\n  * @description\n  * Checks if a value appears in an array\n  * @param array to be checked\n  * @param value to be checked\n  * @returns true if the value was found, false otherwise\n  */\n  private isDuplicate(arr, value) {\n    const index = arr.findIndex((elem) => elem === value);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the dimension is\n  * removed from the list\n  * @param {string} dimension to be removed\n  */\n  public deleteDimension(dimension: string) {\n    const index = this.uncatDimensions.indexOf(dimension);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedDimension(dimension)\n      .subscribe(res => {\n        this.uncatDimensions.splice(index, 1);\n        this.snackBar.open(`${dimension} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the keyword is\n  * removed from the list\n  * @param {string} keyword to be removed\n  */\n  public deleteKeyword(keyword: string) {\n    const index = this.uncatKeywords.indexOf(keyword);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedKeyword(keyword)\n      .subscribe(res => {\n        this.uncatKeywords.splice(index, 1);\n        this.snackBar.open(`${keyword} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: ItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode, '');\n    this.treeControl.expand(node);\n  }\n\n  /** Save the node to database */\n  saveNode(node: ItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this.database.updateItem(nestedNode, itemValue);\n  }\n\n  handleDragStart(event, node, newItem) {\n    if(newItem) {\n      this.dragNode = new ItemFlatNode;\n      this.dragNode.item = node;\n      this.isNewItem = true;\n      this.newItem = this.dragNode;\n    } else {\n      this.dragNode = node;\n    }\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\n    event.dataTransfer.setData('foo', 'bar');\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\n    this.treeControl.collapse(node);\n  }\n\n  handleDragOver(event, node) {\n    event.preventDefault();\n\n    // Handle node expand\n    if (node === this.dragNodeExpandOverNode) {\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\n          this.treeControl.expand(node);\n        }\n      }\n    } else {\n      this.dragNodeExpandOverNode = node;\n      this.dragNodeExpandOverTime = new Date().getTime();\n    }\n\n    // Handle drag area\n    const percentageX = event.offsetX / event.target.clientWidth;\n    const percentageY = event.offsetY / event.target.clientHeight;\n    if (percentageY  0.75) {\n      this.dragNodeExpandOverArea = 'below';\n    } else {\n      this.dragNodeExpandOverArea = 'center';\n    }\n  }\n\n  handleDrop(event, node) {\n    if (node !== this.dragNode) {\n      let newItem: ItemNode;\n      if (this.dragNodeExpandOverArea === 'above') {\n        newItem = this.database.copyPasteItemAbove(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else if (this.dragNodeExpandOverArea === 'below') {\n        newItem = this.database.copyPasteItemBelow(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else {\n        newItem = this.database.copyPasteItem(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      }\n      this.database.deleteItem(this.flatNodeMap.get(this.dragNode));\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\n    }\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n  }\n\n  handleDragEnd(event) {\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n    this.newItem = null;\n    this.isNewItem = false;\n  }\n\n  selectionChange(event){\n    this.database.dataChange.next(TREE_DATA[event[0].value])\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ItemNode.html":{"url":"classes/ItemNode.html","title":"class - ItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/keywords/keywords.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Injectable, ViewChild, ElementRef } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '../services/api.service';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Node for item\n */\nexport class ItemNode {\n  children: ItemNode[];\n  item: string;\n}\n\n/** Flatitem node with expandable and level information */\nexport class ItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The Json object for list data.\n */\nlet TREE_DATA: any = [];\n\n/**\n * Currently selected tree data.\n */\nlet selectedKwm: string;\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n  static data(): any {\n    throw new Error(\"Method not implemented.\");\n  }\n  dataChange = new BehaviorSubject([]);\n\n  get data(): ItemNode[] { return this.dataChange.value; }\n\n  constructor(private api: ApiService) {\n    this.initialize();\n  }\n\n  initialize() {\n    //Build the tree nodes from Json object. The result is a list of `ItemNode` with nested\n    //    file node as children.\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n\n      for (var i = 0 ; i ((accumulator, key) => {\n      const value = obj[key];\n      const node = new ItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  /** Add an item to list */\n  insertItem(parent: ItemNode, name: string): ItemNode {\n    if (!parent.children) {\n      parent.children = [];\n    }\n    const newItem = { item: name } as ItemNode;\n    parent.children.push(newItem);\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemAbove(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node), 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemBelow(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node) + 1, 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  getParentFromNodes(node: ItemNode): ItemNode {\n    for (let i = 0; i  0) {\n      for (let i = 0; i  0) {\n          const parent = this.getParent(child, node);\n          if (parent != null) {\n            return parent;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  updateItem(node: ItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n\n  deleteItem(node: ItemNode) {\n    this.deleteNode(this.data, node);\n    this.dataChange.next(this.data);\n  }\n\n  copyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItem(to, listItem.item);\n    } else {\n      newItem = this.insertItem(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItemAbove(to, listItem.item);\n    } else {\n      newItem = this.insertItemAbove(to, from.item);\n    }\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n\n    let newItem;\n    if(!from) {\n      newItem = this.insertItemBelow(to, listItem.item);\n    } else {\n      newItem = this.insertItemBelow(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  deleteNode(nodes: ItemNode[], nodeToDelete: ItemNode) {\n    const index = nodes.indexOf(nodeToDelete, 0);\n    if (index > -1) {\n      nodes.splice(index, 1);\n    } else {\n      nodes.forEach(node => {\n        if (node.children && node.children.length > 0) {\n          this.deleteNode(node.children, nodeToDelete);\n        }\n      });\n    }\n  }\n}\n\n@Component({\n  selector: 'app-keywords',\n  templateUrl: './keywords.component.html',\n  styleUrls: ['./keywords.component.scss'],\n  providers: [ChecklistDatabase]\n})\nexport class KeywordsComponent implements OnInit {\n\n\n  newDimension: string;\n  newKeyword: string;\n  isNewItem:boolean = false;\n  newItem:any;\n  uncatDimensions = []\n  uncatKeywords = []\n  keywords = []\n\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map();\n\n  /** A selected parent node to be inserted */\n  selectedParent: ItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl;\n\n  treeFlattener: MatTreeFlattener;\n\n  dataSource: MatTreeFlatDataSource;\n\n\n  /* Drag and drop */\n  dragNode: any;\n  dragNodeExpandOverWaitTimeMs = 300;\n  dragNodeExpandOverNode: any;\n  dragNodeExpandOverTime: number;\n  dragNodeExpandOverArea: string;\n  @ViewChild('emptyItem') emptyItem: ElementRef;\n\n  constructor(private api: ApiService, private snackBar: MatSnackBar, private database: ChecklistDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = [];\n      this.dataSource.data = data;\n    });\n   }\n\n  getLevel = (node: ItemFlatNode) => node.level;\n\n  isExpandable = (node: ItemFlatNode) => node.expandable;\n\n  getChildren = (node: ItemNode): ItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: ItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: ItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: ItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n      ? existingNode\n      : new ItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = (node.children && node.children.length > 0);\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  ngOnInit(): void {\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n      this.keywords = data;\n    });\n    this.api.getUncategorizedDimensions()\n      .subscribe((data: []) => {\n        this.uncatDimensions = data;\n      });\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.uncatKeywords = data;\n      });\n  }\n\n  dropDim(event: CdkDragDrop) {\n    moveItemInArray(this.uncatDimensions, event.previousIndex, event.currentIndex);\n  }\n\n  dropKey(event: CdkDragDrop) {\n    moveItemInArray(this.uncatKeywords, event.previousIndex, event.currentIndex);\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized dimension\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onDimEnter() {\n    const dimFormatted = this.newDimension.trim().toLowerCase();\n    if(dimFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatDimensions, dimFormatted)) {\n        this.api.addUncategorizedDimension(dimFormatted)\n          .subscribe(res => {\n            this.uncatDimensions.push(dimFormatted)\n            this.snackBar.open(`${dimFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${dimFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newDimension=\"\";\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized keyword\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onKeyEnter() {\n    const keyFormatted = this.newKeyword.trim().toLowerCase();\n    if(keyFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatKeywords, keyFormatted)) {\n        this.api.addUncategorizedKeyword(keyFormatted)\n          .subscribe(res => {\n            this.uncatKeywords.push(keyFormatted)\n            this.snackBar.open(`${keyFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${keyFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newKeyword=\"\";\n  }\n\n  /**\n  * @description\n  * Checks if a value appears in an array\n  * @param array to be checked\n  * @param value to be checked\n  * @returns true if the value was found, false otherwise\n  */\n  private isDuplicate(arr, value) {\n    const index = arr.findIndex((elem) => elem === value);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the dimension is\n  * removed from the list\n  * @param {string} dimension to be removed\n  */\n  public deleteDimension(dimension: string) {\n    const index = this.uncatDimensions.indexOf(dimension);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedDimension(dimension)\n      .subscribe(res => {\n        this.uncatDimensions.splice(index, 1);\n        this.snackBar.open(`${dimension} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the keyword is\n  * removed from the list\n  * @param {string} keyword to be removed\n  */\n  public deleteKeyword(keyword: string) {\n    const index = this.uncatKeywords.indexOf(keyword);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedKeyword(keyword)\n      .subscribe(res => {\n        this.uncatKeywords.splice(index, 1);\n        this.snackBar.open(`${keyword} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: ItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode, '');\n    this.treeControl.expand(node);\n  }\n\n  /** Save the node to database */\n  saveNode(node: ItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this.database.updateItem(nestedNode, itemValue);\n  }\n\n  handleDragStart(event, node, newItem) {\n    if(newItem) {\n      this.dragNode = new ItemFlatNode;\n      this.dragNode.item = node;\n      this.isNewItem = true;\n      this.newItem = this.dragNode;\n    } else {\n      this.dragNode = node;\n    }\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\n    event.dataTransfer.setData('foo', 'bar');\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\n    this.treeControl.collapse(node);\n  }\n\n  handleDragOver(event, node) {\n    event.preventDefault();\n\n    // Handle node expand\n    if (node === this.dragNodeExpandOverNode) {\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\n          this.treeControl.expand(node);\n        }\n      }\n    } else {\n      this.dragNodeExpandOverNode = node;\n      this.dragNodeExpandOverTime = new Date().getTime();\n    }\n\n    // Handle drag area\n    const percentageX = event.offsetX / event.target.clientWidth;\n    const percentageY = event.offsetY / event.target.clientHeight;\n    if (percentageY  0.75) {\n      this.dragNodeExpandOverArea = 'below';\n    } else {\n      this.dragNodeExpandOverArea = 'center';\n    }\n  }\n\n  handleDrop(event, node) {\n    if (node !== this.dragNode) {\n      let newItem: ItemNode;\n      if (this.dragNodeExpandOverArea === 'above') {\n        newItem = this.database.copyPasteItemAbove(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else if (this.dragNodeExpandOverArea === 'below') {\n        newItem = this.database.copyPasteItemBelow(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else {\n        newItem = this.database.copyPasteItem(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      }\n      this.database.deleteItem(this.flatNodeMap.get(this.dragNode));\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\n    }\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n  }\n\n  handleDragEnd(event) {\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n    this.newItem = null;\n    this.isNewItem = false;\n  }\n\n  selectionChange(event){\n    this.database.dataChange.next(TREE_DATA[event[0].value])\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent { }\n\n    \n\n    \n        search works!\n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'search works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent { }\n\n    \n\n    \n        settings works!\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/upload.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                patchKeywords\n                            \n                            \n                                    Public\n                                postFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/upload.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            patchKeywords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patchKeywords(iDoc: IDocument)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/upload.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iDoc\n                                    \n                                                IDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postFile(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/upload.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { IDocument } from './../models/IDocument.model'\n\n\n/**\n *\n * @class UploadService\n *\n * Service handling uploading and updateing documents\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n\n  constructor(private httpClient: HttpClient) { }\n\n\n  public postFile(file: File): Observable {\n      //console.log(\"postFile\" + file.name)\n      const formData: FormData = new FormData();\n      formData.append('fileKey', file, file.name);\n      //formData.append('test', 'abc');\n      return this.httpClient\n        .post(`${environment.serverUrl}/upload`, formData, {\n          reportProgress: true,\n          observe: 'events'\n        });\n\n  }\n\n  public patchKeywords(iDoc: IDocument): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n\n    return this.httpClient.patch(`${environment.serverUrl}/changekeywords`, iDoc, httpOptions);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/documentation/documentation.component.ts\n            \n            component\n            DocumentationComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/documentview/document-view-table.component.ts\n            \n            component\n            DocumentViewTableComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/file-upload/file-upload.component.ts\n            \n            component\n            FileUploadComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/file-upload/file-upload.component.ts\n            \n            interface\n            IFile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            component\n            KeywordsComponent\n            \n                15 %\n                (7/44)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            class\n            ItemFlatNode\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            class\n            ItemNode\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            injectable\n            ChecklistDatabase\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            variable\n            selectedKwm\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            variable\n            TREE_DATA\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/IDocument.model.ts\n            \n            interface\n            IDocument\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/upload.service.ts\n            \n            injectable\n            UploadService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.3\n        \n            @angular/cdk : ^9.2.2\n        \n            @angular/common : ~9.1.3\n        \n            @angular/compiler : ~9.1.3\n        \n            @angular/core : ~9.1.3\n        \n            @angular/forms : ~9.1.3\n        \n            @angular/material : ^9.1.3\n        \n            @angular/platform-browser : ~9.1.3\n        \n            @angular/platform-browser-dynamic : ~9.1.3\n        \n            @angular/router : ~9.1.3\n        \n            bootstrap : ^4.4.1\n        \n            jquery : ^3.5.0\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated with Angular CLI version 9.1.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDocumentViewTableComponent\n\nDocumentViewTableComponent\n\nAppModule -->\n\nDocumentViewTableComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\nAppModule -->\n\nFileUploadComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nKeywordsComponent\n\nKeywordsComponent\n\nAppModule -->\n\nKeywordsComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            selectedKwm   (src/.../keywords.component.ts)\n                        \n                        \n                            TREE_DATA   (src/.../keywords.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  serverUrl: 'http://ec2-52-87-180-131.compute-1.amazonaws.com:5000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  serverUrl: 'http://localhost:5000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/keywords/keywords.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectedKwm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        Currently selected tree data.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TREE_DATA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        The Json object for list data.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,1.498,1,1.612]],["body/injectables/ApiService.html",[0,1.652,1,2.122,2,1.679,3,0.177,4,0.154,5,0.154,6,2.126,7,1.679,8,0.154,9,1.255,10,1.684,11,3.738,12,3.738,13,3.738,14,3.738,15,3.738,16,3.738,17,4.939,18,4.939,19,4.939,20,3.738,21,4.939,22,4.939,23,4.939,24,3.738,25,3.738,26,3.738,27,0.647,28,2.515,29,2.75,30,1.575,31,2.515,32,1.708,33,0.027,34,1.395,35,0.511,36,1.951,37,3.738,38,3.738,39,2.941,40,2.515,41,2.27,42,1.79,43,5.371,44,3.738,45,2.515,46,3.772,47,3.738,48,2.515,49,2.709,50,3.738,51,3.299,52,2.515,53,1.679,54,3.738,55,1.039,56,2.515,57,2.496,58,3.738,59,3.525,60,3.299,61,3.299,62,5.278,63,5.728,64,5.278,65,4.939,66,2.515,67,1.4,68,1.112,69,2.98,70,1.652,71,3.161,72,1.714,73,3.738,74,4.939,75,2.515,76,2.515,77,2.515,78,3.738,79,2.515,80,2.515,81,2.515,82,2.515,83,3.738,84,2.515,85,3.738,86,2.515,87,3.738,88,2.515,89,0.668,90,0.391,91,5.084,92,1.527,93,1.4,94,1.679,95,1.196,96,1.871,97,2.515,98,0.411,99,1.871,100,1.871,101,2.126,102,2.126,103,1.652,104,0.739,105,2.126,106,2.126,107,0.739,108,1.527,109,1.871,110,1.291,111,0.177,112,1.196,113,3.095,114,2.515,115,2.515,116,2.515,117,2.515,118,3.738,119,3.205,120,2.515,121,3.926,122,3.738,123,2.515,124,2.515,125,2.055,126,3.161,127,2.515,128,2.515,129,2.515,130,2.515,131,2.515,132,5.421,133,4.472,134,2.113,135,2.724,136,4.843,137,2.515,138,2.515,139,2.515,140,2.515,141,2.515,142,2.515,143,1.871,144,1.527,145,2.515,146,2.515,147,2.515,148,2.515,149,2.515,150,2.515,151,2.515,152,2.515,153,2.515,154,2.515,155,2.515,156,2.515,157,2.515,158,2.515,159,2.126,160,1.679,161,0.009,162,0.014,163,0.009]],["title/components/AppComponent.html",[164,0.337,165,1.065]],["body/components/AppComponent.html",[1,1.34,3,0.198,4,0.172,5,0.318,8,0.172,9,1.364,10,1.663,27,1.045,29,3.206,30,1.53,32,1.311,33,0.027,34,1.242,35,0.484,36,1.276,42,1.118,55,0.86,67,3.305,68,2.624,71,2.382,89,0.695,90,0.439,92,1.711,93,1.569,94,1.882,98,0.31,104,1.194,110,2.086,111,0.198,125,0.946,161,0.01,162,0.015,163,0.01,164,0.474,165,1.638,166,1.561,167,1.16,168,1.711,169,1.16,170,1.012,171,2.382,172,2.467,173,2.893,174,1.012,175,1.602,176,1.561,177,2.086,178,4.764,179,1.118,180,4.062,181,0.632,182,4.764,183,4.028,184,4.764,185,4.764,186,4.674,187,3.544,188,2.446,189,2.298,190,4.062,191,2.903,192,2.382,193,2.124,194,4.062,195,4.062,196,2.817,197,1.245,198,1.401,199,2.817,200,5.528,201,4.062,202,2.817,203,3.435,204,2.817,205,4.062,206,2.817,207,3.022,208,2.817,209,3.435,210,2.817,211,2.467,212,2.817,213,2.817,214,0.946,215,0.946,216,1.711,217,1.34,218,2.096,219,1.34,220,2.817,221,2.817,222,4.764,223,2.817,224,2.817,225,2.817,226,2.652,227,2.817,228,2.817,229,2.096,230,1.569,231,2.817,232,2.817,233,2.817,234,4.062,235,4.062,236,4.062,237,6.075,238,2.262,239,4.062,240,4.409,241,5.214,242,4.062,243,4.062,244,4.062,245,4.062,246,4.062,247,4.062,248,4.062,249,4.062,250,2.817,251,3.435,252,3.435,253,2.817,254,2.817,255,4.062,256,2.817,257,4.062,258,2.817,259,2.817,260,3.182,261,2.382,262,2.817,263,2.382,264,2.096,265,2.382,266,2.382,267,2.096,268,2.096,269,2.382,270,2.893,271,2.382,272,2.096,273,2.382,274,2.096,275,2.713,276,3.435,277,2.096,278,2.096,279,2.817,280,2.096,281,2.817,282,2.817,283,1.882,284,2.817,285,1.569,286,2.382,287,1.569,288,1.447,289,1.012,290,1.459,291,1.561,292,0.828,293,1.872,294,1.16,295,1.16,296,0.828,297,1.083,298,2.147,299,0.828,300,1.16,301,0.828,302,1.16,303,0.828,304,1.459,305,1.16,306,0.946,307,0.885,308,1.16,309,0.828,310,0.946,311,0.885,312,1.16,313,0.828,314,1.083,315,0.775,316,1.16,317,0.775,318,0.946,319,0.946,320,1.16,321,0.828,322,0.775,323,0.946,324,0.828,325,1.16,326,0.828,327,1.083,328,1.16]],["title/modules/AppModule.html",[329,2.264,330,2.264]],["body/modules/AppModule.html",[3,0.178,4,0.155,5,0.23,29,2.496,33,0.027,89,0.848,90,0.395,92,1.54,98,0.279,104,0.746,111,0.264,113,1.206,134,0.911,161,0.009,162,0.014,163,0.009,165,1.978,176,0.61,197,1.121,211,1.54,214,1.665,215,0.852,287,1.412,289,0.911,296,1.632,299,1.632,301,1.632,303,1.632,304,0.911,306,1.863,307,0.797,309,1.632,311,1.743,313,1.632,315,1.527,317,1.527,319,1.863,321,1.632,324,1.632,326,1.632,329,1.694,330,4.638,331,1.54,332,1.694,333,3.791,334,3.335,335,2.512,336,1.54,337,2.144,338,2.144,339,2.144,340,2.144,341,3.369,342,4.479,343,3.18,344,2.144,345,2.512,346,1.886,347,3.18,348,2.144,349,3.791,350,1.694,351,1.886,352,2.144,353,1.886,354,3.18,355,2.144,356,2.144,357,2.144,358,2.144,359,2.144,360,2.144,361,2.284,362,5.095,363,1.886,364,1.694,365,1.302,366,2.144,367,3.791,368,2.144,369,2.798,370,2.144,371,2.144,372,2.284,373,2.144,374,2.144,375,2.144,376,2.144,377,2.144,378,2.144,379,2.144,380,3.18,381,2.144,382,2.144,383,2.144,384,2.144,385,2.144,386,2.144,387,1.694,388,3.18,389,3.18,390,2.144,391,2.144,392,2.144,393,2.144,394,2.144,395,2.144,396,2.144,397,2.144,398,2.144,399,2.144,400,2.144,401,2.144,402,2.144,403,2.144,404,2.144,405,2.144,406,2.144,407,2.144,408,2.144,409,2.144,410,2.144,411,2.144,412,1.886,413,2.144,414,2.144,415,1.694,416,2.144,417,2.144,418,2.144,419,3.761,420,2.798,421,1.54,422,3.18,423,2.536,424,3.761,425,3.761,426,3.761,427,1.694,428,3.761,429,2.536,430,3.761,431,2.536,432,3.761,433,2.536,434,3.761,435,2.536,436,3.761,437,2.536,438,3.761,439,2.536,440,3.761,441,1.886,442,2.512,443,3.761,444,2.536,445,3.761,446,3.761,447,3.761,448,2.144,449,3.761,450,2.536,451,1.412,452,3.761,453,2.536,454,3.761,455,2.536,456,3.761,457,2.536,458,3.761,459,2.536,460,3.761,461,3.761,462,3.761,463,2.536,464,3.761,465,2.536,466,3.761,467,1.886,468,1.694,469,3.761,470,1.886,471,3.761,472,0.852,473,3.761,474,2.144,475,3.761,476,2.536,477,3.761,478,2.144,479,3.761,480,2.536,481,2.536,482,2.536,483,2.536,484,2.536,485,2.536,486,2.144,487,2.144,488,2.144,489,2.536,490,2.144,491,3.18,492,3.761,493,2.536,494,2.536,495,1.886,496,2.536,497,3.18,498,2.144,499,3.761,500,2.536,501,2.144,502,2.536,503,2.536,504,2.536,505,2.536,506,2.536,507,1.886,508,2.536,509,1.694,510,2.144,511,1.886,512,1.886,513,4.194,514,2.536,515,1.694,516,2.144,517,2.536,518,2.536,519,2.536,520,2.536,521,1.886,522,2.536,523,2.536,524,2.536]],["title/classes/AppPage.html",[98,0.373,525,2.521]],["body/classes/AppPage.html",[3,0.354,4,0.308,5,0.308,8,0.308,9,2,30,1.433,33,0.026,42,1.639,89,0.609,98,0.554,110,2.589,111,0.354,113,2.834,135,2.398,161,0.019,162,0.022,163,0.019,291,1.938,421,3.062,525,4.431,526,3.368,527,4.264,528,6.552,529,6.552,530,5.042,531,6.777,532,5.042,533,4.264,534,5.042,535,5.042,536,5.042]],["title/modules/AppRoutingModule.html",[329,2.264,341,2.058]],["body/modules/AppRoutingModule.html",[3,0.283,4,0.246,5,0.246,33,0.027,89,0.774,90,0.627,98,0.443,103,1.779,111,0.283,125,1.352,161,0.015,162,0.019,163,0.015,164,0.623,197,1.779,211,2.444,299,1.686,301,1.524,303,1.524,304,1.445,315,1.426,331,2.444,336,2.444,341,3.148,345,2.689,347,3.404,348,3.404,349,4.848,350,2.689,351,2.994,352,3.404,353,2.994,354,4.383,355,3.404,356,3.404,357,3.404,358,3.404,359,3.404,360,3.404,361,3.148,362,5.647,363,2.994,364,3.462,365,2.067,366,3.404,367,4.848,368,3.404,369,3.856,370,3.404,371,3.404,372,3.148,373,3.404,374,3.404,375,3.404,376,3.404,377,3.404,378,3.404,379,3.404,380,4.383,381,3.404,382,3.404,383,3.404,384,3.404,385,3.404,386,3.404,387,2.689,388,4.383,389,4.383,390,3.404,391,3.404,392,3.404,393,3.404,394,3.404,395,3.404,396,3.404,397,3.404,398,3.404,399,3.404,400,3.404,401,3.404,402,3.404,403,3.404,404,3.404,405,3.404,406,3.404,407,3.404,408,3.404,409,3.404,410,3.404,411,3.404,412,2.994,413,3.404,414,3.404,415,2.689,416,3.404,417,3.404,418,3.404,422,4.383,486,3.404,487,3.404,488,3.404,509,2.689,510,3.404,537,4.026,538,4.026,539,3.83,540,5.184,541,3.404,542,6.265,543,2.241,544,4.026]],["title/components/AutomatedTaggingParametersDialog.html",[164,0.337,296,0.997]],["body/components/AutomatedTaggingParametersDialog.html",[3,0.254,4,0.221,5,0.355,8,0.221,9,1.624,10,1.574,27,1.245,30,1.457,32,1.599,33,0.026,34,1.305,35,0.463,36,1.138,42,0.996,89,0.657,90,0.564,98,0.398,104,1.974,107,1.78,111,0.34,161,0.013,162,0.018,163,0.013,164,0.542,165,1.138,166,1.858,167,1.491,169,1.491,170,1.3,174,1.3,175,1.653,176,1.625,179,1.331,181,0.753,189,2.321,193,2.327,198,1.422,214,1.216,215,1.216,289,1.3,290,1.737,291,1.858,292,1.065,293,2.087,294,1.491,295,1.491,296,1.709,297,2.327,298,2.393,299,1.065,300,1.491,301,1.065,302,1.491,303,1.065,304,1.737,305,1.491,306,1.216,307,1.138,308,1.491,309,1.065,310,1.216,311,1.138,312,1.491,313,1.065,314,1.392,315,0.996,316,1.491,317,0.996,318,1.216,319,1.216,320,1.491,321,1.065,322,1.498,323,1.216,324,1.065,325,1.491,326,1.065,327,1.392,328,1.491,472,1.216,545,4.634,546,2.694,547,4.09,548,2.087,549,4.323,550,2.199,551,2.327,552,2.88,553,3.621,554,3.621,555,2.016,556,2.138,557,3.621,558,3.621,559,3.621,560,1.392,561,1.392,562,0.36,563,3.062,564,2.016,565,3.062,566,1.624,567,3.062,568,2.694,569,4.836,570,4.836,571,4.836,572,4.836,573,4.836,574,2.937,575,4.09]],["title/components/DashboardComponent.html",[164,0.337,299,0.997]],["body/components/DashboardComponent.html",[1,2.025,3,0.133,4,0.116,5,0.26,7,1.267,8,0.184,9,1.01,27,0.488,30,1.487,32,0.828,33,0.027,34,1.322,35,0.516,36,0.596,42,0.522,55,0.723,67,3.221,68,2.85,70,1.882,89,0.452,90,0.295,98,0.331,104,0.885,106,3.926,107,1.757,111,0.133,112,0.902,134,1.86,135,2.025,161,0.007,162,0.011,163,0.007,164,0.424,165,0.596,166,1.156,167,0.781,168,1.152,169,0.781,170,0.681,172,1.827,173,2.271,174,0.681,175,1.5,176,1.437,177,1.545,179,0.828,181,0.468,188,2.537,189,1.01,191,2.37,197,0.838,198,0.558,211,1.827,216,1.152,219,0.902,226,1.056,229,1.411,238,1.675,260,2.844,264,2.782,265,1.604,266,1.604,267,2.238,268,2.782,269,1.604,270,2.585,271,1.604,272,1.411,273,1.604,274,3.676,275,3.101,276,3.163,283,2.844,285,1.056,288,0.974,289,1.08,290,1.08,291,1.156,292,0.558,293,2.257,294,0.781,295,0.781,296,0.558,297,0.729,298,1.753,299,1.365,300,0.781,301,0.558,302,0.781,303,0.558,304,1.86,305,0.781,306,0.637,307,0.596,308,0.781,309,0.558,310,0.637,311,0.596,312,0.781,313,0.558,314,0.729,315,0.522,316,0.781,317,0.522,318,0.637,319,0.637,320,0.781,321,0.558,322,0.522,323,0.637,324,0.558,325,0.781,326,0.558,327,0.729,328,0.781,350,1.267,351,1.411,420,1.411,421,1.152,442,3.3,448,1.604,543,3.156,564,1.675,576,1.604,577,3.74,578,3.009,579,3.74,580,3.74,581,3.74,582,3.009,583,3.009,584,3.009,585,3.74,586,3.74,587,2.498,588,3.74,589,2.782,590,3.74,591,3.74,592,3.74,593,1.604,594,3.74,595,4.258,596,3.009,597,1.897,598,2.35,599,1.897,600,1.897,601,1.897,602,1.897,603,1.897,604,1.897,605,2.911,606,1.897,607,1.897,608,5.669,609,5.372,610,4.941,611,3.74,612,5.179,613,3.163,614,5.533,615,2.544,616,5.372,617,2.238,618,1.897,619,1.897,620,1.897,621,1.897,622,1.897,623,1.897,624,1.897,625,1.897,626,1.897,627,1.897,628,1.897,629,1.411,630,1.897,631,1.897,632,1.897,633,1.897,634,1.897,635,1.897,636,1.897,637,1.897,638,3.459,639,1.897,640,4.379,641,3.675,642,3.009,643,3.009,644,1.152,645,1.897,646,1.897,647,4.258,648,1.897,649,2.544,650,3.009,651,1.897,652,4.941,653,1.411,654,1.897,655,2.544,656,1.897,657,1.897,658,1.897,659,1.897,660,2.844,661,3.74,662,3.009,663,1.897,664,3.009,665,1.897,666,1.897,667,1.897,668,2.782,669,1.411,670,2.544,671,1.897,672,4.941,673,3.676,674,3.009,675,4.941,676,4.941,677,1.897,678,3.101,679,4.643,680,4.643,681,3.009,682,1.897,683,1.056,684,1.267,685,1.897,686,2.844,687,4.643,688,2.844,689,3.009,690,1.897,691,1.897,692,1.897,693,1.897,694,1.897,695,1.897,696,1.897,697,1.897,698,1.897,699,3.009,700,3.009,701,3.009,702,3.009,703,3.009,704,3.009,705,1.897,706,1.897,707,1.897,708,1.897,709,2.782,710,1.897,711,1.897,712,1.897,713,1.897,714,1.897,715,1.897,716,1.897,717,1.897,718,1.897,719,1.897,720,1.897,721,1.897,722,1.897,723,1.897,724,1.897,725,1.897,726,1.897,727,1.897,728,1.897,729,1.897,730,1.897,731,3.009,732,3.009,733,3.009,734,3.009,735,1.675,736,3.009,737,3.009,738,1.897,739,1.897,740,1.411,741,3.163,742,1.897,743,1.897,744,1.897,745,1.897,746,1.604,747,1.897,748,1.897,749,1.897,750,2.782,751,1.897,752,1.897,753,1.897,754,1.897,755,1.897,756,1.897,757,3.009,758,2.782,759,3.167,760,2.271,761,1.604,762,1.897,763,1.411,764,1.897,765,1.897]],["title/interfaces/DialogData.html",[552,1.612,562,0.337]],["body/interfaces/DialogData.html",[3,0.334,4,0.29,5,0.29,8,0.29,10,1.488,27,1.223,32,1.308,33,0.026,35,0.493,89,0.747,90,0.74,98,0.523,104,1.818,107,1.398,111,0.404,161,0.018,162,0.021,163,0.018,164,0.572,175,1.144,176,1.144,179,1.308,181,0.895,189,1.596,193,2.21,198,1.398,214,1.596,215,1.596,296,1.398,297,2.21,322,1.308,472,1.596,545,3.536,546,3.536,547,4.02,548,1.707,549,3.536,551,2.21,552,2.941,556,2.101,560,1.827,561,1.827,562,0.473,563,5.433,564,3.443,565,5.433,566,2.245,567,5.433,568,3.536,766,1.596]],["title/interfaces/DialogData-1.html",[226,1.576,552,1.347,562,0.282]],["body/interfaces/DialogData-1.html",[3,0.338,4,0.294,5,0.379,8,0.294,10,1.495,27,1.237,33,0.026,35,0.461,55,1.055,72,2.536,89,0.75,90,0.748,98,0.528,107,1.414,111,0.407,161,0.018,162,0.021,163,0.018,164,0.576,175,1.156,176,1.156,179,1.323,181,0.901,189,1.614,193,2.225,198,1.414,214,1.614,215,1.614,309,1.414,310,1.614,322,1.323,472,1.614,548,1.726,551,2.225,552,2.955,556,2.125,560,1.847,561,1.847,562,0.478,766,1.614,767,2.919,768,3.576,769,4.408,770,4.065,771,2.677,772,4.065,773,4.065,774,4.065]],["title/components/DocumentOverviewComponent.html",[164,0.337,303,0.997]],["body/components/DocumentOverviewComponent.html",[1,2.514,3,0.204,4,0.177,5,0.323,8,0.177,9,1.393,10,1.694,27,0.747,30,1.6,32,1.454,33,0.026,34,1.307,35,0.463,36,1.522,42,1.333,55,0.754,59,3.235,60,3.235,61,3.235,67,3.334,68,2.647,69,3.235,89,0.702,90,0.452,93,1.616,94,1.938,98,0.319,104,1.22,111,0.204,112,1.38,126,4.096,161,0.011,162,0.015,163,0.011,164,0.482,165,0.912,166,1.595,167,1.195,168,1.762,169,1.195,170,1.042,172,2.52,173,2.941,174,1.042,175,1.608,176,1.569,177,2.131,179,1.142,181,0.646,183,4.096,186,4.096,187,3.603,188,2.487,189,1.626,191,2.943,193,2.031,198,1.554,203,3.509,207,3.087,209,3.509,211,2.52,214,0.975,215,0.975,216,1.762,217,1.38,218,2.159,219,1.38,229,3.087,238,2.31,289,1.042,290,1.49,291,1.595,292,0.853,293,1.898,294,1.195,295,1.195,296,0.853,297,1.115,298,2.176,299,0.853,300,1.195,301,0.853,302,1.195,303,1.554,304,2.238,305,1.195,306,0.975,307,0.912,308,1.195,309,0.853,310,0.975,311,0.912,312,1.195,313,0.853,314,1.115,315,0.798,316,1.195,317,0.798,318,0.975,319,0.975,320,1.195,321,0.853,322,0.798,323,0.975,324,0.853,325,1.195,326,0.853,327,1.115,328,1.195,478,2.454,509,4.465,543,2.697,593,2.454,775,5.653,776,2.454,777,3.087,778,4.843,779,4.149,780,4.843,781,4.843,782,4.149,783,4.149,784,4.149,785,2.902,786,4.149,787,2.902,788,3.087,789,4.149,790,5.285,791,2.902,792,2.902,793,1.974,794,2.902,795,4.149,796,2.902,797,2.902,798,2.902,799,2.902,800,2.902,801,2.902,802,2.902,803,2.902,804,2.902,805,2.902,806,4.149,807,4.149,808,4.149,809,4.149,810,4.843,811,5.285,812,4.149,813,4.149,814,4.149,815,4.149,816,4.149,817,4.149,818,2.902,819,4.149,820,2.902]],["title/components/DocumentationComponent.html",[164,0.337,301,0.997]],["body/components/DocumentationComponent.html",[3,0.106,4,0.092,5,0.414,7,3.607,8,0.092,29,3.073,30,0.363,32,1.868,33,0.026,34,0.719,35,0.539,41,2.259,42,1.86,46,2.113,49,3.765,53,1.669,55,0.819,70,1.105,72,2.481,89,0.302,90,0.235,98,0.517,103,2.741,104,1.548,105,2.113,107,1.307,108,2.699,111,0.331,112,2.114,125,0.839,133,2.768,134,0.897,135,0.718,144,1.518,161,0.006,162,0.009,163,0.006,164,0.318,165,0.474,166,0.96,167,0.621,168,0.916,169,0.621,170,0.542,174,0.542,175,1.429,176,1.353,177,1.283,179,0.688,181,0.389,188,0.775,191,2.475,207,2.768,230,2.072,238,1.391,252,1.276,260,1.008,263,1.276,267,1.122,274,1.122,275,1.008,283,1.669,285,2.62,286,4.164,287,1.391,288,0.775,289,0.542,290,0.897,291,0.96,292,0.444,293,1.336,294,0.621,295,0.621,296,0.444,297,0.58,298,1.532,299,0.444,300,0.621,301,1.094,302,0.621,303,0.444,304,2.194,305,0.621,306,0.507,307,0.474,308,0.621,309,0.444,310,1.074,311,0.474,312,0.621,313,0.444,314,1.585,315,0.415,316,0.621,317,0.415,318,0.507,319,0.507,320,0.621,321,0.444,322,0.415,323,0.507,324,0.444,325,0.621,326,0.444,327,0.58,328,0.621,361,1.518,364,2.485,369,1.859,412,1.122,451,2.844,474,1.276,543,3.27,555,0.84,566,1.249,587,1.669,598,1.77,605,1.283,641,0.916,644,0.916,649,2.113,669,1.122,678,3.818,683,1.391,735,2.072,746,1.276,750,1.122,758,1.122,759,3.068,760,0.916,793,2.625,821,1.276,822,3.2,823,2.499,824,3.2,825,3.2,826,2.499,827,1.509,828,1.122,829,1.859,830,2.499,831,6.278,832,4.924,833,3.721,834,5.076,835,2.741,836,2.499,837,5.519,838,3.306,839,4.445,840,4.445,841,4.924,842,6.671,843,6.403,844,5.519,845,2.113,846,1.859,847,5.265,848,6.003,849,3.306,850,6.345,851,5.519,852,4.445,853,4.919,854,1.859,855,3.721,856,2.499,857,2.499,858,2.499,859,3.721,860,3.721,861,4.452,862,4.834,863,2.499,864,2.113,865,2.499,866,2.499,867,3.721,868,2.499,869,2.499,870,4.612,871,6.403,872,2.499,873,4.106,874,2.113,875,2.499,876,2.768,877,3.663,878,3.306,879,3.721,880,4.445,881,4.924,882,4.141,883,3.721,884,4.106,885,3.759,886,3.721,887,1.509,888,4.924,889,2.499,890,1.509,891,1.509,892,2.499,893,2.499,894,2.499,895,2.113,896,2.499,897,2.499,898,4.445,899,3.721,900,3.663,901,2.499,902,3.721,903,2.499,904,2.485,905,2.499,906,2.499,907,2.485,908,4.445,909,2.499,910,2.499,911,5.716,912,2.499,913,2.499,914,3.721,915,3.721,916,2.499,917,2.499,918,2.499,919,2.499,920,1.859,921,2.499,922,2.768,923,2.499,924,2.499,925,2.499,926,2.499,927,4.164,928,3.721,929,2.499,930,2.499,931,2.499,932,3.721,933,3.721,934,2.499,935,3.721,936,3.721,937,3.721,938,1.509,939,1.509,940,1.509,941,1.509,942,1.509,943,1.509,944,1.509]],["title/directives/DragdropDirective.html",[292,0.997,324,0.997]],["body/directives/DragdropDirective.html",[3,0.314,4,0.273,5,0.273,8,0.273,10,1.448,27,1.549,30,1.585,33,0.026,35,0.441,70,1.976,89,0.54,90,0.696,98,0.491,111,0.314,125,1.501,134,1.605,161,0.017,162,0.021,163,0.017,174,1.605,175,1.332,197,2.912,292,1.629,323,1.501,324,1.629,365,2.295,468,3.699,564,3.084,605,2.295,683,3.084,945,3.78,946,5.538,947,4.683,948,6.018,949,5.538,950,5.538,951,4.683,952,5.538,953,4.12,954,5.538,955,5.089,956,4.47,957,5.089,958,4.47,959,4.47,960,4.47,961,4.47,962,3.325,963,4.47,964,4.47,965,4.47,966,3.78,967,4.683,968,4.47,969,3.78,970,4.47,971,4.47,972,4.477,973,6.018,974,6.018,975,4.47,976,4.47,977,4.47,978,4.47,979,4.47,980,4.47,981,4.47]],["title/components/FileExistsDialogComponent.html",[164,0.337,309,0.997]],["body/components/FileExistsDialogComponent.html",[3,0.257,4,0.224,5,0.396,8,0.224,9,1.636,10,1.578,27,1.254,30,1.462,32,1.506,33,0.026,34,1.365,35,0.484,36,1.531,42,1.007,55,0.946,72,1.872,89,0.661,90,0.57,98,0.402,104,1.433,107,1.787,111,0.342,161,0.014,162,0.018,163,0.014,164,0.545,165,1.15,166,1.872,167,1.508,169,1.508,170,1.315,174,1.315,175,1.655,176,1.627,179,1.34,181,0.758,189,2.293,193,2.335,198,1.433,214,1.229,215,1.229,289,1.315,290,1.749,291,1.872,292,1.077,293,2.096,294,1.508,295,1.508,296,1.077,297,1.407,298,2.403,299,1.077,300,1.508,301,1.077,302,1.508,303,1.077,304,1.749,305,1.508,306,1.229,307,1.15,308,1.508,309,1.716,310,1.839,311,1.15,312,1.508,313,1.077,314,1.407,315,1.007,316,1.508,317,1.007,318,1.229,319,1.229,320,1.508,321,1.077,322,1.506,323,1.229,324,1.077,325,1.508,326,1.077,327,1.407,328,1.508,472,1.229,548,2.096,550,2.223,551,2.335,552,2.891,555,2.038,556,2.153,560,1.407,561,1.407,562,0.364,767,3.795,768,2.724,769,3.254,770,4.119,771,2.712,772,3.096,773,3.096,774,3.096,982,3.624,983,3.661,984,3.661,985,2.223,986,3.661,987,3.661,988,3.661,989,4.872,990,4.872,991,4.872,992,4.872,993,4.872,994,4.872]],["title/injectables/FileService.html",[0,1.498,995,2.264]],["body/injectables/FileService.html",[0,2.004,2,2.198,3,0.231,4,0.201,5,0.386,8,0.201,9,1.522,10,1.655,27,0.847,29,3.371,30,1.521,32,1.739,33,0.027,34,1.42,35,0.517,36,1.986,42,1.707,43,5.424,89,0.731,90,0.512,91,4.384,92,1.999,93,1.832,94,2.198,95,1.565,98,0.362,99,3.372,100,3.372,109,2.448,110,1.69,111,0.231,112,1.565,113,2.951,125,2.123,132,3.833,133,3.372,134,2.104,135,2.156,136,3.833,159,2.783,160,2.198,161,0.012,162,0.017,163,0.012,192,2.783,217,3.088,218,2.448,543,2.523,587,3.027,605,2.662,834,2.783,835,1.832,985,1.999,995,3.027,996,2.783,997,3.372,998,4.533,999,4.533,1000,4.533,1001,4.533,1002,4.533,1003,4.533,1004,4.533,1005,4.533,1006,4.533,1007,3.291,1008,4.533,1009,2.943,1010,3.291,1011,4.533,1012,3.291,1013,5.858,1014,4.533,1015,3.291,1016,4.533,1017,3.291,1018,4.533,1019,3.291,1020,4.533,1021,4.533,1022,3.291,1023,4.533,1024,3.291,1025,2.783,1026,6.611,1027,6.055,1028,5.184,1029,5.184,1030,5.184,1031,5.184,1032,5.184,1033,5.184,1034,3.291,1035,5.184,1036,5.586,1037,5.184,1038,3.291,1039,3.291,1040,3.291,1041,3.291,1042,3.291,1043,3.291]],["title/components/FileUploadComponent.html",[164,0.337,311,1.065]],["body/components/FileUploadComponent.html",[3,0.146,4,0.127,5,0.411,8,0.198,9,1.086,10,1.537,27,0.833,30,1.468,32,1.567,33,0.027,34,1.332,35,0.497,36,1.742,42,1.476,55,0.697,67,1.801,68,1.43,70,2.518,72,1.526,89,0.716,90,0.324,92,1.263,95,0.989,98,0.356,104,0.951,107,0.951,111,0.146,113,0.989,119,1.964,125,1.801,134,0.747,135,0.989,161,0.012,162,0.012,163,0.008,164,0.446,165,0.653,166,1.243,167,0.856,168,1.263,169,0.856,170,0.747,174,0.747,175,1.526,176,1.468,177,1.661,179,0.89,181,0.504,188,1.068,189,1.913,193,1.721,197,1.43,198,1.675,214,0.698,215,0.698,219,2.551,230,1.158,260,1.389,261,1.759,264,1.547,268,1.547,270,3.12,272,1.547,275,1.389,283,1.389,285,1.158,288,2.638,289,0.747,290,1.608,291,1.865,292,0.612,293,1.608,294,0.856,295,0.856,296,0.612,297,0.799,298,1.844,299,0.612,300,0.856,301,0.612,302,0.856,303,0.612,304,1.162,305,0.856,306,0.698,307,0.653,308,0.856,309,0.951,310,0.698,311,1.525,312,0.856,313,0.951,314,1.526,315,0.572,316,0.856,317,0.572,318,1.725,319,0.698,320,0.856,321,0.612,322,1.414,323,0.698,324,0.612,325,0.856,326,0.612,327,0.799,328,0.856,365,2.925,451,1.158,472,0.698,495,4.594,497,2.735,498,1.759,501,1.759,548,1.162,552,2.769,574,1.263,598,1.539,638,1.389,641,2.411,655,1.759,660,2.652,669,1.547,684,1.389,686,2.992,688,2.992,741,1.759,750,2.406,758,1.547,759,2.406,760,1.263,761,3.357,769,2.652,793,2.308,835,2.701,845,1.759,861,1.759,874,1.759,904,1.389,907,1.389,927,1.759,947,2.735,955,3.357,967,2.735,969,1.759,985,1.964,995,3.431,997,1.547,1009,2.698,1025,1.759,1044,5.222,1045,1.759,1046,3.97,1047,3.235,1048,2.953,1049,3.242,1050,3.235,1051,3.235,1052,3.235,1053,3.235,1054,3.235,1055,3.235,1056,3.97,1057,3.97,1058,2.08,1059,3.609,1060,2.08,1061,2.08,1062,3.235,1063,2.08,1064,3.235,1065,5.823,1066,2.08,1067,3.235,1068,3.235,1069,3.235,1070,3.822,1071,2.08,1072,3.235,1073,2.08,1074,3.235,1075,2.72,1076,2.08,1077,3.235,1078,2.161,1079,2.08,1080,2.08,1081,2.08,1082,2.08,1083,2.406,1084,2.08,1085,2.08,1086,2.701,1087,2.406,1088,2.08,1089,2.08,1090,2.08,1091,2.08,1092,1.547,1093,2.08,1094,2.08,1095,2.08,1096,1.547,1097,2.08,1098,2.08,1099,2.08,1100,2.08,1101,2.08,1102,2.08,1103,2.08,1104,2.08,1105,2.08,1106,2.08,1107,2.08,1108,2.08,1109,2.08,1110,2.08,1111,3.235,1112,4.125,1113,2.953,1114,2.08,1115,2.08,1116,3.235,1117,2.08,1118,2.08,1119,3.97,1120,3.97,1121,1.547,1122,2.08,1123,3.332,1124,2.406,1125,1.547,1126,1.547,1127,2.08,1128,1.547,1129,2.953,1130,2.08,1131,3.235,1132,2.08,1133,2.08,1134,2.08,1135,1.547,1136,1.547,1137,2.08,1138,2.08,1139,2.08,1140,2.08,1141,2.08,1142,2.08,1143,2.08,1144,2.406,1145,2.08,1146,2.08,1147,2.08,1148,3.97,1149,2.08,1150,2.08,1151,2.08,1152,2.08,1153,2.08,1154,3.235,1155,3.235,1156,2.08,1157,2.08,1158,2.08,1159,2.08,1160,2.08,1161,2.08,1162,3.235,1163,2.08,1164,2.08,1165,2.08,1166,2.08,1167,2.08,1168,2.08,1169,1.547,1170,1.263,1171,2.08,1172,2.08,1173,2.08]],["title/components/FileUploadDialogComponent.html",[164,0.337,313,0.997]],["body/components/FileUploadDialogComponent.html",[3,0.232,4,0.202,5,0.397,8,0.202,9,1.527,10,1.621,27,1.17,30,1.494,32,1.54,33,0.026,34,1.362,35,0.483,36,1.633,42,1.43,55,0.809,89,0.732,90,0.515,95,1.572,98,0.363,104,1.337,107,1.725,111,0.319,125,1.11,161,0.012,162,0.017,163,0.012,164,0.517,165,1.039,166,1.747,167,1.361,169,1.361,170,1.187,174,1.187,175,1.635,176,1.603,179,1.251,181,0.708,189,2.283,193,2.255,198,1.646,214,1.11,215,1.11,219,1.572,288,1.697,289,1.187,290,1.632,291,1.747,292,0.972,293,2.01,294,1.361,295,1.361,296,0.972,297,1.27,298,2.305,299,0.972,300,1.361,301,0.972,302,1.361,303,0.972,304,1.632,305,1.361,306,1.11,307,1.039,308,1.361,309,0.972,310,1.11,311,1.039,312,1.361,313,1.646,314,1.997,315,0.91,316,1.361,317,0.91,318,1.11,319,1.11,320,1.361,321,0.972,322,1.43,323,1.11,324,0.972,325,1.361,326,0.972,327,1.27,328,1.361,365,1.697,472,1.11,548,2.01,550,2.007,551,2.255,555,1.84,556,2.01,560,1.27,561,1.27,562,0.329,566,1.527,574,2.761,767,3.842,771,2.531,793,1.572,982,3.382,985,2.007,997,3.382,1009,2.474,1048,2.459,1049,3.458,1075,3.563,1086,2.893,1087,2.459,1112,3.865,1113,2.459,1123,3.865,1124,2.459,1144,2.459,1174,2.459,1175,3.844,1176,4.732,1177,4.546,1178,3.306,1179,3.306,1180,3.844,1181,3.306,1182,3.306,1183,3.306,1184,3.306,1185,3.306,1186,2.208,1187,2.795,1188,2.795,1189,2.795,1190,2.795,1191,4.546,1192,4.546,1193,4.546,1194,4.546,1195,3.844]],["title/interfaces/IDocument.html",[217,1.612,562,0.337]],["body/interfaces/IDocument.html",[3,0.321,4,0.279,5,0.279,8,0.279,33,0.026,35,0.555,55,1.092,59,3.049,60,3.049,61,3.049,69,3.049,72,2.435,89,0.551,103,2.801,111,0.394,135,3.014,161,0.017,162,0.021,163,0.017,181,0.873,188,3.254,217,2.669,277,4.714,280,4.714,562,0.558,566,2.224,598,2.172,709,4.926,766,1.533,1196,3.396,1197,5.358,1198,5.358,1199,3.848,1200,3.861,1201,3.049,1202,3.861]],["title/interfaces/IFile.html",[562,0.337,1009,1.498]],["body/interfaces/IFile.html",[3,0.351,4,0.305,5,0.42,8,0.305,33,0.026,35,0.531,55,1.078,111,0.351,161,0.019,162,0.022,163,0.019,181,0.922,230,3.636,562,0.497,566,2.12,766,1.676,769,4.362,1009,2.618,1086,3.636,1203,4.221,1204,6.53]],["title/interfaces/IKeyWordModel.html",[39,1.741,562,0.337]],["body/interfaces/IKeyWordModel.html",[3,0.365,4,0.317,5,0.317,8,0.317,33,0.025,35,0.483,39,3.112,55,1.062,72,2.541,103,2.923,111,0.365,144,4.016,161,0.019,162,0.022,163,0.019,181,0.943,562,0.517,766,1.743,1205,4.389]],["title/interfaces/IKeyword.html",[562,0.337,1199,2.058]],["body/interfaces/IKeyword.html",[3,0.367,4,0.319,5,0.319,8,0.319,33,0.025,35,0.544,55,1.063,68,2.93,111,0.367,161,0.019,162,0.023,163,0.019,181,0.947,562,0.52,766,1.755,1199,3.695,1206,4.42]],["title/interfaces/IKeywordListEntry.html",[562,0.337,1207,2.521]],["body/interfaces/IKeywordListEntry.html",[3,0.361,4,0.314,5,0.314,8,0.314,33,0.025,35,0.51,41,4.005,55,1.083,72,2.534,111,0.361,161,0.019,162,0.022,163,0.019,181,0.938,562,0.512,766,1.728,1207,4.485,1208,4.352,1209,6.595]],["title/interfaces/IResponse.html",[562,0.337,1201,2.264]],["body/interfaces/IResponse.html",[3,0.335,4,0.291,5,0.291,8,0.291,33,0.026,35,0.533,55,1.063,59,4.296,60,4.296,61,4.296,69,4.296,72,1.833,89,0.576,103,2.108,111,0.405,135,2.268,161,0.018,162,0.021,163,0.018,181,0.897,188,2.449,217,2.268,277,3.548,280,3.548,562,0.573,566,2.322,598,2.945,709,4.286,766,1.602,1196,3.548,1197,4.033,1198,4.033,1199,3.499,1200,4.033,1201,3.849,1202,5.439]],["title/interfaces/ITaggingMethod.html",[562,0.337,1210,2.264]],["body/interfaces/ITaggingMethod.html",[3,0.367,4,0.319,5,0.319,8,0.319,33,0.025,34,1.489,35,0.544,55,1.063,111,0.367,161,0.019,162,0.023,163,0.019,181,0.947,562,0.52,766,1.755,1210,4.064,1211,4.42]],["title/interfaces/ITaggingRequest.html",[51,2.264,562,0.337]],["body/interfaces/ITaggingRequest.html",[3,0.339,4,0.295,5,0.295,8,0.295,33,0.026,35,0.541,39,3.317,49,2.933,51,3.879,55,1.005,57,4.314,89,0.752,111,0.339,119,3.781,161,0.018,162,0.022,163,0.018,181,0.904,217,2.298,543,3.596,562,0.481,587,4.314,766,1.622,793,2.962,1078,3.879,1210,4.414,1212,4.085,1213,6.46,1214,6.46,1215,4.831,1216,4.831]],["title/classes/ItemFlatNode.html",[98,0.373,1217,2.264]],["body/classes/ItemFlatNode.html",[0,0.773,1,1.114,3,0.07,4,0.061,5,0.261,8,0.272,10,0.978,30,0.678,33,0.027,34,1.305,35,0.408,39,2.373,41,3.044,42,0.884,49,1.712,53,1.168,55,0.93,68,1.889,70,2.546,72,0.672,89,0.575,90,0.155,95,0.832,96,0.739,98,0.31,103,1.69,107,1.195,108,1.712,110,0.51,111,0.198,112,0.832,113,2.824,119,2.151,121,3.88,125,2.103,134,2.068,143,1.301,144,1.712,160,0.664,161,0.009,162,0.006,163,0.004,164,0.174,170,1.601,172,0.603,173,1.062,175,0.239,176,0.239,177,0.51,179,0.273,181,0.272,191,0.553,197,1.566,198,0.292,216,0.603,219,1.685,226,2.573,238,0.973,270,0.603,278,0.739,285,0.973,287,1.57,290,0.357,293,0.357,307,0.312,310,0.786,315,0.273,317,0.273,318,1.435,322,0.776,335,0.664,336,0.603,361,0.603,372,0.603,387,0.664,415,1.168,427,0.664,441,0.739,442,1.168,451,2.38,467,0.739,468,1.564,470,0.739,472,0.334,511,0.739,512,0.739,515,0.664,526,0.664,548,0.357,551,0.382,560,0.382,561,0.382,564,1.789,566,1.19,589,2.097,598,1.685,605,1.65,617,2.097,629,1.301,638,0.664,641,1.062,644,3.498,653,0.739,660,1.168,668,1.301,673,2.097,678,2.715,683,2.653,684,0.664,686,1.564,688,1.564,735,2.998,740,1.301,760,1.062,763,2.39,788,0.739,793,2.033,828,0.739,829,0.739,835,2.791,838,0.739,846,2.39,849,1.301,853,2.844,854,1.301,870,2.636,873,1.301,876,1.301,877,2.097,878,0.739,882,2.715,884,2.39,900,2.844,904,0.664,907,0.664,920,0.739,922,1.742,953,1.301,962,0.739,972,1.301,1059,1.301,1070,1.301,1083,1.301,1092,0.739,1096,2.39,1121,2.636,1125,3.023,1126,1.742,1128,1.301,1129,4.285,1135,0.739,1136,0.739,1169,0.739,1170,0.603,1217,3.484,1218,0.664,1219,1.478,1220,4.846,1221,2.717,1222,3.437,1223,3.597,1224,0.994,1225,0.994,1226,0.994,1227,0.994,1228,1.301,1229,1.478,1230,0.84,1231,0.84,1232,1.478,1233,0.84,1234,1.478,1235,0.84,1236,1.478,1237,1.478,1238,1.478,1239,0.84,1240,0.84,1241,4.151,1242,2.384,1243,2.39,1244,0.664,1245,0.84,1246,1.301,1247,0.84,1248,0.84,1249,0.84,1250,1.742,1251,0.84,1252,0.84,1253,0.84,1254,0.84,1255,0.84,1256,0.84,1257,0.84,1258,0.84,1259,1.478,1260,2.717,1261,1.478,1262,2.384,1263,0.84,1264,0.84,1265,3.233,1266,0.84,1267,2.384,1268,0.84,1269,0.84,1270,0.84,1271,5.295,1272,0.84,1273,2.996,1274,0.84,1275,1.478,1276,0.84,1277,0.84,1278,2.717,1279,1.478,1280,1.478,1281,1.478,1282,0.84,1283,0.84,1284,0.84,1285,0.84,1286,0.84,1287,0.84,1288,0.84,1289,1.98,1290,1.478,1291,1.98,1292,1.98,1293,1.98,1294,1.98,1295,1.98,1296,1.98,1297,1.98,1298,0.84,1299,1.478,1300,0.84,1301,1.478,1302,0.84,1303,1.478,1304,0.84,1305,0.84,1306,0.84,1307,1.478,1308,0.84,1309,2.384,1310,0.84,1311,0.84,1312,1.478,1313,1.98,1314,0.84,1315,1.478,1316,1.478,1317,0.84,1318,0.84,1319,0.84,1320,0.84,1321,0.84,1322,0.84,1323,1.301,1324,0.84,1325,2.097,1326,0.84,1327,0.84,1328,0.84,1329,0.84,1330,1.478,1331,0.84,1332,0.84,1333,0.84,1334,2.384,1335,1.478,1336,1.478,1337,0.84,1338,0.84,1339,0.84,1340,0.84,1341,0.84,1342,2.384,1343,0.84,1344,0.84,1345,0.84,1346,0.84,1347,0.84,1348,0.84,1349,0.84,1350,0.84,1351,0.84,1352,0.84,1353,0.84,1354,0.84,1355,0.84,1356,0.84,1357,1.98,1358,1.98,1359,0.84,1360,0.84,1361,0.84,1362,0.84,1363,0.84,1364,0.84,1365,0.84,1366,0.84,1367,1.478,1368,0.84,1369,0.84,1370,1.478,1371,0.84,1372,0.84,1373,0.84,1374,0.84,1375,0.84,1376,0.84,1377,1.98,1378,2.717,1379,0.84,1380,0.84,1381,0.84,1382,0.84,1383,0.84,1384,0.84,1385,0.84,1386,0.84,1387,1.478,1388,1.478,1389,0.84,1390,0.84,1391,0.84,1392,1.478,1393,0.84,1394,0.84,1395,0.84,1396,0.84,1397,1.98,1398,0.84,1399,1.98,1400,0.84,1401,0.84,1402,0.84,1403,0.84,1404,0.84,1405,3.77,1406,0.84,1407,0.84,1408,0.84,1409,0.84,1410,0.84,1411,0.84,1412,0.84,1413,1.478,1414,1.478,1415,1.478,1416,1.478,1417,1.478,1418,0.84,1419,1.98,1420,0.84,1421,1.478,1422,0.84,1423,2.996,1424,0.84,1425,1.478,1426,4.554,1427,4.554,1428,1.478,1429,0.84,1430,0.84,1431,0.84,1432,1.98,1433,2.717,1434,1.98,1435,0.84,1436,1.478,1437,0.84,1438,0.84,1439,0.84,1440,2.384,1441,0.84,1442,1.478,1443,0.84,1444,0.84,1445,1.98,1446,0.84,1447,0.84,1448,1.478,1449,0.84,1450,0.84,1451,1.478,1452,0.84,1453,0.84,1454,0.84,1455,0.84,1456,0.84,1457,1.478,1458,0.84,1459,0.84,1460,0.84,1461,0.84,1462,0.84,1463,0.84,1464,0.84,1465,0.84,1466,0.84,1467,0.84,1468,1.478,1469,0.84,1470,0.84,1471,1.478,1472,0.84,1473,2.384,1474,0.84,1475,0.84,1476,0.84,1477,0.84,1478,0.84,1479,0.84,1480,1.478,1481,0.84,1482,0.84,1483,2.384,1484,1.478,1485,1.478,1486,1.478,1487,1.478,1488,1.478,1489,1.478,1490,1.478,1491,0.84,1492,0.84,1493,1.478,1494,0.84,1495,0.84,1496,0.84,1497,0.84,1498,0.84,1499,0.84,1500,0.84,1501,0.84,1502,0.84,1503,0.84,1504,1.478,1505,0.84,1506,0.84,1507,0.84,1508,0.84,1509,0.84,1510,0.84,1511,0.84,1512,0.739,1513,0.84,1514,0.84,1515,0.739,1516,0.84,1517,0.84,1518,1.98,1519,1.98,1520,0.84,1521,0.84,1522,0.84,1523,0.84,1524,0.84,1525,0.84,1526,2.717,1527,0.84,1528,0.84,1529,0.84,1530,1.98,1531,1.478,1532,1.478,1533,0.84,1534,2.717,1535,0.84,1536,0.84,1537,0.84,1538,0.84,1539,0.84,1540,0.84,1541,0.84,1542,0.84,1543,0.84,1544,0.84,1545,0.84,1546,0.84,1547,0.84,1548,0.84,1549,0.84,1550,0.84,1551,0.84,1552,0.84,1553,0.84,1554,0.84,1555,0.84,1556,0.84,1557,0.84,1558,0.84,1559,0.84,1560,1.98,1561,1.478,1562,0.84,1563,1.478,1564,0.84,1565,0.84,1566,0.84,1567,0.84,1568,0.84,1569,0.84,1570,0.84,1571,0.84,1572,0.84,1573,0.84,1574,0.84,1575,0.84,1576,0.84,1577,0.84,1578,0.84,1579,0.84,1580,0.84,1581,0.84,1582,0.84,1583,0.84,1584,0.84,1585,0.84,1586,0.84,1587,0.84,1588,0.84,1589,0.84,1590,0.84,1591,0.84,1592,1.478,1593,1.478,1594,0.84,1595,0.84,1596,0.84,1597,0.84,1598,0.84,1599,0.84,1600,0.84,1601,2.717,1602,0.84,1603,1.478,1604,0.84,1605,1.478,1606,2.384,1607,0.84,1608,0.84,1609,1.98,1610,0.84,1611,0.84,1612,0.84,1613,1.478,1614,2.717,1615,1.478,1616,0.84,1617,3.614,1618,0.84,1619,0.84,1620,1.478,1621,3.614,1622,0.84,1623,1.478,1624,0.84,1625,0.84,1626,0.84,1627,0.84,1628,0.84,1629,0.84,1630,0.84,1631,0.84,1632,2.384,1633,0.84,1634,1.478,1635,2.384,1636,0.84,1637,0.84,1638,0.84,1639,0.84,1640,1.478,1641,0.84,1642,0.84,1643,0.84,1644,1.98,1645,1.478,1646,1.478,1647,0.84,1648,0.84,1649,0.84,1650,0.84,1651,0.84,1652,0.84,1653,0.84,1654,0.84,1655,0.84,1656,0.84,1657,0.84,1658,0.84,1659,2.384,1660,1.478,1661,0.84,1662,1.478,1663,1.478,1664,0.84,1665,0.84,1666,0.84,1667,0.84,1668,0.84,1669,0.84,1670,0.84,1671,0.84,1672,0.84,1673,0.84,1674,0.84,1675,0.84,1676,0.84]],["title/classes/ItemNode.html",[98,0.373,1241,2.264]],["body/classes/ItemNode.html",[0,0.775,1,1.117,3,0.07,4,0.061,5,0.261,8,0.273,10,0.979,30,0.565,33,0.027,34,1.306,35,0.4,39,2.376,41,3.048,42,0.886,49,1.716,53,1.171,55,0.931,68,1.892,70,2.548,72,0.674,89,0.576,90,0.155,95,0.834,96,0.742,98,0.311,103,1.693,107,1.197,108,1.716,110,0.512,111,0.198,112,0.834,113,2.826,119,2.156,121,3.884,125,2.104,134,2.07,143,1.304,144,1.716,160,0.666,161,0.009,162,0.007,163,0.004,164,0.174,170,1.603,172,0.605,173,1.065,175,0.24,176,0.24,177,0.512,179,0.274,181,0.273,191,0.555,197,1.569,198,0.293,216,0.605,219,1.689,226,2.576,238,0.976,270,0.605,278,0.742,285,0.976,287,1.573,290,0.358,293,0.358,307,0.313,310,0.788,315,0.274,317,0.274,318,1.438,322,0.778,335,0.666,336,0.605,361,0.605,372,0.605,387,0.666,415,1.171,427,0.666,441,0.742,442,1.171,451,2.383,467,0.742,468,1.568,470,0.742,472,0.335,511,0.742,512,0.742,515,0.666,526,0.666,548,0.358,551,0.383,560,0.383,561,0.383,564,1.573,566,1.081,589,2.102,598,1.689,605,1.654,617,2.102,629,1.304,638,0.666,641,1.065,644,3.53,653,0.742,660,1.171,668,1.304,673,2.102,678,2.719,683,2.657,684,0.666,686,1.568,688,1.568,735,3.001,740,1.304,760,1.065,763,2.395,788,0.742,793,2.036,828,0.742,829,0.742,835,2.794,838,0.742,846,2.395,849,1.304,853,2.849,854,1.304,870,2.641,873,1.304,876,1.304,877,2.102,878,0.742,882,2.719,884,2.395,900,2.849,904,0.666,907,0.666,920,0.742,922,1.304,953,1.304,962,0.742,972,1.304,1059,1.304,1070,1.304,1083,1.304,1092,0.742,1096,2.395,1121,2.641,1125,3.029,1126,1.746,1128,1.304,1129,4.288,1135,0.742,1136,0.742,1169,0.742,1170,0.605,1217,3.423,1218,0.666,1219,0.843,1220,4.848,1221,1.483,1222,2.723,1223,3.601,1228,1.304,1229,1.483,1230,0.843,1231,0.843,1232,1.483,1233,0.843,1234,1.483,1235,0.843,1236,1.483,1237,1.483,1238,1.483,1239,0.843,1240,0.843,1241,4.185,1242,3.002,1243,2.395,1244,0.666,1245,0.843,1246,1.304,1247,0.843,1248,0.843,1249,0.843,1250,1.746,1251,0.843,1252,0.843,1253,0.843,1254,0.843,1255,0.843,1256,0.843,1257,0.843,1258,0.843,1259,1.483,1260,2.723,1261,1.483,1262,2.39,1263,0.843,1264,0.843,1265,3.239,1266,0.843,1267,2.39,1268,0.843,1269,0.843,1270,0.843,1271,5.298,1272,0.843,1273,3.002,1274,0.843,1275,1.483,1276,0.843,1277,0.843,1278,2.723,1279,1.483,1280,1.483,1281,1.483,1282,0.843,1283,0.843,1284,0.843,1285,0.843,1286,0.843,1287,0.843,1288,0.843,1289,1.985,1290,1.483,1291,1.985,1292,1.985,1293,1.985,1294,1.985,1295,1.985,1296,1.985,1297,1.985,1298,0.843,1299,1.483,1300,0.843,1301,1.483,1302,0.843,1303,1.483,1304,0.843,1305,0.843,1306,0.843,1307,1.483,1308,0.843,1309,2.39,1310,0.843,1311,0.843,1312,1.483,1313,1.985,1314,0.843,1315,1.483,1316,1.483,1317,0.843,1318,0.843,1319,0.843,1320,0.843,1321,0.843,1322,0.843,1323,1.304,1324,0.843,1325,2.102,1326,0.843,1327,0.843,1328,0.843,1329,0.843,1330,1.483,1331,0.843,1332,0.843,1333,0.843,1334,2.39,1335,1.483,1336,1.483,1337,0.843,1338,0.843,1339,0.843,1340,0.843,1341,0.843,1342,2.39,1343,0.843,1344,0.843,1345,0.843,1346,0.843,1347,0.843,1348,0.843,1349,0.843,1350,0.843,1351,0.843,1352,0.843,1353,0.843,1354,0.843,1355,0.843,1356,0.843,1357,1.985,1358,1.985,1359,0.843,1360,0.843,1361,0.843,1362,0.843,1363,0.843,1364,0.843,1365,0.843,1366,0.843,1367,1.483,1368,0.843,1369,0.843,1370,1.483,1371,0.843,1372,0.843,1373,0.843,1374,0.843,1375,0.843,1376,0.843,1377,1.985,1378,2.723,1379,0.843,1380,0.843,1381,0.843,1382,0.843,1383,0.843,1384,0.843,1385,0.843,1386,0.843,1387,1.483,1388,1.483,1389,0.843,1390,0.843,1391,0.843,1392,1.483,1393,0.843,1394,0.843,1395,0.843,1396,0.843,1397,1.985,1398,0.843,1399,1.985,1400,0.843,1401,0.843,1402,0.843,1403,0.843,1404,0.843,1405,3.775,1406,0.843,1407,0.843,1408,0.843,1409,0.843,1410,0.843,1411,0.843,1412,0.843,1413,1.483,1414,1.483,1415,1.483,1416,1.483,1417,1.483,1418,0.843,1419,1.985,1420,0.843,1421,1.483,1422,0.843,1423,3.002,1424,0.843,1425,1.483,1426,4.558,1427,4.558,1428,1.483,1429,0.843,1430,0.843,1431,0.843,1432,1.985,1433,2.723,1434,1.985,1435,0.843,1436,1.483,1437,0.843,1438,0.843,1439,0.843,1440,2.39,1441,0.843,1442,1.483,1443,0.843,1444,0.843,1445,1.985,1446,0.843,1447,0.843,1448,1.483,1449,0.843,1450,0.843,1451,1.483,1452,0.843,1453,0.843,1454,0.843,1455,0.843,1456,0.843,1457,1.483,1458,0.843,1459,0.843,1460,0.843,1461,0.843,1462,0.843,1463,0.843,1464,0.843,1465,0.843,1466,0.843,1467,0.843,1468,1.483,1469,0.843,1470,0.843,1471,1.483,1472,0.843,1473,2.39,1474,0.843,1475,0.843,1476,0.843,1477,0.843,1478,0.843,1479,0.843,1480,1.483,1481,0.843,1482,0.843,1483,2.39,1484,1.483,1485,1.483,1486,1.483,1487,1.483,1488,1.483,1489,1.483,1490,1.483,1491,0.843,1492,0.843,1493,1.483,1494,0.843,1495,0.843,1496,0.843,1497,0.843,1498,0.843,1499,0.843,1500,0.843,1501,0.843,1502,0.843,1503,0.843,1504,1.483,1505,0.843,1506,0.843,1507,0.843,1508,0.843,1509,0.843,1510,0.843,1511,0.843,1512,0.742,1513,0.843,1514,0.843,1515,0.742,1516,0.843,1517,0.843,1518,1.985,1519,1.985,1520,0.843,1521,0.843,1522,0.843,1523,0.843,1524,0.843,1525,0.843,1526,2.723,1527,0.843,1528,0.843,1529,0.843,1530,1.985,1531,1.483,1532,1.483,1533,0.843,1534,2.723,1535,0.843,1536,0.843,1537,0.843,1538,0.843,1539,0.843,1540,0.843,1541,0.843,1542,0.843,1543,0.843,1544,0.843,1545,0.843,1546,0.843,1547,0.843,1548,0.843,1549,0.843,1550,0.843,1551,0.843,1552,0.843,1553,0.843,1554,0.843,1555,0.843,1556,0.843,1557,0.843,1558,0.843,1559,0.843,1560,1.985,1561,1.483,1562,0.843,1563,1.483,1564,0.843,1565,0.843,1566,0.843,1567,0.843,1568,0.843,1569,0.843,1570,0.843,1571,0.843,1572,0.843,1573,0.843,1574,0.843,1575,0.843,1576,0.843,1577,0.843,1578,0.843,1579,0.843,1580,0.843,1581,0.843,1582,0.843,1583,0.843,1584,0.843,1585,0.843,1586,0.843,1587,0.843,1588,0.843,1589,0.843,1590,0.843,1591,0.843,1592,1.483,1593,1.483,1594,0.843,1595,0.843,1596,0.843,1597,0.843,1598,0.843,1599,0.843,1600,0.843,1601,2.723,1602,0.843,1603,1.483,1604,0.843,1605,1.483,1606,2.39,1607,0.843,1608,0.843,1609,1.985,1610,0.843,1611,0.843,1612,0.843,1613,1.483,1614,2.723,1615,1.483,1616,0.843,1617,3.62,1618,0.843,1619,0.843,1620,1.483,1621,3.62,1622,0.843,1623,1.483,1624,0.843,1625,0.843,1626,0.843,1627,0.843,1628,0.843,1629,0.843,1630,0.843,1631,0.843,1632,2.39,1633,0.843,1634,1.483,1635,2.39,1636,0.843,1637,0.843,1638,0.843,1639,0.843,1640,1.483,1641,0.843,1642,0.843,1643,0.843,1644,1.985,1645,1.483,1646,1.483,1647,0.843,1648,0.843,1649,0.843,1650,0.843,1651,0.843,1652,0.843,1653,0.843,1654,0.843,1655,0.843,1656,0.843,1657,0.843,1658,0.843,1659,2.39,1660,1.483,1661,0.843,1662,1.483,1663,1.483,1664,0.843,1665,0.843,1666,0.843,1667,0.843,1668,0.843,1669,0.843,1670,0.843,1671,0.843,1672,0.843,1673,0.843,1674,0.843,1675,0.843,1676,0.843,1677,0.997,1678,0.997,1679,0.997]],["title/components/KWMNameDialog.html",[164,0.337,317,0.933]],["body/components/KWMNameDialog.html",[3,0.276,4,0.24,5,0.366,8,0.24,9,1.713,10,1.533,27,1.313,30,1.443,32,1.403,33,0.026,34,1.493,35,0.451,36,1.233,42,1.08,55,0.933,89,0.616,90,0.611,98,0.432,104,1.5,111,0.276,161,0.015,162,0.019,163,0.015,164,0.564,165,1.233,166,1.96,167,1.616,169,1.616,170,1.409,174,1.409,175,1.667,176,1.625,179,1.403,181,0.794,189,2.208,198,1.5,289,1.409,290,1.831,291,1.96,292,1.154,293,2.153,294,1.616,295,1.616,296,1.154,297,1.508,298,2.47,299,1.154,300,1.616,301,1.154,302,1.616,303,1.154,304,1.831,305,1.616,306,1.318,307,1.233,308,1.616,309,1.154,310,1.318,311,1.233,312,1.616,313,1.154,314,1.508,315,1.08,316,1.616,317,1.65,318,1.902,319,1.318,320,1.616,321,1.154,322,1.559,323,1.318,324,1.154,325,1.616,326,1.154,327,1.508,328,1.616,472,1.318,548,2.153,549,4.461,550,2.384,551,2.389,555,2.185,556,2.254,560,1.508,561,1.508,568,2.92,574,3.097,575,4.312,735,2.839,1680,5.256,1681,3.319,1682,5.1,1683,3.925,1684,3.925,1685,3.925,1686,3.925,1687,5.1,1688,5.1]],["title/directives/NaturalNumbersOnlyDirective.html",[292,0.997,326,0.997]],["body/directives/NaturalNumbersOnlyDirective.html",[3,0.332,4,0.288,5,0.288,7,3.155,8,0.288,27,1.216,30,1.378,32,1.3,33,0.026,34,1.061,35,0.376,36,1.484,89,0.57,90,0.735,98,0.63,111,0.332,112,2.247,125,1.586,161,0.018,162,0.021,163,0.018,174,1.696,175,1.378,197,2.532,287,2.63,292,1.813,318,2.071,323,1.586,326,1.813,327,2.202,363,3.514,507,4.587,951,4.845,957,3.995,966,3.995,1228,4.769,1325,3.514,1689,5.214,1690,3.995,1691,4.724,1692,4.724,1693,5.729,1694,4.724,1695,4.724,1696,4.724,1697,4.724,1698,4.724,1699,4.724,1700,4.724,1701,4.724,1702,4.724,1703,4.724,1704,4.724,1705,4.724,1706,4.724,1707,4.724]],["title/components/TaggingDialogComponent.html",[164,0.337,321,0.997]],["body/components/TaggingDialogComponent.html",[3,0.258,4,0.224,5,0.357,8,0.224,9,1.64,10,1.579,27,1.257,30,1.464,32,1.509,33,0.026,34,1.367,35,0.485,36,1.534,42,1.011,55,0.947,57,2.454,89,0.706,90,0.572,98,0.404,104,1.839,107,1.789,111,0.343,161,0.014,162,0.018,163,0.014,164,0.546,165,1.155,166,1.877,167,1.513,169,1.513,170,1.32,174,1.32,175,1.655,176,1.628,179,1.344,181,0.76,189,2.273,193,2.338,198,1.436,214,1.234,215,1.234,230,2.046,251,4.13,289,1.32,290,1.754,291,1.877,292,1.081,293,2.099,294,1.513,295,1.513,296,1.081,297,1.412,298,2.407,299,1.081,300,1.513,301,1.081,302,1.513,303,1.081,304,1.754,305,1.513,306,1.234,307,1.155,308,1.513,309,1.081,310,1.234,311,1.155,312,1.513,313,1.081,314,1.412,315,1.011,316,1.513,317,1.011,318,1.234,319,1.234,320,1.513,321,1.719,322,1.509,323,1.234,324,1.081,325,1.513,326,1.081,327,1.412,328,1.513,472,1.234,548,2.099,550,2.231,551,2.338,555,2.046,556,2.159,560,1.412,561,1.412,562,0.366,566,1.64,574,2.966,771,2.719,982,3.633,985,2.231,1009,1.624,1086,2.046,1186,2.454,1195,4.13,1708,2.734,1709,4.13,1710,4.064,1711,3.675,1712,3.675,1713,3.675,1714,3.675,1715,3.675,1716,3.107,1717,3.107,1718,4.884,1719,4.884,1720,4.884,1721,4.884]],["title/interfaces/TaggingDialogData.html",[562,0.337,1710,2.264]],["body/interfaces/TaggingDialogData.html",[3,0.33,4,0.287,5,0.287,8,0.287,10,1.48,27,1.21,33,0.026,35,0.51,55,1.051,57,4.275,89,0.773,90,0.732,98,0.517,104,1.383,107,1.383,111,0.401,161,0.017,162,0.021,163,0.017,164,0.568,175,1.131,176,1.131,179,1.294,181,0.889,189,1.579,193,2.195,198,1.383,214,1.579,215,1.579,230,3.564,321,1.383,322,1.294,472,1.579,548,1.688,551,2.195,556,2.078,560,1.807,561,1.807,562,0.468,566,2.239,766,1.579,771,2.618,1009,2.078,1086,3.564,1186,3.14,1708,3.498,1709,3.976,1710,4.11,1716,5.413,1717,3.976]],["title/interfaces/UploadDialogData.html",[562,0.337,1075,2.058]],["body/interfaces/UploadDialogData.html",[3,0.318,4,0.277,5,0.386,8,0.277,10,1.561,27,1.166,33,0.026,35,0.504,55,0.705,89,0.798,90,0.705,95,2.155,98,0.498,107,1.332,111,0.392,125,1.522,161,0.017,162,0.021,163,0.017,164,0.556,175,1.09,176,1.09,179,1.247,181,0.869,189,1.522,193,2.146,198,1.332,214,1.522,215,1.522,219,2.155,288,2.327,313,1.332,314,1.741,322,1.247,365,3.245,472,1.522,548,1.627,551,2.146,556,2.003,560,1.741,561,1.741,562,0.451,566,1.875,766,1.522,767,2.751,771,2.523,793,2.88,1009,2.469,1048,4.701,1049,3.371,1075,3.676,1078,3.73,1086,2.523,1087,3.371,1112,3.371,1113,3.371,1123,3.371,1124,3.371,1144,3.371,1174,3.371,1175,3.831,1176,3.831,1180,3.831,1186,3.026,1187,3.831,1188,3.831,1189,3.831,1190,3.831]],["title/injectables/Utils.html",[0,1.498,1049,1.887]],["body/injectables/Utils.html",[0,2.448,2,2.986,3,0.314,4,0.273,5,0.273,8,0.273,9,1.86,10,1.585,30,1.332,32,1.23,33,0.027,34,1.004,35,0.356,36,1.405,42,1.524,55,0.696,70,1.976,89,0.54,90,0.696,98,0.491,99,4.12,100,4.12,101,4.683,102,4.683,103,2.448,108,3.363,109,3.325,110,2.295,111,0.314,113,2.862,125,1.86,134,1.605,161,0.017,162,0.021,163,0.017,350,3.699,566,2.021,640,3.78,835,2.489,1049,3.084,1722,3.78,1723,5.538,1724,6.29,1725,5.538,1726,4.47,1727,5.538,1728,4.47,1729,4.47,1730,4.47,1731,4.47,1732,4.47,1733,4.47,1734,4.47,1735,5.538,1736,5.538,1737,5.538,1738,5.538,1739,6.018,1740,4.47,1741,4.47,1742,4.47,1743,4.47,1744,4.47,1745,4.47,1746,4.47,1747,4.47]],["title/coverage.html",[1748,3.911]],["body/coverage.html",[0,2.586,1,1.752,5,0.225,6,3.115,33,0.026,35,0.294,39,1.892,51,2.46,70,3.119,93,2.723,98,0.604,104,1.438,134,1.323,161,0.014,162,0.018,163,0.014,164,0.674,165,1.157,171,3.115,217,1.752,226,2.051,288,2.512,292,1.438,296,1.083,299,1.083,301,1.083,303,1.083,306,1.237,307,1.157,309,1.083,311,1.157,313,1.083,315,1.014,317,1.014,319,1.237,321,1.083,324,1.083,326,1.083,346,2.74,364,2.46,495,2.74,507,2.74,509,2.46,515,2.46,521,2.74,525,2.74,527,3.115,545,3.639,546,3.639,552,2.327,562,0.67,576,3.115,767,3.553,768,3.639,775,3.115,776,3.115,821,3.115,945,3.115,995,2.46,996,3.115,1009,1.628,1044,3.115,1045,3.115,1049,2.051,1075,2.237,1170,2.237,1174,3.639,1196,3.639,1199,2.237,1201,2.46,1203,3.115,1205,3.115,1206,3.115,1207,2.74,1208,3.115,1210,2.46,1211,3.115,1212,3.115,1217,2.46,1218,4.181,1223,2.46,1241,2.46,1244,2.46,1250,2.74,1323,4.657,1680,3.115,1681,3.115,1689,3.115,1690,3.115,1708,3.639,1710,2.46,1722,3.115,1748,3.115,1749,3.684,1750,3.684,1751,6.26,1752,3.684,1753,6.09,1754,4.892,1755,3.684,1756,3.684,1757,3.684,1758,3.684,1759,3.684,1760,3.684,1761,3.684,1762,3.684,1763,3.684,1764,3.684,1765,3.684,1766,3.684,1767,3.684,1768,4.892,1769,3.684,1770,6.26,1771,5.492,1772,3.684,1773,3.684,1774,3.684,1775,3.684,1776,3.684,1777,3.684,1778,3.684,1779,3.684,1780,4.892,1781,3.684,1782,3.115,1783,3.115,1784,4.136,1785,3.115,1786,3.115,1787,3.684,1788,3.684]],["title/dependencies.html",[332,2.723,1789,2.831]],["body/dependencies.html",[33,0.026,90,0.762,95,2.328,161,0.018,162,0.022,163,0.018,214,2.103,215,1.643,332,3.269,334,3.64,420,4.353,421,3.554,427,3.269,490,4.138,491,4.138,513,4.949,541,4.138,1790,4.894,1791,5.868,1792,4.894,1793,4.894,1794,4.894,1795,4.894,1796,4.894,1797,4.894,1798,4.894,1799,4.894,1800,4.894,1801,4.894,1802,4.894,1803,4.894,1804,4.894,1805,4.894,1806,4.894,1807,4.894,1808,4.894,1809,4.894,1810,4.894,1811,4.894,1812,4.894]],["title/miscellaneous/functions.html",[1813,1.891,1814,3.447]],["body/miscellaneous/functions.html",[8,0.33,29,3.01,32,1.488,33,0.024,34,1.215,36,1.699,161,0.02,162,0.023,163,0.02,346,4.022,516,4.571,521,4.615,1813,3.611,1814,4.571,1815,5.406]],["title/index.html",[8,0.173,1816,2.831,1817,2.831]],["body/index.html",[4,0.289,33,0.021,34,1.063,134,1.699,161,0.018,162,0.021,163,0.018,164,0.614,176,1.138,240,5.424,345,3.16,365,2.43,372,3.747,533,4.001,862,4.849,864,4.001,885,5.218,895,4.849,1246,4.888,1512,3.52,1515,3.52,1791,4.001,1818,4.731,1819,5.735,1820,6.171,1821,4.731,1822,4.731,1823,6.571,1824,6.758,1825,4.731,1826,4.731,1827,4.731,1828,4.731,1829,4.731,1830,4.731,1831,4.731,1832,4.731,1833,6.171,1834,4.731,1835,4.731,1836,4.731,1837,4.731,1838,4.731,1839,4.731,1840,4.731,1841,4.001,1842,5.735,1843,6.415,1844,4.731,1845,5.735,1846,5.735,1847,4.731,1848,4.731,1849,4.731,1850,6.171,1851,4.731,1852,4.731,1853,4.731]],["title/modules.html",[331,2.809]],["body/modules.html",[33,0.023,161,0.02,162,0.023,163,0.02,330,3.631,331,3.301,341,3.301,421,3.301,1854,5.436,1855,5.436,1856,6.223,1857,5.436,1858,5.436]],["title/overview.html",[777,3.441]],["body/overview.html",[2,2.937,33,0.026,161,0.016,162,0.02,163,0.016,165,2.091,166,1.69,289,1.579,296,1.757,299,1.757,301,1.757,303,1.757,306,2.006,309,1.757,311,1.877,313,1.757,315,1.644,317,1.644,319,2.006,321,1.757,323,1.477,324,1.757,326,1.757,329,2.937,330,4.776,331,2.671,332,2.937,333,3.719,334,3.272,335,2.937,336,2.671,337,3.719,338,3.719,339,3.719,340,3.719,341,3.628,342,5.051,343,4.636,344,3.719,345,2.937,353,3.272,526,2.937,539,2.937,613,3.719,615,3.719,670,3.719,766,1.477,777,3.272,1170,3.329,1859,4.398]],["title/routes.html",[539,3.089]],["body/routes.html",[33,0.023,161,0.02,162,0.023,163,0.02,539,3.691]],["title/miscellaneous/variables.html",[1813,1.891,1860,3.447]],["body/miscellaneous/variables.html",[8,0.292,33,0.026,35,0.54,67,3.668,68,2.912,93,3.583,107,1.405,161,0.018,162,0.021,163,0.018,187,4.291,451,2.659,598,3.061,605,2.962,644,2.901,683,2.659,735,3.211,882,3.852,1078,3.19,1218,3.19,1220,3.553,1223,3.852,1243,3.553,1244,3.852,1782,4.039,1783,4.039,1784,4.039,1785,4.877,1786,4.877,1813,3.19,1841,4.877,1860,4.039,1861,5.768,1862,4.777,1863,4.777,1864,5.768,1865,4.777,1866,4.777,1867,4.777,1868,4.777]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/Utils.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":1165,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["0.36",{"_index":1162,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["0.75",{"_index":1643,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["0/1",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1752,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["0x3",{"_index":1743,"title":{},"body":{"injectables/Utils.html":{}}}],["0x8",{"_index":1744,"title":{},"body":{"injectables/Utils.html":{}}}],["1",{"_index":226,"title":{"interfaces/DialogData-1.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["1.10.0",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["1/41",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["1/56",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{}}}],["100",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{},"coverage.html":{}}}],["1000px",{"_index":749,"title":{},"body":{"components/DashboardComponent.html":{}}}],["100px",{"_index":282,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":739,"title":{},"body":{"components/DashboardComponent.html":{}}}],["11",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["11.0.1",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["110",{"_index":657,"title":{},"body":{"components/DashboardComponent.html":{}}}],["12",{"_index":615,"title":{},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["1200px",{"_index":1106,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["120px",{"_index":757,"title":{},"body":{"components/DashboardComponent.html":{}}}],["12px",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["13",{"_index":1859,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1741,"title":{},"body":{"injectables/Utils.html":{}}}],["16px",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["18/56",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["181",{"_index":1173,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["2",{"_index":1170,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{},"overview.html":{}}}],["2.27.0",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":842,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["200px",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["201",{"_index":874,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["2020",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{}}}],["207",{"_index":845,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["209",{"_index":919,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["20px",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["21",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["220",{"_index":1161,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["24px",{"_index":745,"title":{},"body":{"components/DashboardComponent.html":{}}}],["25",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["2}}s",{"_index":1721,"title":{},"body":{"components/TaggingDialogComponent.html":{}}}],["3",{"_index":670,"title":{},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["3.5.0",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":1360,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["3000",{"_index":1427,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["300px",{"_index":1476,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["30px",{"_index":754,"title":{},"body":{"components/DashboardComponent.html":{}}}],["32",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["3f51b5",{"_index":661,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4",{"_index":613,"title":{},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["4.0.0",{"_index":1798,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["4/19",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":847,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["40em",{"_index":1157,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["470px",{"_index":751,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4px",{"_index":1163,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["4xxx",{"_index":1731,"title":{},"body":{"injectables/Utils.html":{}}}],["5",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["5.0.0",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":680,"title":{},"body":{"components/DashboardComponent.html":{}}}],["500",{"_index":850,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["500px",{"_index":1099,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["502",{"_index":851,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["6",{"_index":713,"title":{},"body":{"components/DashboardComponent.html":{}}}],["6.5.4",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":611,"title":{},"body":{"components/DashboardComponent.html":{}}}],["70",{"_index":656,"title":{},"body":{"components/DashboardComponent.html":{}}}],["81",{"_index":1172,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["8px",{"_index":940,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["9.1.3",{"_index":1791,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["90vh",{"_index":765,"title":{},"body":{"components/DashboardComponent.html":{}}}],["9]*/g",{"_index":1705,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["_",{"_index":1387,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["_el",{"_index":1693,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["_event",{"_index":632,"title":{},"body":{"components/DashboardComponent.html":{}}}],["_nodedata",{"_index":1388,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["_nodedata.expandable",{"_index":1389,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["_nodedata.item",{"_index":1391,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["above",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["absolute",{"_index":1168,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["accordingly",{"_index":1136,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["accordion",{"_index":824,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["accumulator",{"_index":1263,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["accumulator.concat(node",{"_index":1269,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["action",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{}}}],["actual_component",{"_index":328,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["add",{"_index":1121,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["added",{"_index":678,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["additional",{"_index":906,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["addkeywordmodel",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{}}}],["addkeywordmodel(kwm",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{}}}],["addnewitem(node",{"_index":1600,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["adds",{"_index":854,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["adduncategorizeddimension",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{}}}],["adduncategorizeddimension(dim",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{}}}],["adduncategorizedkeyword",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{}}}],["adduncategorizedkeyword(key",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{}}}],["again",{"_index":1541,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["align",{"_index":759,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["alignwithlabel",{"_index":676,"title":{},"body":{"components/DashboardComponent.html":{}}}],["already",{"_index":846,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["amos",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["and/or",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["angular",{"_index":885,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1790,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1792,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":467,"title":{},"body":{"modules/AppModule.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/cdk/tree",{"_index":1235,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/common",{"_index":1793,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{}}}],["angular/compiler",{"_index":1794,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":427,"title":{},"body":{"modules/AppModule.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":476,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":463,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":472,"title":{},"body":{"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["angular/material/expansion",{"_index":474,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentationComponent.html":{}}}],["angular/material/form",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":450,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":439,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":437,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":444,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":455,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentOverviewComponent.html":{}}}],["angular/material/progress",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":453,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":441,"title":{},"body":{"modules/AppModule.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/material/sort",{"_index":431,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":429,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":459,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":480,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tree",{"_index":470,"title":{},"body":{"modules/AppModule.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/platform",{"_index":420,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":541,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["another",{"_index":1646,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["api",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["app",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"index.html":{}}}],["app.component",{"_index":483,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["app/models/ifile.model",{"_index":1186,"title":{},"body":{"components/FileUploadDialogComponent.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["app/services/utils.service",{"_index":1187,"title":{},"body":{"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["appcomponent",{"_index":165,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appdragdrop",{"_index":946,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["appdragdrop]'},{'name",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["appears",{"_index":1453,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["application/json",{"_index":136,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FileService.html":{}}}],["applied",{"_index":912,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["apply",{"_index":902,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["applytaggingmethod",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{}}}],["applytaggingmethod(request",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{}}}],["appmodule",{"_index":330,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appnaturalnumbersonly",{"_index":327,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{}}}],["apppage",{"_index":525,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":341,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["apr",{"_index":721,"title":{},"body":{"components/DashboardComponent.html":{}}}],["area",{"_index":653,"title":{},"body":{"components/DashboardComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["arguments",{"_index":957,"title":{},"body":{"directives/DragdropDirective.html":{},"directives/NaturalNumbersOnlyDirective.html":{}}}],["arising",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["arr.findindex((elem",{"_index":1455,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["array",{"_index":793,"title":{},"body":{"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"interfaces/UploadDialogData.html":{}}}],["array(\"jan",{"_index":718,"title":{},"body":{"components/DashboardComponent.html":{}}}],["array(\"sun",{"_index":707,"title":{},"body":{"components/DashboardComponent.html":{}}}],["artifacts",{"_index":1835,"title":{},"body":{"index.html":{}}}],["asc",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{}}}],["assets/img/infinitag1.png",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["assign",{"_index":866,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["assigned",{"_index":841,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["associated",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"directives/NaturalNumbersOnlyDirective.html":{}}}],["aug",{"_index":724,"title":{},"body":{"components/DashboardComponent.html":{}}}],["authors",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auto",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/FileUploadComponent.html":{}}}],["automated",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["automatedtaggingparametersdialog",{"_index":296,"title":{"components/AutomatedTaggingParametersDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1829,"title":{},"body":{"index.html":{}}}],["available",{"_index":1858,"title":{},"body":{"modules.html":{}}}],["availablelanguages",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["axis",{"_index":665,"title":{},"body":{"components/DashboardComponent.html":{}}}],["axispointer",{"_index":666,"title":{},"body":{"components/DashboardComponent.html":{}}}],["axistick",{"_index":675,"title":{},"body":{"components/DashboardComponent.html":{}}}],["b",{"_index":646,"title":{},"body":{"components/DashboardComponent.html":{}}}],["back",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["backend",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/Utils.html":{}}}],["backendstatus",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentOverviewComponent.html":{}}}],["background",{"_index":761,"title":{},"body":{"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{}}}],["bar",{"_index":442,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["baroptions",{"_index":579,"title":{},"body":{"components/DashboardComponent.html":{}}}],["barwidth",{"_index":679,"title":{},"body":{"components/DashboardComponent.html":{}}}],["basis",{"_index":938,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["before",{"_index":1647,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["behaviorsubject",{"_index":1238,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["below",{"_index":1645,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["between",{"_index":939,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["bitwise",{"_index":1738,"title":{},"body":{"injectables/Utils.html":{}}}],["black",{"_index":1356,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["blob",{"_index":160,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FileService.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["blob([json.stringify(kwmcopy",{"_index":1499,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["body",{"_index":834,"title":{},"body":{"components/DocumentationComponent.html":{},"injectables/FileService.html":{}}}],["boolean",{"_index":564,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"directives/DragdropDirective.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["bootstrap",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":741,"title":{},"body":{"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{}}}],["bottom",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["break",{"_index":688,"title":{},"body":{"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["browse",{"_index":1856,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"components/DashboardComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":534,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["browserlang",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["browsermodule",{"_index":419,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1246,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"index.html":{}}}],["buttons",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{}}}],["c",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"injectables/Utils.html":{}}}],["calculable",{"_index":651,"title":{},"body":{"components/DashboardComponent.html":{}}}],["called",{"_index":1126,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["cancel",{"_index":1195,"title":{},"body":{"components/FileUploadDialogComponent.html":{},"components/TaggingDialogComponent.html":{}}}],["cancel_all",{"_index":1193,"title":{},"body":{"components/FileUploadDialogComponent.html":{}}}],["cancelall",{"_index":1176,"title":{},"body":{"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["canceljob",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{}}}],["canceljob(jobid",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{}}}],["cancelled",{"_index":1113,"title":{},"body":{"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["cancelupload",{"_index":1177,"title":{},"body":{"components/FileUploadDialogComponent.html":{}}}],["cancelupload(file",{"_index":1180,"title":{},"body":{"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["case",{"_index":686,"title":{},"body":{"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["catcherror",{"_index":1093,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["category",{"_index":673,"title":{},"body":{"components/DashboardComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["cdkdragdrop",{"_index":1229,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["center",{"_index":641,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["change",{"_index":864,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["changebar",{"_index":580,"title":{},"body":{"components/DashboardComponent.html":{}}}],["changed",{"_index":865,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["changekeywords",{"_index":863,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["changelanguage",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["changelanguage(event",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["characters",{"_index":1443,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["charge",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["chart",{"_index":753,"title":{},"body":{"components/DashboardComponent.html":{}}}],["check",{"_index":1515,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"index.html":{}}}],["checkcorrectness(kwm",{"_index":1516,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["checked",{"_index":1434,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["checkkeyword(kw",{"_index":1435,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["checklist",{"_index":1245,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["checklistdatabase",{"_index":1250,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["checks",{"_index":1432,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["child[\"shouldbe",{"_index":1544,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["children",{"_index":1242,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["circle",{"_index":756,"title":{},"body":{"components/DashboardComponent.html":{}}}],["claim",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["class",{"_index":98,"title":{"classes/AppPage.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{},"coverage.html":{}}}],["class.fileover",{"_index":950,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["classes",{"_index":526,"title":{},"body":{"classes/AppPage.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"overview.html":{}}}],["cleanup",{"_index":1672,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["cleanupcancelledfiles",{"_index":1050,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["cleanupcancelledfiles(files",{"_index":1062,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["cli",{"_index":1820,"title":{},"body":{"index.html":{}}}],["close",{"_index":574,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["cloud",{"_index":915,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["cloud_done",{"_index":1124,"title":{},"body":{"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["cloud_upload",{"_index":1148,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["cluster_appmodule",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1831,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":830,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["color",{"_index":660,"title":{},"body":{"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["column",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["communication",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{},"injectables/Utils.html":{}}}],["complete",{"_index":918,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["component",{"_index":164,"title":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["components",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"overview.html":{}}}],["computeoptimal",{"_index":563,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{}}}],["conditions",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["connection",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["console.error('undefined",{"_index":1587,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["console.log('dragnode",{"_index":1653,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["console.log(d.getfullyear",{"_index":730,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log(e",{"_index":818,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["console.log(params",{"_index":130,"title":{},"body":{"injectables/ApiService.html":{}}}],["console.log(response",{"_index":1188,"title":{},"body":{"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["console.log(result",{"_index":1115,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["const",{"_index":125,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["constructor(_el",{"_index":1691,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["constructor(api",{"_index":593,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{}}}],["constructor(dialogref",{"_index":550,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["constructor(fileservice",{"_index":1058,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["constructor(http",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(httpclient",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"injectables/FileService.html":{}}}],["constructor(private",{"_index":112,"title":{},"body":{"injectables/ApiService.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"injectables/FileService.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"directives/NaturalNumbersOnlyDirective.html":{}}}],["container",{"_index":738,"title":{},"body":{"components/DashboardComponent.html":{}}}],["containing",{"_index":904,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["containlabel",{"_index":671,"title":{},"body":{"components/DashboardComponent.html":{}}}],["contains",{"_index":1325,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"directives/NaturalNumbersOnlyDirective.html":{}}}],["content",{"_index":135,"title":{},"body":{"injectables/ApiService.html":{},"classes/AppPage.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IResponse.html":{}}}],["context",{"_index":1785,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["control",{"_index":156,"title":{},"body":{"injectables/ApiService.html":{}}}],["convert",{"_index":1393,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copies",{"_index":380,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["copy",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copypasteitem(from",{"_index":1288,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copypasteitemabove(from",{"_index":1298,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copypasteitembelow(from",{"_index":1300,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copyright",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["correct",{"_index":1550,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["correctness",{"_index":1433,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["corresponding",{"_index":1068,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["coverage",{"_index":1748,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":1472,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["creates",{"_index":1549,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["creation_date",{"_index":1197,"title":{},"body":{"interfaces/IDocument.html":{},"interfaces/IResponse.html":{}}}],["cur",{"_index":1315,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["cur.children",{"_index":1318,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["cur.children.foreach(child",{"_index":1543,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["cur.item",{"_index":1530,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["cur.nodetype",{"_index":1545,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["cur.shouldbe",{"_index":1532,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["currently",{"_index":1332,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["d",{"_index":647,"title":{},"body":{"components/DashboardComponent.html":{}}}],["d.getday",{"_index":712,"title":{},"body":{"components/DashboardComponent.html":{}}}],["d.setdate(1",{"_index":729,"title":{},"body":{"components/DashboardComponent.html":{}}}],["damages",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["darkblue",{"_index":1353,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dashboard",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{},"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["dashboard.component.html",{"_index":578,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":577,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.component",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboardcomponent",{"_index":299,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":107,"title":{},"body":{"injectables/ApiService.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"miscellaneous/variables.html":{}}}],["data.files.length",{"_index":1192,"title":{},"body":{"components/FileUploadDialogComponent.html":{}}}],["data.id",{"_index":990,"title":{},"body":{"components/FileExistsDialogComponent.html":{}}}],["data.progressmonitor.finished",{"_index":1191,"title":{},"body":{"components/FileUploadDialogComponent.html":{}}}],["data.status",{"_index":1718,"title":{},"body":{"components/TaggingDialogComponent.html":{}}}],["data.timeremaining.tofixed(1",{"_index":1720,"title":{},"body":{"components/TaggingDialogComponent.html":{}}}],["database",{"_index":853,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["database.datachange.subscribe(data",{"_index":1376,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["datachange",{"_index":1253,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["datasource",{"_index":1351,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["date",{"_index":709,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IResponse.html":{}}}],["date().gettime",{"_index":1634,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["date(d.setdate(d.getdate",{"_index":711,"title":{},"body":{"components/DashboardComponent.html":{}}}],["daterangepicker",{"_index":481,"title":{},"body":{"modules/AppModule.html":{}}}],["days",{"_index":608,"title":{},"body":{"components/DashboardComponent.html":{}}}],["daysname",{"_index":706,"title":{},"body":{"components/DashboardComponent.html":{}}}],["de",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["deal",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dealings",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dec",{"_index":728,"title":{},"body":{"components/DashboardComponent.html":{}}}],["declarations",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":1354,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["decorators",{"_index":555,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["deep",{"_index":1523,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["default",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/FileUploadComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"injectables/Utils.html":{}}}],["delete",{"_index":870,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deleted",{"_index":873,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deletedimension(dimension",{"_index":1458,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deleteexample",{"_index":886,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["deletefile",{"_index":1000,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefile(file",{"_index":1008,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefiles",{"_index":1001,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefiles(idocs",{"_index":1011,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefromhierarchy(node",{"_index":1576,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deleteitem(node",{"_index":1286,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deletekeyword(keyword",{"_index":1463,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deletenode(nodes",{"_index":1302,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deletes",{"_index":1563,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deleting",{"_index":999,"title":{},"body":{"injectables/FileService.html":{}}}],["dependencies",{"_index":332,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":522,"title":{},"body":{"modules/AppModule.html":{}}}],["descendants",{"_index":1309,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["descendants.foreach(node",{"_index":1580,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["description",{"_index":835,"title":{},"body":{"components/DocumentationComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/Utils.html":{}}}],["deutch",{"_index":249,"title":{},"body":{"components/AppComponent.html":{}}}],["dev",{"_index":1826,"title":{},"body":{"index.html":{}}}],["development",{"_index":1822,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["dialog'},{'name",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["dialogdata",{"_index":552,"title":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{}},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":548,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["dialogref.afterclosed",{"_index":1107,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":1100,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1477,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dialogs/automated",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["dialogs/file",{"_index":497,"title":{},"body":{"modules/AppModule.html":{},"components/FileUploadComponent.html":{}}}],["dialogs/keyword",{"_index":511,"title":{},"body":{"modules/AppModule.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dialogs/tagging.dialog.component",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["dict",{"_index":142,"title":{},"body":{"injectables/ApiService.html":{}}}],["different",{"_index":1665,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dim",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{}}}],["dimension",{"_index":882,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["dimensions",{"_index":878,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dimensions/keywords",{"_index":1579,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dimformatted",{"_index":1419,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dims",{"_index":875,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["direction",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["directive",{"_index":292,"title":{"directives/DragdropDirective.html":{},"directives/NaturalNumbersOnlyDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{}}}],["directives",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"overview.html":{}}}],["directives/dragdrop.directive",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["directives/natural",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1834,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1838,"title":{},"body":{"index.html":{}}}],["display",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{}}}],["displaying",{"_index":1097,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["dist",{"_index":1837,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["docs",{"_index":1202,"title":{},"body":{"interfaces/IDocument.html":{},"interfaces/IResponse.html":{}}}],["document",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["document.createelement('a",{"_index":1503,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["documentation",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{},"coverage.html":{}}}],["documentation'},{'name",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["documentation.component.html",{"_index":823,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.scss",{"_index":822,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation/documentation.component",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["documentationcomponent",{"_index":301,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documentoverviewcomponent",{"_index":303,"title":{"components/DocumentOverviewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documents",{"_index":543,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"injectables/FileService.html":{},"interfaces/ITaggingRequest.html":{}}}],["documents.browse_for_files",{"_index":1155,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["documents.drag_drop_dialog",{"_index":1154,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["documents.file_exists",{"_index":989,"title":{},"body":{"components/FileExistsDialogComponent.html":{}}}],["documents.file_exists_add",{"_index":993,"title":{},"body":{"components/FileExistsDialogComponent.html":{}}}],["documents.file_exists_cancel",{"_index":994,"title":{},"body":{"components/FileExistsDialogComponent.html":{}}}],["documents.file_exists_overwrite",{"_index":992,"title":{},"body":{"components/FileExistsDialogComponent.html":{}}}],["documents.file_exists_question",{"_index":991,"title":{},"body":{"components/FileExistsDialogComponent.html":{}}}],["documents.ml_parameters",{"_index":569,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{}}}],["documents.ml_parameters_checkbox",{"_index":571,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{}}}],["documents.ml_parameters_dialog",{"_index":570,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{}}}],["documents.ml_parameters_numclusters",{"_index":572,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{}}}],["documents.ml_parameters_numkeywords",{"_index":573,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{}}}],["documentsurl",{"_index":126,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentOverviewComponent.html":{}}}],["documents{{this.stats.n_total_docs",{"_index":737,"title":{},"body":{"components/DashboardComponent.html":{}}}],["documentview/document",{"_index":484,"title":{},"body":{"modules/AppModule.html":{}}}],["documentviewtablecomponent",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["doe",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["doesnt",{"_index":1625,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dom",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["domsanitizer",{"_index":595,"title":{},"body":{"components/DashboardComponent.html":{}}}],["down",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{}}}],["download",{"_index":857,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["downloaded",{"_index":860,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["downloads",{"_index":858,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["drag",{"_index":1357,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragdropdirective",{"_index":324,"title":{"directives/DragdropDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dragdropmodule",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["dragging",{"_index":1612,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragleave",{"_index":952,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["dragleave(event",{"_index":958,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["dragnode",{"_index":1358,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandoverarea",{"_index":1363,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandovernode",{"_index":1361,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandovertime",{"_index":1362,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandoverwaittimems",{"_index":1359,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragover",{"_index":953,"title":{},"body":{"directives/DragdropDirective.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragover(event",{"_index":960,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["dragoveremptytree(event",{"_index":1604,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["drop",{"_index":468,"title":{},"body":{"modules/AppModule.html":{},"directives/DragdropDirective.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["drop(event",{"_index":962,"title":{},"body":{"directives/DragdropDirective.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dropoveremptytree(event",{"_index":1607,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dropped",{"_index":1651,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dropping",{"_index":1605,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dropzone",{"_index":1159,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["dt",{"_index":710,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dt.getmonth",{"_index":715,"title":{},"body":{"components/DashboardComponent.html":{}}}],["duplicate",{"_index":1481,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["duration",{"_index":1426,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dynamic",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":788,"title":{},"body":{"components/DocumentOverviewComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["e.pagesize",{"_index":819,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["e2e",{"_index":1848,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":527,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":532,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":530,"title":{},"body":{"classes/AppPage.html":{}}}],["e83e8c",{"_index":662,"title":{},"body":{"components/DashboardComponent.html":{}}}],["each",{"_index":1248,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["echarts",{"_index":513,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["edit",{"_index":747,"title":{},"body":{"components/DashboardComponent.html":{}}}],["elem",{"_index":1456,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["element",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["element(by.css('app",{"_index":535,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":1228,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"directives/NaturalNumbersOnlyDirective.html":{}}}],["empty",{"_index":1471,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["emptyitem",{"_index":1365,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["en",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["end_date",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{}}}],["end_date?:string",{"_index":117,"title":{},"body":{"injectables/ApiService.html":{}}}],["english",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["ensured",{"_index":1650,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["ensures",{"_index":1696,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["enter",{"_index":1413,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["entered",{"_index":852,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["enum",{"_index":1322,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["environment",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DocumentOverviewComponent.html":{},"injectables/FileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.serverurl",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentOverviewComponent.html":{}}}],["environment.serverurl}/documents",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{}}}],["environments/environment",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DocumentOverviewComponent.html":{},"injectables/FileService.html":{}}}],["error",{"_index":861,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["error('method",{"_index":1256,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["error(msg",{"_index":1430,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["etc",{"_index":924,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["event",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"directives/DragdropDirective.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"directives/NaturalNumbersOnlyDirective.html":{}}}],["event.body.fid",{"_index":1152,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.body.id",{"_index":1151,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.container",{"_index":1590,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.container.data",{"_index":1595,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.currentindex",{"_index":1593,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.datatransfer.files",{"_index":979,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["event.datatransfer.setdata('foo",{"_index":1628,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.datatransfer.setdragimage(this.emptyitem.nativeelement",{"_index":1629,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.offsetx",{"_index":1638,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.offsety",{"_index":1641,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.preventdefault",{"_index":972,"title":{},"body":{"directives/DragdropDirective.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.previouscontainer",{"_index":1589,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.previousindex",{"_index":1592,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.status",{"_index":1150,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.stoppropagation",{"_index":973,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["event.target.clientheight",{"_index":1642,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.target.clientwidth",{"_index":1639,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.total",{"_index":1146,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.type",{"_index":1137,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["event.value",{"_index":685,"title":{},"body":{"components/DashboardComponent.html":{}}}],["event[0].value",{"_index":1675,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["eventemitter",{"_index":955,"title":{},"body":{"directives/DragdropDirective.html":{},"components/FileUploadComponent.html":{}}}],["events",{"_index":1037,"title":{},"body":{"injectables/FileService.html":{}}}],["example",{"_index":7,"title":{},"body":{"injectables/ApiService.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"directives/NaturalNumbersOnlyDirective.html":{}}}],["execute",{"_index":1845,"title":{},"body":{"index.html":{}}}],["existing",{"_index":855,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["existingnode",{"_index":1397,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["existingnode.item",{"_index":1400,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["exists",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["exists.component",{"_index":498,"title":{},"body":{"modules/AppModule.html":{},"components/FileUploadComponent.html":{}}}],["exists.component.ts",{"_index":768,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{},"coverage.html":{}}}],["exists.component.ts:38",{"_index":983,"title":{},"body":{"components/FileExistsDialogComponent.html":{}}}],["exists.component.ts:41",{"_index":987,"title":{},"body":{"components/FileExistsDialogComponent.html":{}}}],["exists.component.ts:42",{"_index":988,"title":{},"body":{"components/FileExistsDialogComponent.html":{}}}],["exists.component.ts:43",{"_index":986,"title":{},"body":{"components/FileExistsDialogComponent.html":{}}}],["exists.component.ts:45",{"_index":984,"title":{},"body":{"components/FileExistsDialogComponent.html":{}}}],["exists.dialog.html",{"_index":770,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{}}}],["expand",{"_index":829,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["expandable",{"_index":1221,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["expansion",{"_index":935,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["export",{"_index":111,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{}}}],["exportkeywordmodel",{"_index":1492,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["exports",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"overview.html":{}}}],["express",{"_index":396,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["extracted",{"_index":1514,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["f.fid",{"_index":1102,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["f_id",{"_index":839,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["failure",{"_index":930,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["false",{"_index":683,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["feb",{"_index":719,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fetched",{"_index":880,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["fid",{"_index":769,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["field",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"directives/NaturalNumbersOnlyDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{},"coverage.html":{}}}],["file.fid",{"_index":1030,"title":{},"body":{"injectables/FileService.html":{}}}],["file.file",{"_index":1028,"title":{},"body":{"injectables/FileService.html":{}}}],["file.file.name",{"_index":1194,"title":{},"body":{"components/FileUploadDialogComponent.html":{}}}],["file.icon",{"_index":1123,"title":{},"body":{"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["file.progress",{"_index":1144,"title":{},"body":{"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["file.status",{"_index":1112,"title":{},"body":{"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["filedata",{"_index":1027,"title":{},"body":{"injectables/FileService.html":{}}}],["filedata.name",{"_index":1032,"title":{},"body":{"injectables/FileService.html":{}}}],["filedropped",{"_index":948,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["fileexistsdialogcomponent",{"_index":309,"title":{"components/FileExistsDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filekey",{"_index":837,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["filelist",{"_index":1070,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["fileover",{"_index":969,"title":{},"body":{"directives/DragdropDirective.html":{},"components/FileUploadComponent.html":{}}}],["filereader",{"_index":629,"title":{},"body":{"components/DashboardComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["filereader.onload",{"_index":1554,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["filereader.readastext(file",{"_index":1562,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["files",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"directives/DragdropDirective.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{},"index.html":{}}}],["files.item(0",{"_index":1553,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["files.length",{"_index":980,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["fileservice",{"_index":995,"title":{"injectables/FileService.html":{}},"body":{"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"coverage.html":{}}}],["fileuploadcomponent",{"_index":311,"title":{"components/FileUploadComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploaddialogcomponent",{"_index":313,"title":{"components/FileUploadDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/UploadDialogData.html":{},"coverage.html":{},"overview.html":{}}}],["fill",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["fills",{"_index":253,"title":{},"body":{"components/AppComponent.html":{}}}],["filter",{"_index":732,"title":{},"body":{"components/DashboardComponent.html":{}}}],["filterstring",{"_index":780,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["finding",{"_index":1337,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["finished",{"_index":1087,"title":{},"body":{"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["firefox",{"_index":1623,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["fitness",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["fixed",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["flag",{"_index":1840,"title":{},"body":{"index.html":{}}}],["flat",{"_index":1335,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatitem",{"_index":1219,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode",{"_index":1399,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode.expandable",{"_index":1403,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode.item",{"_index":1401,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode.level",{"_index":1402,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode.nodetype",{"_index":1404,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnodemap",{"_index":1339,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flattened",{"_index":1340,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flattreecontrol",{"_index":1234,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":1373,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flex",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["flexbox",{"_index":255,"title":{},"body":{"components/AppComponent.html":{}}}],["focus",{"_index":1415,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["following",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["font",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["footer",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["form",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{}}}],["formatted",{"_index":1416,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["formatter",{"_index":645,"title":{},"body":{"components/DashboardComponent.html":{}}}],["formbuilder",{"_index":1240,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["formdata",{"_index":1026,"title":{},"body":{"injectables/FileService.html":{}}}],["formdata.append('fid",{"_index":1029,"title":{},"body":{"injectables/FileService.html":{}}}],["formdata.append('filekey",{"_index":1031,"title":{},"body":{"injectables/FileService.html":{}}}],["formgroup",{"_index":1239,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["formsmodule",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":920,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["free",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["fri",{"_index":703,"title":{},"body":{"components/DashboardComponent.html":{}}}],["from.children",{"_index":1295,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["from.children.foreach(child",{"_index":1296,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["from.item",{"_index":1293,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["from.nodetype",{"_index":1294,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["front",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["frontend",{"_index":1818,"title":{},"body":{"index.html":{}}}],["function",{"_index":515,"title":{},"body":{"modules/AppModule.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["functionality",{"_index":625,"title":{},"body":{"components/DashboardComponent.html":{}}}],["functions",{"_index":1814,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["further",{"_index":1849,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1833,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1512,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"index.html":{}}}],["getchildren",{"_index":1385,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getdescendants(node",{"_index":1311,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getdocuments",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["getdocuments(page",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{}}}],["getfiles",{"_index":1002,"title":{},"body":{"injectables/FileService.html":{}}}],["getfiles(idocs",{"_index":1014,"title":{},"body":{"injectables/FileService.html":{}}}],["getkeywordlistentries",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{}}}],["getkeywordmodels",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{}}}],["getlevel",{"_index":1381,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getparentfromnodes(node",{"_index":1283,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getpreviousdays",{"_index":581,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getpreviousmondays",{"_index":582,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getpreviousmonths",{"_index":583,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getpreviousyears",{"_index":584,"title":{},"body":{"components/DashboardComponent.html":{}}}],["gets",{"_index":1125,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getstats",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{}}}],["gettaggingjobstatus",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{}}}],["gettaggingjobstatus(jobid",{"_index":78,"title":{},"body":{"injectables/ApiService.html":{}}}],["getting",{"_index":1816,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":528,"title":{},"body":{"classes/AppPage.html":{}}}],["getuncategorizeddimensions",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{}}}],["getuncategorizedkeywords",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{}}}],["getwordcloud",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{}}}],["given",{"_index":1548,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["go",{"_index":1852,"title":{},"body":{"index.html":{}}}],["granted",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["graph",{"_index":1857,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":668,"title":{},"body":{"components/DashboardComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["h2",{"_index":941,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["handle",{"_index":876,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledragend(event",{"_index":1673,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledragover(event",{"_index":1631,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledragstart(event",{"_index":1616,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledrop(event",{"_index":1652,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handlefilesend",{"_index":1051,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["handlefilesend(event",{"_index":1064,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["handles",{"_index":1096,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handling",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FileService.html":{},"injectables/Utils.html":{}}}],["haschild",{"_index":1386,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["hasnocontent",{"_index":1390,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["header",{"_index":937,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["headers",{"_index":133,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{},"injectables/FileService.html":{}}}],["health",{"_index":892,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["height",{"_index":750,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["hello",{"_index":932,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["help",{"_index":1850,"title":{},"body":{"index.html":{}}}],["helps",{"_index":1336,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["here",{"_index":1663,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["hereby",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["hierarchy",{"_index":144,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{},"interfaces/IKeyWordModel.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["holders",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home.document_overview",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["home.documentation",{"_index":237,"title":{},"body":{"components/AppComponent.html":{}}}],["home.language",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["home.motto",{"_index":731,"title":{},"body":{"components/DashboardComponent.html":{}}}],["home.server_status",{"_index":245,"title":{},"body":{"components/AppComponent.html":{}}}],["home.title",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["host",{"_index":964,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["hostbinding",{"_index":965,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["hostbinding('class.fileover",{"_index":968,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["hostbindings",{"_index":949,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["hostlistener",{"_index":966,"title":{},"body":{"directives/DragdropDirective.html":{},"directives/NaturalNumbersOnlyDirective.html":{}}}],["hostlistener('dragleave",{"_index":975,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["hostlistener('dragover",{"_index":970,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["hostlistener('drop",{"_index":977,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["hostlistener('input",{"_index":1699,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["hostlisteners",{"_index":951,"title":{},"body":{"directives/DragdropDirective.html":{},"directives/NaturalNumbersOnlyDirective.html":{}}}],["html",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["html5",{"_index":1626,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["http",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://18.235.6.254:5000",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1828,"title":{},"body":{"index.html":{}}}],["http://localhost:5000",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DocumentationComponent.html":{},"injectables/FileService.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":424,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1065,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["httpevents",{"_index":1134,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["httpeventtype",{"_index":1091,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["httpeventtype.response",{"_index":1149,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["httpeventtype.responseheader",{"_index":1140,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["httpeventtype.sent",{"_index":1138,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["httpeventtype.uploadprogress",{"_index":1142,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["httpheaders",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FileService.html":{}}}],["httploaderfactory",{"_index":521,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(httpclient",{"_index":516,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["httpoptions",{"_index":132,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FileService.html":{}}}],["https://stackoverflow.com/questions/19055264/why",{"_index":1624,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["icon",{"_index":1204,"title":{},"body":{"interfaces/IFile.html":{}}}],["iconpath",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["id",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/DialogData-1.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["identifier",{"_index":1749,"title":{},"body":{"coverage.html":{}}}],["idoc",{"_index":1020,"title":{},"body":{"injectables/FileService.html":{}}}],["idocs",{"_index":1013,"title":{},"body":{"injectables/FileService.html":{}}}],["idocument",{"_index":217,"title":{"interfaces/IDocument.html":{}},"body":{"components/AppComponent.html":{},"components/DocumentOverviewComponent.html":{},"injectables/FileService.html":{},"interfaces/IDocument.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingRequest.html":{},"coverage.html":{}}}],["idocument.model",{"_index":1216,"title":{},"body":{"interfaces/ITaggingRequest.html":{}}}],["ids",{"_index":859,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["idx",{"_index":1131,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["if(!cur.hasownproperty(\"item",{"_index":1528,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(!cur.hasownproperty(\"nodetype",{"_index":1529,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(!kwm.hasownproperty(\"hierarchy",{"_index":1520,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(!kwm.hasownproperty(\"id",{"_index":1517,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(!re.test(kw",{"_index":1439,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(!this.checkkeyword(cur.item",{"_index":1535,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(!this.checkkeyword(keyformatted",{"_index":1447,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(cur.hasownproperty(\"children",{"_index":1542,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(cur.nodetype",{"_index":1531,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(iscorrect",{"_index":1558,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(kwm.keywords.includes(cur.item",{"_index":1536,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(replaced",{"_index":1706,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["if(this.keywordmodels.filter(function(kwm",{"_index":1559,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["ifile",{"_index":1009,"title":{"interfaces/IFile.html":{}},"body":{"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IFile.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"coverage.html":{}}}],["ikeyword",{"_index":1199,"title":{"interfaces/IKeyword.html":{}},"body":{"interfaces/IDocument.html":{},"interfaces/IKeyword.html":{},"interfaces/IResponse.html":{},"coverage.html":{}}}],["ikeyword.model",{"_index":1200,"title":{},"body":{"interfaces/IDocument.html":{},"interfaces/IResponse.html":{}}}],["ikeywordlistentry",{"_index":1207,"title":{"interfaces/IKeywordListEntry.html":{}},"body":{"interfaces/IKeywordListEntry.html":{},"coverage.html":{}}}],["ikeywordmodel",{"_index":39,"title":{"interfaces/IKeyWordModel.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["ikeywordmodel.model",{"_index":1215,"title":{},"body":{"interfaces/ITaggingRequest.html":{}}}],["implemented",{"_index":1257,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["implements",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["implied",{"_index":397,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["import",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{}}}],["important",{"_index":746,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["imported",{"_index":1519,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["importkeywordmodel",{"_index":1513,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["importkeywordmodel(files",{"_index":1552,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["imports",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["included",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["including",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":1613,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["indicating",{"_index":881,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["infinitag",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{}}}],["information",{"_index":922,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["initalvalue",{"_index":1701,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["initalvalue.replace(/[^0",{"_index":1704,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["initialize",{"_index":1258,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["inject",{"_index":560,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["inject(mat_dialog_data",{"_index":556,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/FileService.html":{},"injectables/Utils.html":{}},"body":{"injectables/ApiService.html":{},"injectables/FileService.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/Utils.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FileService.html":{},"injectables/Utils.html":{},"overview.html":{}}}],["input",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{}}}],["input(event",{"_index":1694,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["input.dialog.component",{"_index":512,"title":{},"body":{"modules/AppModule.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["input.dialog.component.ts",{"_index":1681,"title":{},"body":{"components/KWMNameDialog.html":{},"coverage.html":{}}}],["input.dialog.component.ts:32",{"_index":1683,"title":{},"body":{"components/KWMNameDialog.html":{}}}],["input.dialog.component.ts:35",{"_index":1685,"title":{},"body":{"components/KWMNameDialog.html":{}}}],["input.dialog.component.ts:36",{"_index":1686,"title":{},"body":{"components/KWMNameDialog.html":{}}}],["input.dialog.component.ts:38",{"_index":1684,"title":{},"body":{"components/KWMNameDialog.html":{}}}],["input.dialog.html",{"_index":1682,"title":{},"body":{"components/KWMNameDialog.html":{}}}],["inputing",{"_index":1469,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insert",{"_index":1599,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["inserted",{"_index":1345,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insertitem(parent",{"_index":1274,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insertitemabove(node",{"_index":1277,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insertitembelow(node",{"_index":1282,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insertroot(name",{"_index":1270,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["inside",{"_index":752,"title":{},"body":{"components/DashboardComponent.html":{}}}],["integers",{"_index":1698,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["interface",{"_index":562,"title":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"coverage.html":{}}}],["interfaces",{"_index":766,"title":{},"body":{"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"overview.html":{}}}],["invalid",{"_index":1442,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["iresponse",{"_index":1201,"title":{"interfaces/IResponse.html":{}},"body":{"interfaces/IDocument.html":{},"interfaces/IResponse.html":{},"coverage.html":{}}}],["iscorrect",{"_index":1556,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["isduplicate(arr",{"_index":1454,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["isexpandable",{"_index":1383,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["isloading",{"_index":585,"title":{},"body":{"components/DashboardComponent.html":{}}}],["isnewitem",{"_index":1331,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["itaggingmethod",{"_index":1210,"title":{"interfaces/ITaggingMethod.html":{}},"body":{"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"coverage.html":{}}}],["itaggingrequest",{"_index":51,"title":{"interfaces/ITaggingRequest.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/ITaggingRequest.html":{},"coverage.html":{}}}],["item",{"_index":644,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["item's",{"_index":1347,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["itemflatnode",{"_index":1217,"title":{"classes/ItemFlatNode.html":{}},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["itemnode",{"_index":1241,"title":{"classes/ItemNode.html":{}},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["items",{"_index":760,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["jjohn",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["job",{"_index":911,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["job_id",{"_index":908,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["jobid",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/ITaggingRequest.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{}}}],["jobs",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{}}}],["jquery",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1243,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["json.parse(filereader.result",{"_index":1555,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["json.stringify(dict",{"_index":148,"title":{},"body":{"injectables/ApiService.html":{}}}],["json.stringify(request",{"_index":151,"title":{},"body":{"injectables/ApiService.html":{}}}],["jul",{"_index":723,"title":{},"body":{"components/DashboardComponent.html":{}}}],["jun",{"_index":722,"title":{},"body":{"components/DashboardComponent.html":{}}}],["justify",{"_index":758,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["karma",{"_index":1847,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1341,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["key",{"_index":49,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keyformatted",{"_index":1445,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keys",{"_index":888,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["keyword",{"_index":735,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"miscellaneous/variables.html":{}}}],["keywordlist",{"_index":897,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["keywordmodel",{"_index":1213,"title":{},"body":{"interfaces/ITaggingRequest.html":{}}}],["keywordmodel.id",{"_index":1570,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywordmodels",{"_index":1330,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywords",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IResponse.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/Utils.html":{}}}],["keywords'},{'name",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["keywords.component.html",{"_index":1320,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywords.component.scss",{"_index":1321,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywords.keyword_models",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["keywords.new_keyword_model",{"_index":1687,"title":{},"body":{"components/KWMNameDialog.html":{}}}],["keywords.new_keyword_model_dialog",{"_index":1688,"title":{},"body":{"components/KWMNameDialog.html":{}}}],["keywords/dimensions",{"_index":1572,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywords/keywords.component",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["keywords_only",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{}}}],["keywordscomponent",{"_index":315,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["keywords{{this.stats.n_keywords",{"_index":734,"title":{},"body":{"components/DashboardComponent.html":{}}}],["kind",{"_index":395,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["kw",{"_index":1441,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["kwm",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{},"interfaces/IKeywordListEntry.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["kwm.hierarchy",{"_index":145,"title":{},"body":{"injectables/ApiService.html":{}}}],["kwm.hierarchy.slice",{"_index":1522,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["kwm.id",{"_index":143,"title":{},"body":{"injectables/ApiService.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["kwm.keywords",{"_index":146,"title":{},"body":{"injectables/ApiService.html":{}}}],["kwm.keywords.push(cur.item",{"_index":1539,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["kwm[\"keywords",{"_index":1521,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["kwmcopy",{"_index":1495,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["kwmcopy.keywords",{"_index":1497,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["kwmnamedialog",{"_index":317,"title":{"components/KWMNameDialog.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["language",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IResponse.html":{}}}],["language.touppercase",{"_index":244,"title":{},"body":{"components/AppComponent.html":{}}}],["last",{"_index":610,"title":{},"body":{"components/DashboardComponent.html":{}}}],["last_modified",{"_index":1198,"title":{},"body":{"interfaces/IDocument.html":{},"interfaces/IResponse.html":{}}}],["later",{"_index":1396,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["layout",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["left",{"_index":669,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["legend",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"overview.html":{}}}],["length",{"_index":1480,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["level",{"_index":1222,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["liability",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["liable",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["license",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["limitation",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["limited",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["line:no",{"_index":1737,"title":{},"body":{"injectables/Utils.html":{}}}],["linear",{"_index":1166,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["link",{"_index":1502,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["link.click",{"_index":1511,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["link.dataset.downloadurl",{"_index":1508,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["link.download",{"_index":1504,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["link.href",{"_index":1506,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["link.href].join",{"_index":1510,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["list",{"_index":451,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["list[itemnode",{"_index":1310,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["listitem",{"_index":1289,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["listitem.item",{"_index":1291,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["listitem.nodetype",{"_index":1292,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["lists",{"_index":1574,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["literal",{"_index":1078,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/ITaggingRequest.html":{},"interfaces/UploadDialogData.html":{},"miscellaneous/variables.html":{}}}],["loader",{"_index":491,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["make",{"_index":893,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["manage",{"_index":899,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["map",{"_index":1334,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["maps",{"_index":1395,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mar",{"_index":720,"title":{},"body":{"components/DashboardComponent.html":{}}}],["margin",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["mat",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mat_dialog_data",{"_index":561,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["mataccordion",{"_index":825,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["matautocompletemodule",{"_index":475,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglemodule",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":162,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":1059,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["matdialogclose",{"_index":1233,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["matdialogmodule",{"_index":471,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":551,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["material",{"_index":482,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":473,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":434,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["math.random",{"_index":1740,"title":{},"body":{"injectables/Utils.html":{}}}],["math.round(event.loaded",{"_index":1145,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["maticonmodule",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":436,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":443,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":477,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodule",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":447,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":1232,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["matsnackbarmodule",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["matsortmodule",{"_index":430,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":428,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":458,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":479,"title":{},"body":{"modules/AppModule.html":{}}}],["mattreeflatdatasource",{"_index":1236,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":1375,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreeflattener",{"_index":1237,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreeflattener(this.transformer",{"_index":1368,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreemodule",{"_index":469,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1156,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["mechanism",{"_index":903,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["mentioned",{"_index":1537,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["merchantability",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["merge",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["mergeoptions",{"_index":586,"title":{},"body":{"components/DashboardComponent.html":{}}}],["message",{"_index":928,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["metadata",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{}}}],["method",{"_index":905,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["methods",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"injectables/Utils.html":{}}}],["milliseconds",{"_index":1727,"title":{},"body":{"injectables/Utils.html":{}}}],["miscellaneous",{"_index":1813,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":900,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["models",{"_index":898,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["models/idocument.model",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentOverviewComponent.html":{},"injectables/FileService.html":{}}}],["models/ifile.model",{"_index":1025,"title":{},"body":{"injectables/FileService.html":{},"components/FileUploadComponent.html":{}}}],["models/ikeywordmodel.model",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["models/itaggingrequest.model",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{}}}],["models{{this.stats.n_keyword_models",{"_index":736,"title":{},"body":{"components/DashboardComponent.html":{}}}],["modified",{"_index":1338,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["modify",{"_index":373,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["module",{"_index":329,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":331,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["mon",{"_index":699,"title":{},"body":{"components/DashboardComponent.html":{}}}],["mondays",{"_index":689,"title":{},"body":{"components/DashboardComponent.html":{}}}],["monitoring",{"_index":910,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["monthname",{"_index":717,"title":{},"body":{"components/DashboardComponent.html":{}}}],["months",{"_index":614,"title":{},"body":{"components/DashboardComponent.html":{}}}],["monthswewant",{"_index":716,"title":{},"body":{"components/DashboardComponent.html":{}}}],["more",{"_index":1851,"title":{},"body":{"index.html":{}}}],["moved",{"_index":1614,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["moveiteminarray",{"_index":1230,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["moveiteminarray(event.container.data",{"_index":1591,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["moving",{"_index":1648,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["name",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/ITaggingMethod.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"injectables/Utils.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["naturalnumbersonlydirective",{"_index":326,"title":{"directives/NaturalNumbersOnlyDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nav",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1827,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":529,"title":{},"body":{"classes/AppPage.html":{}}}],["necessary",{"_index":1575,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nested",{"_index":1260,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nestednodemap",{"_index":1344,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["new",{"_index":134,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/Utils.html":{},"coverage.html":{},"index.html":{}}}],["newdimension",{"_index":1326,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newidx",{"_index":1485,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newitem",{"_index":1271,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newitem.nodetype",{"_index":1667,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newitemname",{"_index":1348,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newkeyword",{"_index":1327,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newkeywordmodel",{"_index":1474,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newkwm",{"_index":1483,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newkwm.hierarchy",{"_index":1489,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newkwm.id",{"_index":1560,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["next",{"_index":1736,"title":{},"body":{"injectables/Utils.html":{}}}],["ng",{"_index":1824,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["ngx",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"dependencies.html":{}}}],["ngxdaterangepickermd",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ngxdaterangepickermd.forroot",{"_index":524,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxechartsmodule",{"_index":514,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxechartsmodule.forroot",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["node",{"_index":1220,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["node.children",{"_index":1267,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.children.length",{"_index":1307,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.expandable",{"_index":1384,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.item",{"_index":1265,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.level",{"_index":1382,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.nodetype",{"_index":1405,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node[\"shouldbe",{"_index":1525,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes",{"_index":1259,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes.foreach(node",{"_index":1306,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes.indexof(nodetodelete",{"_index":1304,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes.splice(index",{"_index":1305,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodestyles",{"_index":1352,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodetodelete",{"_index":1303,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodetodrop",{"_index":1658,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodetodrop.nodetype",{"_index":1659,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodetype",{"_index":1223,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nodetype.dimension",{"_index":1526,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodetype.keyword",{"_index":1534,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["noninfringement",{"_index":404,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notice",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["nov",{"_index":727,"title":{},"body":{"components/DashboardComponent.html":{}}}],["now",{"_index":626,"title":{},"body":{"components/DashboardComponent.html":{}}}],["null",{"_index":121,"title":{},"body":{"injectables/ApiService.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["num_per_page",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentOverviewComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IResponse.html":{}}}],["num_per_page.tostring",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{}}}],["number",{"_index":566,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"components/DocumentationComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IResponse.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{}}}],["number(replaced",{"_index":1707,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["numbers",{"_index":507,"title":{},"body":{"modules/AppModule.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"coverage.html":{}}}],["numclusters",{"_index":565,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{}}}],["numkeywords",{"_index":567,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{}}}],["obj[key",{"_index":1264,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["object",{"_index":598,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IResponse.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":1496,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["observable",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FileService.html":{}}}],["observe",{"_index":1036,"title":{},"body":{"injectables/FileService.html":{}}}],["obtaining",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["oct",{"_index":726,"title":{},"body":{"components/DashboardComponent.html":{}}}],["ok",{"_index":575,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"components/KWMNameDialog.html":{}}}],["old",{"_index":1670,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["onclose",{"_index":549,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"components/KWMNameDialog.html":{}}}],["ondialogbuttonclick",{"_index":982,"title":{},"body":{"components/FileExistsDialogComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/TaggingDialogComponent.html":{}}}],["ondialogbuttonclick(response",{"_index":771,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["ondimenter",{"_index":1418,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["ondragleave(event",{"_index":976,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["ondragover(event",{"_index":971,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["ondrop(event",{"_index":978,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["oninit",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["oninputchange(event",{"_index":1700,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["onkeyenter",{"_index":1444,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["only.directive",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["only.directive.ts",{"_index":1690,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{},"coverage.html":{}}}],["only.directive.ts:37",{"_index":1692,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["only.directive.ts:41",{"_index":1695,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["onselectfile",{"_index":1052,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onselectfile(files",{"_index":1069,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["opacity",{"_index":1167,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["open",{"_index":1501,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["open_in_new",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["openexistsdialog",{"_index":1053,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["openexistsdialog(dialogdata",{"_index":1072,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["opens",{"_index":1468,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["openuploaddialog",{"_index":1054,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["openuploaddialog(dialogdata",{"_index":1074,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["option.viewvalue",{"_index":733,"title":{},"body":{"components/DashboardComponent.html":{}}}],["optional",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"injectables/Utils.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":587,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"injectables/FileService.html":{},"interfaces/ITaggingRequest.html":{}}}],["order",{"_index":901,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["otherwise",{"_index":415,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["out",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":967,"title":{},"body":{"directives/DragdropDirective.html":{},"components/FileUploadComponent.html":{}}}],["outputs",{"_index":947,"title":{},"body":{"directives/DragdropDirective.html":{},"components/FileUploadComponent.html":{}}}],["outside",{"_index":1615,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["over",{"_index":1606,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["overflow",{"_index":1158,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["overview",{"_index":777,"title":{"overview.html":{}},"body":{"components/DocumentOverviewComponent.html":{},"overview.html":{}}}],["overview'},{'name",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["overview.component",{"_index":510,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["overview.component.html",{"_index":779,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.scss",{"_index":778,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts",{"_index":776,"title":{},"body":{"components/DocumentOverviewComponent.html":{},"coverage.html":{}}}],["overview.component.ts:38",{"_index":803,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:39",{"_index":800,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:40",{"_index":792,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:41",{"_index":796,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:44",{"_index":799,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:46",{"_index":794,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:47",{"_index":798,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:48",{"_index":797,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:49",{"_index":801,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:50",{"_index":802,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:51",{"_index":804,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:52",{"_index":784,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:58",{"_index":785,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:70",{"_index":791,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview.component.ts:75",{"_index":787,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["overview/document",{"_index":509,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DocumentOverviewComponent.html":{},"coverage.html":{}}}],["overwrite",{"_index":1117,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["overwrites",{"_index":856,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["package",{"_index":1789,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["page",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentOverviewComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IResponse.html":{}}}],["page.tostring",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{}}}],["pageevent",{"_index":790,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["panel",{"_index":936,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["param",{"_index":1129,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"injectables/Utils.html":{},"miscellaneous/functions.html":{}}}],["parameters.component",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["parameters.component.ts",{"_index":546,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["parameters.component.ts:39",{"_index":553,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{}}}],["parameters.component.ts:42",{"_index":558,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{}}}],["parameters.component.ts:43",{"_index":559,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{}}}],["parameters.component.ts:44",{"_index":557,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{}}}],["parameters.component.ts:46",{"_index":554,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{}}}],["parameters.dialog.html",{"_index":547,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{}}}],["params",{"_index":118,"title":{},"body":{"injectables/ApiService.html":{}}}],["params['end_date",{"_index":124,"title":{},"body":{"injectables/ApiService.html":{}}}],["params['keywords_only",{"_index":122,"title":{},"body":{"injectables/ApiService.html":{}}}],["params['search_term",{"_index":120,"title":{},"body":{"injectables/ApiService.html":{}}}],["params['start_date",{"_index":123,"title":{},"body":{"injectables/ApiService.html":{}}}],["parent",{"_index":763,"title":{},"body":{"components/DashboardComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parent.children",{"_index":1275,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parent.children.push(newitem",{"_index":1276,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parentnode",{"_index":1278,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parentnode.children.splice(parentnode.children.indexof(node",{"_index":1280,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parents",{"_index":1209,"title":{},"body":{"interfaces/IKeywordListEntry.html":{}}}],["parses",{"_index":1127,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["particular",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["patch",{"_index":832,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["patch(`${environment.serverurl}/upload",{"_index":1038,"title":{},"body":{"injectables/FileService.html":{}}}],["patchfile",{"_index":1003,"title":{},"body":{"injectables/FileService.html":{}}}],["patchfile(file",{"_index":1016,"title":{},"body":{"injectables/FileService.html":{}}}],["patchkeywords",{"_index":1004,"title":{},"body":{"injectables/FileService.html":{}}}],["patchkeywords(idoc",{"_index":1018,"title":{},"body":{"injectables/FileService.html":{}}}],["path",{"_index":542,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["percentage",{"_index":917,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["percentagex",{"_index":1637,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["percentagey",{"_index":1640,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["permission",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["permit",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["person",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["persons",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pie",{"_index":654,"title":{},"body":{"components/DashboardComponent.html":{}}}],["pieoptions",{"_index":588,"title":{},"body":{"components/DashboardComponent.html":{}}}],["png",{"_index":916,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["popper.js",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["position",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{}}}],["positiv",{"_index":1697,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["post",{"_index":831,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["post(`${environment.serverurl}/upload",{"_index":1034,"title":{},"body":{"injectables/FileService.html":{}}}],["postexample",{"_index":889,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["postfile",{"_index":1005,"title":{},"body":{"injectables/FileService.html":{}}}],["postfile(file",{"_index":1021,"title":{},"body":{"injectables/FileService.html":{}}}],["present",{"_index":1428,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["pressed",{"_index":1414,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["prevmondays",{"_index":708,"title":{},"body":{"components/DashboardComponent.html":{}}}],["prevmondays.push(dt.getdate",{"_index":714,"title":{},"body":{"components/DashboardComponent.html":{}}}],["private",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"interfaces/UploadDialogData.html":{}}}],["process",{"_index":1067,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["processes",{"_index":1133,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["prod",{"_index":1839,"title":{},"body":{"index.html":{}}}],["production",{"_index":1841,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":1086,"title":{},"body":{"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IFile.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["progressmonitor",{"_index":1048,"title":{},"body":{"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["project",{"_index":1819,"title":{},"body":{"index.html":{}}}],["promise",{"_index":531,"title":{},"body":{"classes/AppPage.html":{}}}],["promise(resolve",{"_index":1746,"title":{},"body":{"injectables/Utils.html":{}}}],["properties",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["protractor",{"_index":533,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":393,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["providedin",{"_index":109,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FileService.html":{},"injectables/Utils.html":{}}}],["providers",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"overview.html":{}}}],["public",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{}}}],["publish",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["purpose",{"_index":403,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["put",{"_index":833,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["put(`${environment.serverurl}/upload",{"_index":1039,"title":{},"body":{"injectables/FileService.html":{}}}],["putfile",{"_index":1006,"title":{},"body":{"injectables/FileService.html":{}}}],["putfile(file",{"_index":1023,"title":{},"body":{"injectables/FileService.html":{}}}],["query",{"_index":871,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["quey",{"_index":879,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["r",{"_index":1739,"title":{},"body":{"injectables/Utils.html":{}}}],["radius",{"_index":655,"title":{},"body":{"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{}}}],["random",{"_index":909,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["randomly",{"_index":840,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["re",{"_index":1436,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["reached",{"_index":872,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["reactiveformsmodule",{"_index":426,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":849,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["reader",{"_index":628,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reader.onload",{"_index":631,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reader.readasdataurl(blob",{"_index":630,"title":{},"body":{"components/DashboardComponent.html":{}}}],["reading",{"_index":868,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["readme",{"_index":1853,"title":{},"body":{"index.html":{}}}],["reads",{"_index":1547,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["record",{"_index":1394,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["regarding",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{},"injectables/Utils.html":{}}}],["regexp(\"^[a",{"_index":1437,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["reload",{"_index":1830,"title":{},"body":{"index.html":{}}}],["remaining",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/TaggingDialogComponent.html":{}}}],["remove",{"_index":1473,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["removed",{"_index":884,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["removeidx",{"_index":1566,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["removeitem(flatnode",{"_index":1596,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["removekeywordmodel",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{}}}],["removekeywordmodel(keywordmodel",{"_index":1564,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["removekeywordmodel(kwm",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeuncategorizeddimension",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeuncategorizeddimension(dim",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeuncategorizedkeyword",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeuncategorizedkeyword(key",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{}}}],["replace(/[xy]/g",{"_index":1734,"title":{},"body":{"injectables/Utils.html":{}}}],["replaced",{"_index":1703,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["reportprogress",{"_index":1035,"title":{},"body":{"injectables/FileService.html":{}}}],["representing",{"_index":623,"title":{},"body":{"components/DashboardComponent.html":{}}}],["represents",{"_index":1249,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["request",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["request_send",{"_index":1139,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["requesttype",{"_index":1080,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["requesttype.response",{"_index":1116,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["require",{"_index":1786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1622,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["resendfile",{"_index":1055,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["resendfile(requesttype",{"_index":1077,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["reset",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["respective",{"_index":1573,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["response",{"_index":985,"title":{},"body":{"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/TaggingDialogComponent.html":{}}}],["response_received",{"_index":1141,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["responsetype",{"_index":159,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FileService.html":{}}}],["restriction",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["result",{"_index":161,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.fid",{"_index":1103,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["resulting",{"_index":1649,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["results",{"_index":163,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":1312,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["ret.push(cur",{"_index":1317,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["return",{"_index":113,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/Utils.html":{}}}],["returns",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"injectables/Utils.html":{}}}],["rgba(201",{"_index":1160,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["rgba(63",{"_index":1171,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["right",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["rights",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["root",{"_index":110,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/FileService.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/Utils.html":{}}}],["root'},{'name",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["route",{"_index":934,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["routermodule",{"_index":540,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":544,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":539,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":538,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1823,"title":{},"body":{"index.html":{}}}],["running",{"_index":895,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["rxjs",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"interfaces/UploadDialogData.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1094,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["same",{"_index":1342,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["sanitizer",{"_index":594,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sat",{"_index":704,"title":{},"body":{"components/DashboardComponent.html":{}}}],["save",{"_index":1491,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["saved",{"_index":844,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["saves",{"_index":836,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["scaffolding",{"_index":1832,"title":{},"body":{"index.html":{}}}],["search_term",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{}}}],["select",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selected",{"_index":589,"title":{},"body":{"components/DashboardComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selectedkwm",{"_index":1493,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selectedkwm.id",{"_index":1505,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selectedkwmidx",{"_index":1333,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selectedlanguage",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["selectedparent",{"_index":1346,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selection",{"_index":1343,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selectionchange(event",{"_index":1674,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selector",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["sell",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["send",{"_index":1083,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["sendfiletoservice",{"_index":1056,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["sendfiletoservice(file",{"_index":1081,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["sends",{"_index":1128,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["sent",{"_index":848,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["sep",{"_index":725,"title":{},"body":{"components/DashboardComponent.html":{}}}],["series",{"_index":652,"title":{},"body":{"components/DashboardComponent.html":{}}}],["serve",{"_index":1825,"title":{},"body":{"index.html":{}}}],["server",{"_index":862,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["serverstatus",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentOverviewComponent.html":{}}}],["serverurl",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentOverviewComponent.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{},"injectables/FileService.html":{},"injectables/Utils.html":{}}}],["services/api.service",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["services/file.service",{"_index":1090,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["services/utils.service",{"_index":1095,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["set(\"cache",{"_index":155,"title":{},"body":{"injectables/ApiService.html":{}}}],["settimeout(resolve",{"_index":1747,"title":{},"body":{"injectables/Utils.html":{}}}],["shadow",{"_index":667,"title":{},"body":{"components/DashboardComponent.html":{}}}],["shall",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shut",{"_index":931,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["shutting",{"_index":929,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["sibling",{"_index":1660,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["single",{"_index":1551,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["size",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IResponse.html":{}}}],["sleep",{"_index":1723,"title":{},"body":{"injectables/Utils.html":{}}}],["sleep(milliseconds",{"_index":1725,"title":{},"body":{"injectables/Utils.html":{}}}],["snackbar",{"_index":1366,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["software",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["solid",{"_index":743,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sort_field",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentOverviewComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IResponse.html":{}}}],["sort_order",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentOverviewComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IResponse.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{},"index.html":{}}}],["space",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{}}}],["span')).gettext",{"_index":536,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":448,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{}}}],["src/.../app.module.ts",{"_index":1815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../keywords.component.ts",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":537,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:37",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:40",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:49",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":576,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:144",{"_index":600,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:260",{"_index":601,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:271",{"_index":602,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:285",{"_index":603,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:299",{"_index":604,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:41",{"_index":622,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:42",{"_index":620,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:43",{"_index":606,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:44",{"_index":607,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:45",{"_index":621,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:46",{"_index":619,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:47",{"_index":599,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:50",{"_index":618,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:57",{"_index":596,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:61",{"_index":597,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/document",{"_index":775,"title":{},"body":{"components/DocumentOverviewComponent.html":{},"coverage.html":{}}}],["src/app/documentation/documentation.component.ts",{"_index":821,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{}}}],["src/app/documentation/documentation.component.ts:34",{"_index":827,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/documentview/document",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["src/app/file",{"_index":1044,"title":{},"body":{"components/FileUploadComponent.html":{},"coverage.html":{}}}],["src/app/keywords/keywords.component.ts",{"_index":1218,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/keywords/keywords.component.ts:51",{"_index":1677,"title":{},"body":{"classes/ItemNode.html":{}}}],["src/app/keywords/keywords.component.ts:52",{"_index":1678,"title":{},"body":{"classes/ItemNode.html":{}}}],["src/app/keywords/keywords.component.ts:53",{"_index":1679,"title":{},"body":{"classes/ItemNode.html":{}}}],["src/app/keywords/keywords.component.ts:58",{"_index":1225,"title":{},"body":{"classes/ItemFlatNode.html":{}}}],["src/app/keywords/keywords.component.ts:59",{"_index":1226,"title":{},"body":{"classes/ItemFlatNode.html":{}}}],["src/app/keywords/keywords.component.ts:60",{"_index":1224,"title":{},"body":{"classes/ItemFlatNode.html":{}}}],["src/app/keywords/keywords.component.ts:61",{"_index":1227,"title":{},"body":{"classes/ItemFlatNode.html":{}}}],["src/app/models/idocument.model.ts",{"_index":1196,"title":{},"body":{"interfaces/IDocument.html":{},"interfaces/IResponse.html":{},"coverage.html":{}}}],["src/app/models/ifile.model.ts",{"_index":1203,"title":{},"body":{"interfaces/IFile.html":{},"coverage.html":{}}}],["src/app/models/ikeyword.model.ts",{"_index":1206,"title":{},"body":{"interfaces/IKeyword.html":{},"coverage.html":{}}}],["src/app/models/ikeywordlistentry.model.ts",{"_index":1208,"title":{},"body":{"interfaces/IKeywordListEntry.html":{},"coverage.html":{}}}],["src/app/models/ikeywordmodel.model.ts",{"_index":1205,"title":{},"body":{"interfaces/IKeyWordModel.html":{},"coverage.html":{}}}],["src/app/models/itaggingmethod.ts",{"_index":1211,"title":{},"body":{"interfaces/ITaggingMethod.html":{},"coverage.html":{}}}],["src/app/models/itaggingrequest.model.ts",{"_index":1212,"title":{},"body":{"interfaces/ITaggingRequest.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:101",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:110",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:119",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:123",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:137",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:147",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:156",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:160",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:164",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:168",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:42",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:46",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:50",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:54",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:59",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:83",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:92",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/file.service.ts",{"_index":996,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["src/app/services/file.service.ts:100",{"_index":1010,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:104",{"_index":1019,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:41",{"_index":1007,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:44",{"_index":1022,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:56",{"_index":1017,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:68",{"_index":1024,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:80",{"_index":1015,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/file.service.ts:87",{"_index":1012,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/services/utils.service.ts",{"_index":1722,"title":{},"body":{"injectables/Utils.html":{},"coverage.html":{}}}],["src/app/services/utils.service.ts:37",{"_index":1728,"title":{},"body":{"injectables/Utils.html":{}}}],["src/app/services/utils.service.ts:48",{"_index":1726,"title":{},"body":{"injectables/Utils.html":{}}}],["src/app/tagging/tagging.component.ts",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["src/dialogs/automated",{"_index":545,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"coverage.html":{}}}],["src/dialogs/file",{"_index":767,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{},"coverage.html":{}}}],["src/dialogs/keyword",{"_index":1680,"title":{},"body":{"components/KWMNameDialog.html":{},"coverage.html":{}}}],["src/dialogs/tagging.dialog.component.ts",{"_index":1708,"title":{},"body":{"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"coverage.html":{}}}],["src/dialogs/tagging.dialog.component.ts:41",{"_index":1711,"title":{},"body":{"components/TaggingDialogComponent.html":{}}}],["src/dialogs/tagging.dialog.component.ts:44",{"_index":1714,"title":{},"body":{"components/TaggingDialogComponent.html":{}}}],["src/dialogs/tagging.dialog.component.ts:45",{"_index":1715,"title":{},"body":{"components/TaggingDialogComponent.html":{}}}],["src/dialogs/tagging.dialog.component.ts:46",{"_index":1713,"title":{},"body":{"components/TaggingDialogComponent.html":{}}}],["src/dialogs/tagging.dialog.component.ts:48",{"_index":1712,"title":{},"body":{"components/TaggingDialogComponent.html":{}}}],["src/directives/dragdrop.directive.ts",{"_index":945,"title":{},"body":{"directives/DragdropDirective.html":{},"coverage.html":{}}}],["src/directives/dragdrop.directive.ts:31",{"_index":956,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["src/directives/dragdrop.directive.ts:32",{"_index":954,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["src/directives/dragdrop.directive.ts:36",{"_index":961,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["src/directives/dragdrop.directive.ts:42",{"_index":959,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["src/directives/dragdrop.directive.ts:48",{"_index":963,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["src/directives/natural",{"_index":1689,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1783,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1784,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":617,"title":{},"body":{"components/DashboardComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["start_date",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{}}}],["started",{"_index":1817,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1750,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1254,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["statistics",{"_index":921,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["stats",{"_index":590,"title":{},"body":{"components/DashboardComponent.html":{}}}],["status",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{}}}],["stops",{"_index":926,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["stopserver",{"_index":925,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["store",{"_index":157,"title":{},"body":{"injectables/ApiService.html":{}}}],["stored",{"_index":1836,"title":{},"body":{"index.html":{}}}],["string",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{}}}],["structured",{"_index":1247,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["style",{"_index":742,"title":{},"body":{"components/DashboardComponent.html":{}}}],["styles",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["styleurls",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["subject",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["sublicense",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["subscribe",{"_index":1108,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["subscribe((data",{"_index":1262,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["subscribe((event",{"_index":1119,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["subscribe((value",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{}}}],["subscribe(res",{"_index":1423,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["substantial",{"_index":391,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["succedes",{"_index":1457,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["succesfully",{"_index":883,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["success",{"_index":927,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["successfully",{"_index":843,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["such",{"_index":923,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["sun",{"_index":705,"title":{},"body":{"components/DashboardComponent.html":{}}}],["support",{"_index":1854,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":894,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["svg",{"_index":1855,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":684,"title":{},"body":{"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["sync",{"_index":782,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["sync(e",{"_index":786,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["tab",{"_index":624,"title":{},"body":{"components/DashboardComponent.html":{}}}],["table",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["table'},{'name",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["table.component",{"_index":485,"title":{},"body":{"modules/AppModule.html":{}}}],["table.component.ts",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["tagcloud",{"_index":748,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tagged",{"_index":649,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["tagged/untagged",{"_index":639,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tagging",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"coverage.html":{}}}],["tagging'},{'name",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["tagging.dialog.html",{"_index":1709,"title":{},"body":{"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{}}}],["tagging/tagging.component",{"_index":502,"title":{},"body":{"modules/AppModule.html":{}}}],["taggingcomponent",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taggingdialogcomponent",{"_index":321,"title":{"components/TaggingDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"coverage.html":{},"overview.html":{}}}],["taggingdialogdata",{"_index":1710,"title":{"interfaces/TaggingDialogData.html":{}},"body":{"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"coverage.html":{}}}],["taggingmethod",{"_index":1214,"title":{},"body":{"interfaces/ITaggingRequest.html":{}}}],["template",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["templateurl",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["temporary",{"_index":1540,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["test",{"_index":1844,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1843,"title":{},"body":{"index.html":{}}}],["text",{"_index":638,"title":{},"body":{"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["text/json",{"_index":1509,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["text/plain",{"_index":1500,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["theme",{"_index":591,"title":{},"body":{"components/DashboardComponent.html":{}}}],["thin",{"_index":744,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this._el.nativeelement.value",{"_index":1702,"title":{},"body":{"directives/NaturalNumbersOnlyDirective.html":{}}}],["this.api.addkeywordmodel(newkwm).subscribe(res",{"_index":1484,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.addkeywordmodel(this.keywordmodels[this.selectedkwmidx]).subscribe(res",{"_index":1380,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.adduncategorizeddimension(dimformatted",{"_index":1422,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.adduncategorizeddimension(node.item",{"_index":1582,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.adduncategorizedkeyword(keyformatted",{"_index":1449,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.adduncategorizedkeyword(node.item",{"_index":1584,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.getdocuments",{"_index":805,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["this.api.getdocuments(e.currentpage",{"_index":820,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["this.api.getkeywordmodels",{"_index":1261,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.getstats",{"_index":635,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.api.getuncategorizeddimensions",{"_index":1409,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.getuncategorizedkeywords",{"_index":1411,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.getwordcloud().subscribe(blob",{"_index":627,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.api.removekeywordmodel(keywordmodel).subscribe(res",{"_index":1565,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.removeuncategorizeddimension(dimension",{"_index":1460,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.removeuncategorizedkeyword(keyword",{"_index":1465,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.availablelanguages.indexof(browserlang",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["this.baroptions",{"_index":663,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.buildfiletree(value",{"_index":1268,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.cancelupload(file",{"_index":1190,"title":{},"body":{"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["this.checkcorrectness(newkwm",{"_index":1557,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.cleanupcancelledfiles(dialogdata.files",{"_index":1110,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.copypasteitem(child",{"_index":1297,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.data.fid",{"_index":774,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{}}}],["this.data.files",{"_index":1189,"title":{},"body":{"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["this.data.id",{"_index":773,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{}}}],["this.data.splice(this.data.indexof(node",{"_index":1281,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.data[0",{"_index":1272,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.copypasteitem(this.flatnodemap.get(this.dragnode",{"_index":1666,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.copypasteitemabove(this.flatnodemap.get(this.dragnode",{"_index":1661,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.copypasteitembelow(this.flatnodemap.get(this.dragnode",{"_index":1664,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.datachange.next",{"_index":1571,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.datachange.next(tree_data[this.selectedkwmidx",{"_index":1676,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.deleteitem(node",{"_index":1598,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.deleteitem(this.flatnodemap.get(this.dragnode",{"_index":1669,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.getdescendants(this.flatnodemap.get(node",{"_index":1577,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.insertitem(parentnode",{"_index":1602,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.insertroot(this.newitem.item",{"_index":1610,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datachange.next(this.data",{"_index":1273,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datachange.value",{"_index":1251,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datasource",{"_index":1374,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datasource.data",{"_index":1377,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.deletenode(node.children",{"_index":1308,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.deletenode(this.data",{"_index":1287,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dialog.open(fileexistsdialogcomponent",{"_index":1098,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.dialog.open(fileuploaddialogcomponent",{"_index":1105,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.dialog.open(kwmnamedialog",{"_index":1475,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dialogref.close",{"_index":568,"title":{},"body":{"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"components/KWMNameDialog.html":{}}}],["this.dialogref.close(response",{"_index":1717,"title":{},"body":{"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{}}}],["this.dialogref.close({response",{"_index":772,"title":{},"body":{"interfaces/DialogData-1.html":{},"components/FileExistsDialogComponent.html":{}}}],["this.documents",{"_index":806,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["this.dragnode",{"_index":1617,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnode.item",{"_index":1618,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnode.nodetype",{"_index":1619,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandoverarea",{"_index":1644,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandovernode",{"_index":1632,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandovertime",{"_index":1635,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandoverwaittimems",{"_index":1636,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.error(\"the",{"_index":1518,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.error(`the",{"_index":1440,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.filedropped.emit(files",{"_index":981,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["this.fileover",{"_index":974,"title":{},"body":{"directives/DragdropDirective.html":{}}}],["this.files",{"_index":1130,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.files.find((f",{"_index":1101,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.fileservice.deletefile(file).subscribe",{"_index":1114,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.fileservice.patchfile(file",{"_index":1118,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.fileservice.putfile(file",{"_index":1122,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.flatnodemap.get(flatnode",{"_index":1597,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.flatnodemap.get(node",{"_index":1601,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.flatnodemap.get(this.dragnode",{"_index":1654,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.flatnodemap.set(flatnode",{"_index":1406,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getchildren",{"_index":1371,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getlevel",{"_index":1369,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getparent(child",{"_index":1284,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getparentfromnodes(node",{"_index":1279,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getpreviousdays",{"_index":674,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getpreviousmondays",{"_index":690,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getpreviousmonths",{"_index":693,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.getpreviousyears",{"_index":696,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.handlefilesend(event",{"_index":1120,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.http.delete(`${environment.serverurl}/dims/${dim",{"_index":139,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.delete(`${environment.serverurl}/job/${jobid",{"_index":153,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.delete(`${environment.serverurl}/keys/${key",{"_index":140,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.delete(`${environment.serverurl}/models/${kwm.id",{"_index":149,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get",{"_index":131,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${environment.serverurl}/dims",{"_index":114,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${environment.serverurl}/job/${jobid",{"_index":152,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${environment.serverurl}/keys",{"_index":115,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${environment.serverurl}/keywordlist",{"_index":116,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${environment.serverurl}/models",{"_index":141,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${environment.serverurl}/statistics",{"_index":154,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${environment.serverurl}/wordcloud",{"_index":158,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${environment.serverurl}/apply",{"_index":150,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${environment.serverurl}/dims",{"_index":137,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${environment.serverurl}/keys",{"_index":138,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${environment.serverurl}/models",{"_index":147,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient",{"_index":1033,"title":{},"body":{"injectables/FileService.html":{}}}],["this.httpclient.delete('/dims/123456",{"_index":887,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.delete('/keys/123456",{"_index":891,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.delete(\\'/dims/123456",{"_index":942,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.delete(\\'/keys/123456",{"_index":944,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.delete(`${environment.serverurl}/documents",{"_index":1041,"title":{},"body":{"injectables/FileService.html":{}}}],["this.httpclient.delete(`${environment.serverurl}/documents/${file.file.name",{"_index":1042,"title":{},"body":{"injectables/FileService.html":{}}}],["this.httpclient.get(this.backendstatus",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["this.httpclient.patch(`${environment.serverurl}/changekeywords",{"_index":1043,"title":{},"body":{"injectables/FileService.html":{}}}],["this.httpclient.post('/keys",{"_index":890,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.post(\\'/keys",{"_index":943,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.post(`${environment.serverurl}/download",{"_index":1040,"title":{},"body":{"injectables/FileService.html":{}}}],["this.initialize",{"_index":1252,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.insertitem(to",{"_index":1290,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.insertitemabove(to",{"_index":1299,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.insertitembelow(to",{"_index":1301,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.isduplicate(this.uncatdimensions",{"_index":1421,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.isduplicate(this.uncatkeywords",{"_index":1448,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.isexpandable",{"_index":1370,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.isloading",{"_index":682,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.isnewitem",{"_index":1620,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywordmodels",{"_index":1408,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywordmodels.filter(function(kwm",{"_index":1479,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywordmodels.length",{"_index":1486,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywordmodels.splice(removeidx",{"_index":1567,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywordmodels[newidx",{"_index":1487,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywordmodels[this.selectedkwmidx",{"_index":1494,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywordmodels[this.selectedkwmidx].hierarchy",{"_index":1379,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywordmodels[this.selectedkwmidx].hierarchy.length",{"_index":1608,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywordmodels[this.selectedkwmidx].keywords.includes(this.newitem.item",{"_index":1655,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywordmodels[this.selectedkwmidx].keywords.indexof(node.item",{"_index":1585,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywordmodels[this.selectedkwmidx].keywords.push(newitem.item",{"_index":1668,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywordmodels[this.selectedkwmidx].keywords.splice(index",{"_index":1586,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.mergeoptions",{"_index":687,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.nestednodemap.get(node",{"_index":1398,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.nestednodemap.set(node",{"_index":1407,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newdimension",{"_index":1429,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newdimension.trim",{"_index":1420,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newitem",{"_index":1621,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newitem.nodetype",{"_index":1609,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newkeyword",{"_index":1452,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newkeyword.trim",{"_index":1446,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.num_per_page",{"_index":810,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["this.openexistsdialog(dialogdata",{"_index":1153,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.page",{"_index":808,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["this.pieoptions",{"_index":637,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.progressmonitor.finished",{"_index":1111,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.progressmonitor.progress",{"_index":1147,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.removeitem(node",{"_index":1588,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.resendfile(result",{"_index":1104,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusturl(reader.result",{"_index":634,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.selectedkwmidx",{"_index":1378,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.selectedlanguage",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["this.serverstatus",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["this.serverurl}/documents",{"_index":795,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["this.serverurl}/health",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentOverviewComponent.html":{}}}],["this.snackbar.open(`${dimension",{"_index":1462,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${dimformatted",{"_index":1425,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${keyformatted",{"_index":1451,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${keyword",{"_index":1467,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${name",{"_index":1482,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${nodetodrop.item",{"_index":1662,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${this.newitem.item",{"_index":1656,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`a",{"_index":1561,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`added",{"_index":1490,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`invalid",{"_index":1478,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`removed",{"_index":1569,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`root",{"_index":1611,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(msg",{"_index":1431,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.sort_field",{"_index":812,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["this.sort_order",{"_index":814,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["this.stats",{"_index":636,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.stats.n_tagged_docs",{"_index":658,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.stats.n_untagged_docs",{"_index":659,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.stats.uploaded_all_years",{"_index":698,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.stats.uploaded_last_12_months",{"_index":695,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.stats.uploaded_last_4_weeks",{"_index":692,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.stats.uploaded_last_7_days",{"_index":681,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.total_pages",{"_index":816,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["this.translate.use(event.value",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["this.treecontrol",{"_index":1372,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.collapse(node",{"_index":1630,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.expand(node",{"_index":1603,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.expanddescendants(this.nestednodemap.get(newitem",{"_index":1671,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.isexpanded(node",{"_index":1633,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treeflattener",{"_index":1367,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions",{"_index":1410,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions.indexof(dimension",{"_index":1459,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions.push(dimformatted",{"_index":1424,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions.push(node.item",{"_index":1581,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions.splice(index",{"_index":1461,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords",{"_index":1412,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords.indexof(keyword",{"_index":1464,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords.push(keyformatted",{"_index":1450,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords.push(node.item",{"_index":1583,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords.splice(index",{"_index":1466,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uploadfinished.emit",{"_index":1109,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["this.wordcloud_img",{"_index":633,"title":{},"body":{"components/DashboardComponent.html":{}}}],["throw",{"_index":1255,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["throwerror",{"_index":1092,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["throwerror(error",{"_index":1132,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["thu",{"_index":702,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tile",{"_index":740,"title":{},"body":{"components/DashboardComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["time",{"_index":1719,"title":{},"body":{"components/TaggingDialogComponent.html":{}}}],["timeremaining",{"_index":1716,"title":{},"body":{"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{}}}],["title",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IResponse.html":{}}}],["tocheck",{"_index":1313,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["tocheck.concat(cur.children",{"_index":1319,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["tocheck.foreach(node",{"_index":1524,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["tocheck.length",{"_index":1314,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["tocheck.pop",{"_index":1316,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["tocheck.push(child",{"_index":1546,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["toggle",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar",{"_index":256,"title":{},"body":{"components/AppComponent.html":{}}}],["tooltip",{"_index":642,"title":{},"body":{"components/DashboardComponent.html":{}}}],["top",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{}}}],["tort",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["total_pages",{"_index":781,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["transferarrayitem",{"_index":1231,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["transferarrayitem(event.previouscontainer.data",{"_index":1594,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["transformer",{"_index":1392,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["transition",{"_index":1164,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["translate",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["translate.addlangs(this.availablelanguages",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.getbrowserlang",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang(this.selectedlanguage",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use(browserlang.match(/en|de",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"dependencies.html":{}}}],["translate/http",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":489,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(httpclient",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":492,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":493,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["tree",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["tree_data",{"_index":1244,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tree_data.splice(removeidx",{"_index":1568,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["tree_data[newidx",{"_index":1488,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["treecontrol",{"_index":1349,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["treeflattener",{"_index":1350,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["trigger",{"_index":643,"title":{},"body":{"components/DashboardComponent.html":{}}}],["true",{"_index":605,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"injectables/FileService.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":1735,"title":{},"body":{"injectables/Utils.html":{}}}],["tue",{"_index":700,"title":{},"body":{"components/DashboardComponent.html":{}}}],["twice",{"_index":1538,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["type",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"directives/DragdropDirective.html":{},"components/FileExistsDialogComponent.html":{},"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"interfaces/IKeyWordModel.html":{},"interfaces/IKeyword.html":{},"interfaces/IKeywordListEntry.html":{},"interfaces/IResponse.html":{},"interfaces/ITaggingMethod.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"directives/NaturalNumbersOnlyDirective.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1266,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["uncatdimensions",{"_index":1328,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["uncategorized",{"_index":877,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["uncatgegorized",{"_index":1578,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["uncatkeywords",{"_index":1329,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["undefined",{"_index":119,"title":{},"body":{"injectables/ApiService.html":{},"components/FileUploadComponent.html":{},"interfaces/ITaggingRequest.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["under",{"_index":838,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["underline",{"_index":1355,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["unit",{"_index":1842,"title":{},"body":{"index.html":{}}}],["unnecessary",{"_index":1498,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["unsuccessful",{"_index":869,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["untagged",{"_index":650,"title":{},"body":{"components/DashboardComponent.html":{}}}],["up",{"_index":896,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["update",{"_index":1143,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["updated",{"_index":867,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["updateitem(node",{"_index":1285,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["updatepageinfo",{"_index":783,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["updatepageinfo(e",{"_index":789,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["updates",{"_index":1135,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["updating",{"_index":998,"title":{},"body":{"injectables/FileService.html":{}}}],["upload",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["upload'},{'name",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["upload.component",{"_index":496,"title":{},"body":{"modules/AppModule.html":{}}}],["upload.component.html",{"_index":1047,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.scss",{"_index":1046,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts",{"_index":1045,"title":{},"body":{"components/FileUploadComponent.html":{},"coverage.html":{}}}],["upload.component.ts:101",{"_index":1079,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:125",{"_index":1071,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:144",{"_index":1082,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:168",{"_index":1066,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:50",{"_index":1085,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:51",{"_index":1061,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:52",{"_index":1088,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:55",{"_index":1060,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:60",{"_index":1084,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:61",{"_index":1089,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:64",{"_index":1073,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:76",{"_index":1076,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:90",{"_index":1063,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.dialog.component",{"_index":501,"title":{},"body":{"modules/AppModule.html":{},"components/FileUploadComponent.html":{}}}],["upload.dialog.component.ts",{"_index":1174,"title":{},"body":{"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{},"coverage.html":{}}}],["upload.dialog.component.ts:44",{"_index":1178,"title":{},"body":{"components/FileUploadDialogComponent.html":{}}}],["upload.dialog.component.ts:47",{"_index":1184,"title":{},"body":{"components/FileUploadDialogComponent.html":{}}}],["upload.dialog.component.ts:48",{"_index":1185,"title":{},"body":{"components/FileUploadDialogComponent.html":{}}}],["upload.dialog.component.ts:50",{"_index":1183,"title":{},"body":{"components/FileUploadDialogComponent.html":{}}}],["upload.dialog.component.ts:52",{"_index":1182,"title":{},"body":{"components/FileUploadDialogComponent.html":{}}}],["upload.dialog.component.ts:56",{"_index":1181,"title":{},"body":{"components/FileUploadDialogComponent.html":{}}}],["upload.dialog.component.ts:62",{"_index":1179,"title":{},"body":{"components/FileUploadDialogComponent.html":{}}}],["upload.dialog.html",{"_index":1175,"title":{},"body":{"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{}}}],["upload/day",{"_index":664,"title":{},"body":{"components/DashboardComponent.html":{}}}],["upload/file",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"components/FileUploadComponent.html":{},"coverage.html":{}}}],["upload/month",{"_index":694,"title":{},"body":{"components/DashboardComponent.html":{}}}],["upload/week",{"_index":691,"title":{},"body":{"components/DashboardComponent.html":{}}}],["upload/year",{"_index":697,"title":{},"body":{"components/DashboardComponent.html":{}}}],["uploaddialogdata",{"_index":1075,"title":{"interfaces/UploadDialogData.html":{}},"body":{"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{},"coverage.html":{}}}],["uploadfinished",{"_index":1057,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["uploading",{"_index":997,"title":{},"body":{"injectables/FileService.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{}}}],["usable",{"_index":1324,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["use",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"index.html":{}}}],["used",{"_index":907,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["usefactory",{"_index":520,"title":{},"body":{"modules/AppModule.html":{}}}],["uses",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["using",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["utils",{"_index":1049,"title":{"injectables/Utils.html":{}},"body":{"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"interfaces/UploadDialogData.html":{},"injectables/Utils.html":{},"coverage.html":{}}}],["uuid4",{"_index":1724,"title":{},"body":{"injectables/Utils.html":{}}}],["v",{"_index":1742,"title":{},"body":{"injectables/Utils.html":{}}}],["v.tostring(16",{"_index":1745,"title":{},"body":{"injectables/Utils.html":{}}}],["valid",{"_index":1470,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["value",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IKeyword.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["value.docs",{"_index":807,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["value.num_per_page",{"_index":811,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["value.page",{"_index":809,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["value.sort_field",{"_index":813,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["value.sort_order",{"_index":815,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["value.status",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["value.total_pages",{"_index":817,"title":{},"body":{"components/DocumentOverviewComponent.html":{}}}],["var",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{}}}],["variable",{"_index":1323,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["variables",{"_index":1860,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1821,"title":{},"body":{"index.html":{}}}],["via",{"_index":1846,"title":{},"body":{"index.html":{}}}],["view",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"components/DocumentOverviewComponent.html":{},"components/DocumentationComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":828,"title":{},"body":{"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["viewchild('emptyitem",{"_index":1364,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["viewchild(mataccordion",{"_index":826,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["viewvalue",{"_index":609,"title":{},"body":{"components/DashboardComponent.html":{}}}],["void",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/AutomatedTaggingParametersDialog.html":{},"components/DashboardComponent.html":{},"interfaces/DialogData.html":{},"interfaces/DialogData-1.html":{},"components/DocumentOverviewComponent.html":{},"components/FileExistsDialogComponent.html":{},"components/FileUploadComponent.html":{},"components/FileUploadDialogComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/KWMNameDialog.html":{},"components/TaggingDialogComponent.html":{},"interfaces/TaggingDialogData.html":{},"interfaces/UploadDialogData.html":{}}}],["warranties",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["warranty",{"_index":394,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["wed",{"_index":701,"title":{},"body":{"components/DashboardComponent.html":{}}}],["weeks",{"_index":612,"title":{},"body":{"components/DashboardComponent.html":{}}}],["well",{"_index":1417,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["whether",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["while(tocheck.length",{"_index":1527,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["white",{"_index":762,"title":{},"body":{"components/DashboardComponent.html":{}}}],["width",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["width:100",{"_index":755,"title":{},"body":{"components/DashboardComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1507,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["within",{"_index":1657,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["without",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["word",{"_index":914,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["wordcloud",{"_index":913,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["wordcloud_img",{"_index":592,"title":{},"body":{"components/DashboardComponent.html":{}}}],["work",{"_index":1627,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["world",{"_index":933,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["wrapper",{"_index":764,"title":{},"body":{"components/DashboardComponent.html":{}}}],["wrong",{"_index":1533,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["x",{"_index":640,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/Utils.html":{}}}],["xaxis",{"_index":672,"title":{},"body":{"components/DashboardComponent.html":{}}}],["xxxx",{"_index":1730,"title":{},"body":{"injectables/Utils.html":{}}}],["xxxxxxxx",{"_index":1729,"title":{},"body":{"injectables/Utils.html":{}}}],["xxxxxxxxxxxx",{"_index":1733,"title":{},"body":{"injectables/Utils.html":{}}}],["y",{"_index":648,"title":{},"body":{"components/DashboardComponent.html":{}}}],["yaxis",{"_index":677,"title":{},"body":{"components/DashboardComponent.html":{}}}],["years",{"_index":616,"title":{},"body":{"components/DashboardComponent.html":{}}}],["yes",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{}}}],["yxxx",{"_index":1732,"title":{},"body":{"injectables/Utils.html":{}}}],["z",{"_index":1169,"title":{},"body":{"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["za",{"_index":1438,"title":{},"body":{"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["zone.js",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addKeywordModel\n                            \n                            \n                                    Public\n                                addUncategorizedDimension\n                            \n                            \n                                    Public\n                                addUncategorizedKeyword\n                            \n                            \n                                    Public\n                                applyTaggingMethod\n                            \n                            \n                                    Public\n                                cancelJob\n                            \n                            \n                                    Public\n                                getDocuments\n                            \n                            \n                                    Public\n                                getKeywordListEntries\n                            \n                            \n                                    Public\n                                getKeywordModels\n                            \n                            \n                                    Public\n                                getStats\n                            \n                            \n                                    Public\n                                getTaggingJobStatus\n                            \n                            \n                                    Public\n                                getUncategorizedDimensions\n                            \n                            \n                                    Public\n                                getUncategorizedKeywords\n                            \n                            \n                                    Public\n                                getWordcloud\n                            \n                            \n                                    Public\n                                removeKeywordModel\n                            \n                            \n                                    Public\n                                removeUncategorizedDimension\n                            \n                            \n                                    Public\n                                removeUncategorizedKeyword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addKeywordModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addKeywordModel(kwm: IKeyWordModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    kwm\n                                    \n                                                IKeyWordModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addUncategorizedDimension\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUncategorizedDimension(dim)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dim\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addUncategorizedKeyword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUncategorizedKeyword(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyTaggingMethod\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyTaggingMethod(request: ITaggingRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                ITaggingRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancelJob\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelJob(jobId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jobId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDocuments\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDocuments(page: any, num_per_page: any, sort_field: string, sort_order: string, search_term?: string, keywords_only?: string, start_date?: string, end_date?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    num_per_page\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10\n                                    \n\n                                \n                                \n                                    sort_field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'id'\n                                    \n\n                                \n                                \n                                    sort_order\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'asc'\n                                    \n\n                                \n                                \n                                    search_term\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    keywords_only\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    start_date\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    end_date\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getKeywordListEntries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getKeywordListEntries()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getKeywordModels\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getKeywordModels()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStats\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStats()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTaggingJobStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaggingJobStatus(jobId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jobId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUncategorizedDimensions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUncategorizedDimensions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUncategorizedKeywords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUncategorizedKeywords()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWordcloud\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWordcloud()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeKeywordModel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeKeywordModel(kwm: IKeyWordModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    kwm\n                                    \n                                                IKeyWordModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeUncategorizedDimension\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUncategorizedDimension(dim)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dim\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeUncategorizedKeyword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUncategorizedKeyword(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { IKeyWordModel } from './../models/IKeyWordModel.model';\nimport {ITaggingRequest} from '../models/ITaggingRequest.model';\n/**\n *\n * @class ApiService\n *\n * Service handling communication regarding the keywords, the tagging jobs and\n * the dashboard data with the backend.\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  public getUncategorizedDimensions() {\n    return this.http.get(`${environment.serverUrl}/dims`);\n  }\n\n  public getUncategorizedKeywords() {\n    return this.http.get(`${environment.serverUrl}/keys`);\n  }\n\n  public getKeywordListEntries() {\n    return this.http.get(`${environment.serverUrl}/keywordlist`);\n  }\n\n\n  public getDocuments(page: any= 0, num_per_page: any= 10, sort_field= 'id', sort_order= 'asc', search_term?: string, keywords_only?: string, start_date?: string, end_date?:string) {\n    let params = {\n      page,\n      num_per_page,\n      sort_field,\n      sort_order\n    };\n\n    (search_term !== undefined) ? params['search_term'] = search_term : null;\n    (keywords_only!== undefined) ? params['keywords_only'] = keywords_only : null;\n    (start_date !== undefined) ? params['start_date'] = start_date : null;\n    (end_date !== undefined) ? params['end_date'] = end_date : null;\n    (keywords_only !== undefined) ? params['keywords_only'] = keywords_only : null;\n    const documentsUrl = `${environment.serverUrl}/documents`;\n    page = page.toString();\n    num_per_page = num_per_page.toString();\n    console.log(params)\n    return this.http.get(\n      documentsUrl,\n      {\n        params\n      });\n  }\n\n  public addUncategorizedDimension(dim): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(`${environment.serverUrl}/dims`, { dim }, httpOptions);\n  }\n\n  public addUncategorizedKeyword(key): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(`${environment.serverUrl}/keys`, { key }, httpOptions);\n  }\n\n  public removeUncategorizedDimension(dim): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.delete(`${environment.serverUrl}/dims/${dim}`, httpOptions);\n  }\n\n  public removeUncategorizedKeyword(key): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.delete(`${environment.serverUrl}/keys/${key}`, httpOptions);\n  }\n\n  public getKeywordModels() {\n    return this.http.get(`${environment.serverUrl}/models`);\n  }\n\n  public addKeywordModel(kwm: IKeyWordModel): Observable {\n    const dict = {\n      id : kwm.id,\n      hierarchy : kwm.hierarchy,\n      keywords : kwm.keywords,\n    };\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(`${environment.serverUrl}/models`, JSON.stringify(dict), httpOptions);\n  }\n\n  public removeKeywordModel(kwm: IKeyWordModel): Observable {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.delete(`${environment.serverUrl}/models/${kwm.id}`, httpOptions);\n  }\n\n  public applyTaggingMethod(request: ITaggingRequest) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(`${environment.serverUrl}/apply`, JSON.stringify(request), httpOptions);\n  }\n\n  public getTaggingJobStatus(jobId: string) {\n    return this.http.get(`${environment.serverUrl}/job/${jobId}`);\n  }\n\n  public cancelJob(jobId: string) {\n    return this.http.delete(`${environment.serverUrl}/job/${jobId}`);\n  }\n\n  public getStats() {\n    return this.http.get(`${environment.serverUrl}/statistics`);\n  }\n\n  public getWordcloud() {\n    const headers = new HttpHeaders()\n      .set(\"Cache-Control\", \"no-store\");\n\n    return this.http.get(`${environment.serverUrl}/wordcloud`, {headers, responseType: 'blob' });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                availableLanguages\n                            \n                            \n                                    Public\n                                backendStatus\n                            \n                            \n                                    Public\n                                iconPath\n                            \n                            \n                                    Public\n                                selectedLanguage\n                            \n                            \n                                    Public\n                                serverStatus\n                            \n                            \n                                    Public\n                                serverUrl\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeLanguage\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            changeLanguage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    changeLanguage(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            availableLanguages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['en', 'de']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backendStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.serverUrl}/health`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/img/InfiniTag1.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'en'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DOWN'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.serverUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'infinitag'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../environments/environment';\nimport {TranslateService} from '@ngx-translate/core';\nimport {ApiService} from './services/api.service';\nimport {IDocument} from './models/IDocument.model';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  public title = 'infinitag';\n  public serverUrl = environment.serverUrl;\n  public backendStatus = `${this.serverUrl}/health`;\n  public serverStatus = 'DOWN';\n\n  public iconPath = 'assets/img/InfiniTag1.png';\n  public availableLanguages = ['en', 'de'];\n  public selectedLanguage = 'en';\n\n\n  constructor(\n    private httpClient: HttpClient,\n    public translate: TranslateService,\n  ) {\n    translate.addLangs(this.availableLanguages);\n    translate.setDefaultLang(this.selectedLanguage);\n\n    const browserLang = translate.getBrowserLang();\n    translate.use(browserLang.match(/en|de/) ? browserLang : 'en');\n    if ( this.availableLanguages.indexOf(browserLang) !== -1)  {\n      this.selectedLanguage = browserLang;\n    }\n  }\n  public ngOnInit(): void {\n    this.httpClient.get(this.backendStatus)\n      .subscribe((value: { status: string }) => {\n        this.serverStatus = value.status;\n      });\n  }\n\n  public changeLanguage(event: any) {\n    this.translate.use(event.value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      {{'HOME.TITLE' | translate}}\n      {{'HOME.DOCUMENT_OVERVIEW' | translate}}\n      {{'KEYWORDS.KEYWORD_MODELS' | translate}}\n      {{'HOME.DOCUMENTATION' | translate}}\n      \n        API {{'HOME.DOCUMENTATION' | translate}}\n        Front End {{'HOME.DOCUMENTATION' | translate}} open_in_new\n        Back End {{'HOME.DOCUMENTATION' | translate}} open_in_new\n      \n    \n    \n    \n      \n        {{'HOME.LANGUAGE' | translate}}\n        \n          {{language.toUpperCase()}}\n        \n      \n    \n\n\n    \n    {{'HOME.SERVER_STATUS' | translate}}: {{serverStatus | translate}}\n      JJohn Doe \n      \n        \n          \n            English\n            Deutch\n          \n        \n      \n\n  \n\n\n\n\n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .fill-remaining-space {\n  /* This fills the remaining space, by using flexbox.\n     Every toolbar row uses a flexbox row layout. */\n  flex: 1 1 auto;\n}\n\n.nav-buttons {\n  display: flex;\n  flex-direction: column;\n  padding-top: 10%;\n}\n.footer {\n    width: 200px;\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n}\n\n.language-select {\n  font-size: 12px;\n  width: 100px;\n  margin-right: 16px;\n\n  .mat-form-field {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{\\'HOME.TITLE\\' | translate}}      {{\\'HOME.DOCUMENT_OVERVIEW\\' | translate}}      {{\\'KEYWORDS.KEYWORD_MODELS\\' | translate}}      {{\\'HOME.DOCUMENTATION\\' | translate}}              API {{\\'HOME.DOCUMENTATION\\' | translate}}        Front End {{\\'HOME.DOCUMENTATION\\' | translate}} open_in_new        Back End {{\\'HOME.DOCUMENTATION\\' | translate}} open_in_new                                {{\\'HOME.LANGUAGE\\' | translate}}                  {{language.toUpperCase()}}                          {{\\'HOME.SERVER_STATUS\\' | translate}}: {{serverStatus | translate}}      JJohn Doe                                     English            Deutch                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutomatedTaggingParametersDialog', 'selector': 'app-automated-tagging-parameters-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentOverviewComponent', 'selector': 'app-document-overview'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileExistsDialogComponent', 'selector': 'app-file-exists-dialog'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FileUploadDialogComponent', 'selector': 'app-file-upload-dialog'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'KWMNameDialog', 'selector': 'input-dialog'},{'name': 'TaggingComponent', 'selector': 'app-tagging'},{'name': 'TaggingDialogComponent', 'selector': 'app-tagging-dialog'}];\n    var DIRECTIVES = [{'name': 'DragdropDirective', 'selector': '[appDragdrop]'},{'name': 'NaturalNumbersOnlyDirective', 'selector': '[appNaturalNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAutomatedTaggingParametersDialog\n\nAutomatedTaggingParametersDialog\n\nAppModule -->\n\nAutomatedTaggingParametersDialog->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDocumentOverviewComponent\n\nDocumentOverviewComponent\n\nAppModule -->\n\nDocumentOverviewComponent->AppModule\n\n\n\n\n\nDocumentViewTableComponent\n\nDocumentViewTableComponent\n\nAppModule -->\n\nDocumentViewTableComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nDragdropDirective\n\nDragdropDirective\n\nAppModule -->\n\nDragdropDirective->AppModule\n\n\n\n\n\nFileExistsDialogComponent\n\nFileExistsDialogComponent\n\nAppModule -->\n\nFileExistsDialogComponent->AppModule\n\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\nAppModule -->\n\nFileUploadComponent->AppModule\n\n\n\n\n\nFileUploadDialogComponent\n\nFileUploadDialogComponent\n\nAppModule -->\n\nFileUploadDialogComponent->AppModule\n\n\n\n\n\nKWMNameDialog\n\nKWMNameDialog\n\nAppModule -->\n\nKWMNameDialog->AppModule\n\n\n\n\n\nKeywordsComponent\n\nKeywordsComponent\n\nAppModule -->\n\nKeywordsComponent->AppModule\n\n\n\n\n\nNaturalNumbersOnlyDirective\n\nNaturalNumbersOnlyDirective\n\nAppModule -->\n\nNaturalNumbersOnlyDirective->AppModule\n\n\n\n\n\nTaggingComponent\n\nTaggingComponent\n\nAppModule -->\n\nTaggingComponent->AppModule\n\n\n\n\n\nTaggingDialogComponent\n\nTaggingDialogComponent\n\nAppModule -->\n\nTaggingDialogComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgxDaterangepickerMd\n\nNgxDaterangepickerMd\n\nAppModule -->\n\nNgxDaterangepickerMd->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AutomatedTaggingParametersDialog\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            DocumentOverviewComponent\n                        \n                        \n                            DocumentViewTableComponent\n                        \n                        \n                            DocumentationComponent\n                        \n                        \n                            DragdropDirective\n                        \n                        \n                            FileExistsDialogComponent\n                        \n                        \n                            FileUploadComponent\n                        \n                        \n                            FileUploadDialogComponent\n                        \n                        \n                            KWMNameDialog\n                        \n                        \n                            KeywordsComponent\n                        \n                        \n                            NaturalNumbersOnlyDirective\n                        \n                        \n                            TaggingComponent\n                        \n                        \n                            TaggingDialogComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            NgxDaterangepickerMd\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * @license\n * InfiniTag\n * Copyright (c) 2020 AMOS-5.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\n\nimport { AppComponent } from './app.component';\nimport { DocumentViewTableComponent } from './documentview/document-view-table.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DocumentationComponent } from './documentation/documentation.component';\nimport { KeywordsComponent } from './keywords/keywords.component';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { DragdropDirective } from '../directives/dragdrop.directive';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\nimport { FileExistsDialogComponent } from '../dialogs/file-exists.component';\nimport { MatTabsModule} from '@angular/material/tabs';\nimport { FileUploadDialogComponent } from '../dialogs/file-upload.dialog.component';\nimport { TaggingComponent } from './tagging/tagging.component';\nimport { TaggingDialogComponent } from '../dialogs/tagging.dialog.component';\nimport { AutomatedTaggingParametersDialog } from '../dialogs/automated-tagging-parameters.component';\nimport { NaturalNumbersOnlyDirective } from '../directives/natural-numbers-only.directive';\nimport { DocumentOverviewComponent } from './document-overview/document-overview.component';\nimport { KWMNameDialog } from '../dialogs/keyword-input.dialog.component';\n\nimport * as echarts from 'echarts';\nimport { NgxEchartsModule } from 'ngx-echarts';\n\n\nexport function HttpLoaderFactory(httpClient: HttpClient) {\n  return new TranslateHttpLoader(httpClient);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DocumentViewTableComponent,\n    FileUploadComponent,\n    DashboardComponent,\n    DocumentationComponent,\n    KeywordsComponent,\n    KWMNameDialog,\n    DragdropDirective,\n    FileExistsDialogComponent,\n    FileUploadDialogComponent,\n    TaggingComponent,\n    TaggingDialogComponent,\n    AutomatedTaggingParametersDialog,\n    NaturalNumbersOnlyDirective,\n    DocumentOverviewComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        FormsModule,\n        MatTableModule,\n        MatSortModule,\n        BrowserAnimationsModule,\n        MatChipsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatIconModule,\n        MatSnackBarModule,\n        MatListModule,\n        MatProgressBarModule,\n        MatToolbarModule,\n        MatButtonModule,\n        MatGridListModule,\n        MatCheckboxModule,\n        MatSelectModule,\n        MatMenuModule,\n        MatButtonToggleModule,\n        DragDropModule,\n        MatTreeModule,\n        MatExpansionModule,\n        MatDialogModule,\n        MatAutocompleteModule,\n        MatPaginatorModule,\n        MatTooltipModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            }\n        }),\n        ReactiveFormsModule,\n        MatProgressSpinnerModule,\n        MatTabsModule,\n        NgxEchartsModule.forRoot({\n          echarts\n        }),\n        NgxDaterangepickerMd.forRoot()\n    ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /**\n * @license\n * InfiniTag\n * Copyright (c) 2020 AMOS-5.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { KeywordsComponent } from './keywords/keywords.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DocumentationComponent } from './documentation/documentation.component';\nimport { DocumentOverviewComponent } from './document-overview/document-overview.component';\n\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent },\n  { path: 'documents', component: DocumentOverviewComponent },\n  { path: 'keywords', component: KeywordsComponent },\n  { path: 'documentation', component: DocumentationComponent },\n  { path: '**', component: DashboardComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AutomatedTaggingParametersDialog.html":{"url":"components/AutomatedTaggingParametersDialog.html","title":"component - AutomatedTaggingParametersDialog","body":"\n                   \n\n\n\n\n\n  Components\n  AutomatedTaggingParametersDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/dialogs/automated-tagging-parameters.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-automated-tagging-parameters-dialog\n            \n\n\n\n\n            \n                templateUrl\n                automated-tagging-parameters.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, translate: TranslateService, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/dialogs/automated-tagging-parameters.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/automated-tagging-parameters.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/automated-tagging-parameters.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/automated-tagging-parameters.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/automated-tagging-parameters.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\n\nexport interface DialogData {\n  computeOptimal: boolean;\n  numClusters: number;\n  numKeywords: number;\n}\n\n@Component({\n  selector: 'app-automated-tagging-parameters-dialog',\n  templateUrl: 'automated-tagging-parameters.dialog.html',\n})\nexport class AutomatedTaggingParametersDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public translate: TranslateService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        {{'DOCUMENTS.ML_PARAMETERS' | translate}}\n\n  {{'DOCUMENTS.ML_PARAMETERS_DIALOG' | translate}}\n  \n      {{'DOCUMENTS.ML_PARAMETERS_CHECKBOX' | translate}}\n  \n  \n    {{'DOCUMENTS.ML_PARAMETERS_NUMCLUSTERS' | translate}}\n    \n  \n  \n  \n    {{'DOCUMENTS.ML_PARAMETERS_NUMKEYWORDS' | translate}}\n    \n  \n\n\n    {{'CLOSE' | translate}}\n    {{'OK' | translate}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\\'DOCUMENTS.ML_PARAMETERS\\' | translate}}  {{\\'DOCUMENTS.ML_PARAMETERS_DIALOG\\' | translate}}        {{\\'DOCUMENTS.ML_PARAMETERS_CHECKBOX\\' | translate}}        {{\\'DOCUMENTS.ML_PARAMETERS_NUMCLUSTERS\\' | translate}}              {{\\'DOCUMENTS.ML_PARAMETERS_NUMKEYWORDS\\' | translate}}          {{\\'CLOSE\\' | translate}}    {{\\'OK\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutomatedTaggingParametersDialog', 'selector': 'app-automated-tagging-parameters-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentOverviewComponent', 'selector': 'app-document-overview'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileExistsDialogComponent', 'selector': 'app-file-exists-dialog'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FileUploadDialogComponent', 'selector': 'app-file-upload-dialog'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'KWMNameDialog', 'selector': 'input-dialog'},{'name': 'TaggingComponent', 'selector': 'app-tagging'},{'name': 'TaggingDialogComponent', 'selector': 'app-tagging-dialog'}];\n    var DIRECTIVES = [{'name': 'DragdropDirective', 'selector': '[appDragdrop]'},{'name': 'NaturalNumbersOnlyDirective', 'selector': '[appNaturalNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'AutomatedTaggingParametersDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                barOptions\n                            \n                            \n                                changeBar\n                            \n                            \n                                getPreviousDays\n                            \n                            \n                                getPreviousMondays\n                            \n                            \n                                getPreviousMonths\n                            \n                            \n                                getPreviousYears\n                            \n                            \n                                isLoading\n                            \n                            \n                                mergeOptions\n                            \n                            \n                                options\n                            \n                            \n                                pieOptions\n                            \n                            \n                                selected\n                            \n                            \n                                stats\n                            \n                            \n                                theme\n                            \n                            \n                                wordcloud_img\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dashboard.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            barOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeBar\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:144\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPreviousDays\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:260\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPreviousMondays\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:271\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPreviousMonths\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:285\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPreviousYears\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:299\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mergeOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { value: 'days', viewValue: 'Days (last 7 days)' },\n    { value: 'weeks', viewValue: 'Weeks (last 4 weeks)' },\n    { value: 'months', viewValue: 'Months (last 12 months)' },\n    { value: 'years', viewValue: 'Years (since start)' }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pieOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'days'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wordcloud_img\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/dashboard/dashboard.component.ts:57\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ApiService } from '../services/api.service';\n/**\n *\n * @class DashboardComponent\n *\n * Component representing the dashboard tab (no functionality right now)\n *\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit{\n  theme: string;\n  selected: string = 'days';\n  isLoading: boolean = true;\n  mergeOptions: object = {};\n  stats: any = {};\n  pieOptions: object;\n  barOptions: object;\n\n\n  options = [\n    { value: 'days', viewValue: 'Days (last 7 days)' },\n    { value: 'weeks', viewValue: 'Weeks (last 4 weeks)' },\n    { value: 'months', viewValue: 'Months (last 12 months)' },\n    { value: 'years', viewValue: 'Years (since start)' }\n  ];\n\n  wordcloud_img;\n\n  constructor(private api: ApiService, private sanitizer: DomSanitizer) {}\n\n  ngOnInit() {\n    this.api.getWordcloud().subscribe(blob => {\n\n\n      var reader = new FileReader();\n      reader.readAsDataURL(blob);\n      reader.onload = (_event) => {\n        this.wordcloud_img = this.sanitizer.bypassSecurityTrustUrl(reader.result as string);\n      }\n\n    });\n    this.api.getStats()\n      .subscribe((value: any) => {\n        this.stats = value;\n        this.pieOptions = {\n          title: {\n            text: 'Tagged/Untagged Documents',\n            x: 'center'\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: '{a} {b} : {c} ({d}%)'\n          },\n          legend: {\n            x: 'center',\n            y: 'bottom',\n            data: ['Tagged Documents', 'Untagged Documents']\n          },\n          calculable: true,\n          series: [\n            {\n              name: 'Area',\n              type: 'pie',\n              radius: [70, 110],\n              data: [\n                { value: this.stats.n_tagged_docs, name: 'Tagged Documents' },\n                { value: this.stats.n_untagged_docs, name: 'Untagged Documents' }\n              ],\n              color: ['#3f51b5', '#e83e8c']\n            }\n          ]\n        };\n        this.barOptions = {\n          title: {\n            text: 'Document upload/Day',\n            x: 'center'\n          },\n          tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n              type: 'shadow'\n            }\n          },\n          grid: {\n            left: '3%',\n            right: '4%',\n            bottom: '3%',\n            containLabel: true\n          },\n          xAxis: [\n            {\n              type: 'category',\n              data: this.getPreviousDays(),\n              axisTick: {\n                alignWithLabel: true\n              }\n            }\n          ],\n          yAxis: [{\n            type: 'value'\n          }],\n          series: [{\n            name: 'Documents Added',\n            type: 'bar',\n            barWidth: '50%',\n            color: ['#3f51b5', '#e83e8c'],\n            data: this.stats.uploaded_last_7_days\n          }]\n        };\n        this.isLoading = false;\n      });\n  }\n\n  changeBar = (event) => {\n    switch (event.value) {\n      case 'days':\n        this.mergeOptions = {\n          title: {\n            text: 'Document upload/Day',\n            x: 'center'\n          },\n          xAxis: [\n            {\n              type: 'category',\n              data: this.getPreviousDays(),\n              axisTick: {\n                alignWithLabel: true\n              }\n            }\n          ],\n          series: [{\n            name: 'Documents Added',\n            type: 'bar',\n            barWidth: '50%',\n            data: this.stats.uploaded_last_7_days\n          }]\n        };\n        break;\n      case 'weeks':\n        var mondays = this.getPreviousMondays();\n        this.mergeOptions = {\n          title: {\n            text: 'Document upload/Week',\n            x: 'center'\n          },\n          xAxis: [\n            {\n              type: 'category',\n              data: mondays,\n              axisTick: {\n                alignWithLabel: true\n              }\n            }\n          ],\n          series: [{\n            name: 'Documents Added',\n            type: 'bar',\n            barWidth: '50%',\n            data: this.stats.uploaded_last_4_weeks\n          }]\n        };\n        break;\n      case 'months':\n        var months = this.getPreviousMonths();\n\n        this.mergeOptions = {\n          title: {\n            text: 'Document upload/Month',\n            x: 'center'\n          },\n          xAxis: [\n            {\n              type: 'category',\n              data: months,\n              axisTick: {\n                alignWithLabel: true\n              }\n            }\n          ],\n          series: [{\n            name: 'Documents Added',\n            type: 'bar',\n            barWidth: '50%',\n            data: this.stats.uploaded_last_12_months\n          }]\n        };\n        break;\n      case 'years':\n        var years = this.getPreviousYears()\n        this.mergeOptions = {\n          title: {\n            text: 'Document upload/Year',\n            x: 'center'\n          },\n          xAxis: [\n            {\n              type: 'category',\n              data: years,\n              axisTick: {\n                alignWithLabel: true\n              }\n            }\n          ],\n          series: [{\n            name: 'Documents Added',\n            type: 'bar',\n            barWidth: '50%',\n            data: this.stats.uploaded_all_years\n          }]\n        };\n        break;\n      default:\n        this.mergeOptions = {\n          xAxis: [\n            {\n              type: 'category',\n              data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n              axisTick: {\n                alignWithLabel: true\n              }\n            }\n          ],\n        };\n    }\n\n  }\n\n\n\n  getPreviousDays = () => {\n    var days = [];\n    var daysName = new Array(\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\");\n    for (var i = 0; i  {\n    var prevMondays = [];\n    var d = new Date();\n\n    let dt = new Date(d.setDate(d.getDate() - (d.getDay() + 6) % 7));\n    prevMondays.push(dt.getDate() + \"/\" + (dt.getMonth() + 1));\n\n    for (let i = 0; i  {\n    var monthsWeWant = [];\n    var monthName = new Array(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\");\n\n    var d = new Date();\n    d.setDate(1);\n\n    for (let i = 0; i  {\n    var years = [];\n    var d = new Date();\n    let index = 0;\n    console.log(d.getFullYear())\n    for (let i = 2020; i \n    \n\n    \n        \n    \n        \n      \n\n\n\n    \n        Dashboard InfiniTag\n        {{'HOME.MOTTO' | translate}}\n        \n            \n                \n                    \n                \n                 -->\n\n            \n\n            \n                \n                    \n                        \n                            Filter By\n                            \n                                \n                                    {{option.viewValue}}\n                                \n                            \n                        \n                    \n                    \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        #Keywords{{this.stats.n_keywords}}\n                    \n                    \n                        #Keyword Models{{this.stats.n_keyword_models}}\n                    \n                    \n                        #Documents{{this.stats.n_total_docs}}\n                    \n                \n\n            \n             \n                \n                    \n                \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                .container {\n    padding-top: 10px;\n}\nmat-grid-tile{\n    border-style: solid;\n    border-width: thin;\n    margin-bottom: 24px !important;\n}\n\n.edit {\n    margin-top: 20px;\n}\n\n.footer {\n    width: 200px;\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n}\n\n.tagcloud {\n  width: 1000px;\n  height: 470px;\n}\n\n.content-inside-grid {\n    .bar-chart{\n        margin-top: -30px;\n    }\n    width:100%;\n}\n\n.circle {\n  width: 120px;\n  height: 120px;\n  margin-bottom: 20px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100%;\n  text-align: center;\n  display: flex;\n  background-color: #3f51b5;\n  color: white;\n  }\n\n  .parent {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    padding-bottom: 20px;\n  }\n\n  .spinner-wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 90vh;\n  }\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Dashboard InfiniTag        {{\\'HOME.MOTTO\\' | translate}}                                                                                         -->                                                                                                                Filter By                                                                                                {{option.viewValue}}                                                                                                                                                                                                                                                                                                    #Keywords{{this.stats.n_keywords}}                                                                #Keyword Models{{this.stats.n_keyword_models}}                                                                #Documents{{this.stats.n_total_docs}}                                                                                                                                                                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutomatedTaggingParametersDialog', 'selector': 'app-automated-tagging-parameters-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentOverviewComponent', 'selector': 'app-document-overview'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileExistsDialogComponent', 'selector': 'app-file-exists-dialog'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FileUploadDialogComponent', 'selector': 'app-file-upload-dialog'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'KWMNameDialog', 'selector': 'input-dialog'},{'name': 'TaggingComponent', 'selector': 'app-tagging'},{'name': 'TaggingDialogComponent', 'selector': 'app-tagging-dialog'}];\n    var DIRECTIVES = [{'name': 'DragdropDirective', 'selector': '[appDragdrop]'},{'name': 'NaturalNumbersOnlyDirective', 'selector': '[appNaturalNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dialogs/automated-tagging-parameters.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        computeOptimal\n                                \n                                \n                                        numClusters\n                                \n                                \n                                        numKeywords\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        computeOptimal\n                                    \n                                \n                                \n                                    \n                                        computeOptimal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numClusters\n                                    \n                                \n                                \n                                    \n                                        numClusters:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numKeywords\n                                    \n                                \n                                \n                                    \n                                        numKeywords:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\n\nexport interface DialogData {\n  computeOptimal: boolean;\n  numClusters: number;\n  numKeywords: number;\n}\n\n@Component({\n  selector: 'app-automated-tagging-parameters-dialog',\n  templateUrl: 'automated-tagging-parameters.dialog.html',\n})\nexport class AutomatedTaggingParametersDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public translate: TranslateService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData-1.html":{"url":"interfaces/DialogData-1.html","title":"interface - DialogData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dialogs/file-exists.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fid\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fid\n                                    \n                                \n                                \n                                    \n                                        fid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\n\nexport interface DialogData {\n  id: string;\n  fid: string;\n}\n\n@Component({\n  selector: 'app-file-exists-dialog',\n  templateUrl: 'file-exists.dialog.html',\n})\nexport class FileExistsDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public translate: TranslateService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onDialogButtonClick(response: string): void {\n    this.dialogRef.close({response, id: this.data.id, fid: this.data.fid});\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentOverviewComponent.html":{"url":"components/DocumentOverviewComponent.html","title":"component - DocumentOverviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentOverviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/document-overview/document-overview.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-document-overview\n            \n\n            \n                styleUrls\n                ./document-overview.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./document-overview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backendStatus\n                            \n                            \n                                    Public\n                                documents\n                            \n                            \n                                    Public\n                                documentsUrl\n                            \n                            \n                                    Public\n                                filterString\n                            \n                            \n                                    Public\n                                num_per_page\n                            \n                            \n                                    Public\n                                page\n                            \n                            \n                                    Public\n                                serverStatus\n                            \n                            \n                                    Public\n                                serverUrl\n                            \n                            \n                                    Public\n                                sort_field\n                            \n                            \n                                    Public\n                                sort_order\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                total_pages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                sync\n                            \n                            \n                                    Public\n                                updatePageInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/document-overview/document-overview.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/document-overview/document-overview.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sync(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/document-overview/document-overview.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updatePageInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePageInfo(e: PageEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/document-overview/document-overview.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                            PageEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backendStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.serverUrl}/health`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/document-overview/document-overview.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            documents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/document-overview/document-overview.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            documentsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.serverUrl}/documents`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/document-overview/document-overview.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/document-overview/document-overview.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            num_per_page\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/document-overview/document-overview.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            page\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/document-overview/document-overview.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DOWN'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/document-overview/document-overview.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.serverUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/document-overview/document-overview.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sort_field\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/document-overview/document-overview.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sort_order\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/document-overview/document-overview.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'infinitag'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/document-overview/document-overview.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            total_pages\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/document-overview/document-overview.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { IDocument } from '../models/IDocument.model';\nimport { environment } from './../../environments/environment';\nimport { ApiService } from '../services/api.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {PageEvent} from '@angular/material/paginator';\n@Component({\n  selector: 'app-document-overview',\n  templateUrl: './document-overview.component.html',\n  styleUrls: ['./document-overview.component.scss']\n})\n\nexport class DocumentOverviewComponent implements OnInit {\n  public title = 'infinitag';\n  public serverUrl = environment.serverUrl;\n  public backendStatus = `${this.serverUrl}/health`;\n  public documentsUrl = `${this.serverUrl}/documents`;\n\n\n  public serverStatus = 'DOWN';\n\n  public documents: Array = [];\n  public page;\n  public num_per_page;\n  public sort_field;\n  public sort_order;\n  public total_pages;\n  public filterString = '';\n\n\n\n  constructor(private api: ApiService, private translate: TranslateService) {}\n\n  public ngOnInit(): void {\n    this.api.getDocuments()\n      .subscribe((value: any) => {\n        this.documents = value.docs;\n        this.page = value.page;\n        this.num_per_page = value.num_per_page;\n        this.sort_field = value.sort_field;\n        this.sort_order = value.sort_order;\n        this.total_pages = value.total_pages * value.num_per_page;\n      });\n  }\n\n  public updatePageInfo(e: PageEvent) {\n    console.log(e);\n    this.num_per_page = e.pageSize;\n  }\n\n  public sync(e) {\n    this.api.getDocuments(e.currentPage, e.pageSize)\n      .subscribe((value: any) => {\n        this.documents = value.docs;\n        this.page = value.page;\n        this.num_per_page = value.num_per_page;\n        this.sort_field = value.sort_field;\n        this.sort_order = value.sort_order;\n        this.total_pages = value.total_pages * value.num_per_page;\n      });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./document-overview.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutomatedTaggingParametersDialog', 'selector': 'app-automated-tagging-parameters-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentOverviewComponent', 'selector': 'app-document-overview'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileExistsDialogComponent', 'selector': 'app-file-exists-dialog'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FileUploadDialogComponent', 'selector': 'app-file-upload-dialog'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'KWMNameDialog', 'selector': 'input-dialog'},{'name': 'TaggingComponent', 'selector': 'app-tagging'},{'name': 'TaggingDialogComponent', 'selector': 'app-tagging-dialog'}];\n    var DIRECTIVES = [{'name': 'DragdropDirective', 'selector': '[appDragdrop]'},{'name': 'NaturalNumbersOnlyDirective', 'selector': '[appNaturalNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'DocumentOverviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/documentation/documentation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                styleUrls\n                ./documentation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accordion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accordion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAccordion\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatAccordion)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentation/documentation.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ViewChild} from '@angular/core';\nimport {MatAccordion} from '@angular/material/expansion';\n\n@Component({\n  selector: 'app-documentation',\n  templateUrl: './documentation.component.html',\n  styleUrls: ['./documentation.component.scss']\n})\nexport class DocumentationComponent {\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n}\n\n    \n\n    \n        \n  API Documentation\n  \n    Expand All\n    Collapse All\n  \n  \n    \n      \n        \n          /upload\n        \n        \n          Upload a document to the backend\n          POST, PATCH, PUT\n        \n      \n      \n        \n          POST\n          \n            Type: Body\n            Description: Saves a new file\n            Parameters:\n              \n                fileKey: Form data with file under the fileKey key.\n                f_id: Randomly assigned file id.\n              \n            \n            Returns:\n              \n                200: Successfully saved file\n                207: File exists already.\n                400: Sent file could not be read\n                500: Sent file could not be saved\n                502: Sent file could not be entered into the database\n              \n            \n          \n          \n          PUT\n          \n            Type: Body\n            Description: Adds a copy of an existing file\n            Parameters:\n              \n                fileKey: Form data with file under the fileKey key.\n                f_id: Randomly assigned file id.\n              \n            \n            Returns:\n              \n                200: Successfully saved file\n                400: Sent file could not be read\n                500: Sent file could not be saved\n                502: Sent file could not be entered into the database\n              \n            \n          \n          \n          PATCH\n          \n            Type: Body\n            Description: Overwrites an existing file\n            Parameters:\n              \n                fileKey: Form data with file under the fileKey key.\n                f_id: Randomly assigned file id.\n              \n            \n            Returns:\n              \n                200: Successfully saved file\n                400: Sent file could not be read\n                500: Sent file could not be saved\n                502: Sent file could not be entered into the database\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          /download\n        \n        \n          Downloads a document\n          POST\n        \n      \n      \n        \n          POST\n          \n            Type: Body\n            Parameters:\n              \n                ids: Array of IDs of documents to be downloaded\n              \n            \n            Returns:\n              \n                200: Successfully downloaded file\n                400: Error on the server.\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          /changekeywords\n        \n        \n          Change keywords assigned to document\n          PATCH\n        \n      \n      \n        \n          PATCH\n          \n            Type: Body\n            Parameters:\n              \n                id: id of the document to be changed\n                keywords: Array of keywords to assign to the document\n              \n            \n            Returns:\n              \n                200: Successfully updated keywords on file\n                400: Reading of request unsuccessful\n                502: Keywords on document could not be updated in database\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          /documents\n        \n        \n          Get documents from database\n          GET, DELETE\n        \n      \n      \n        \n          GET\n          \n            Type: Query\n            Parameters:\n            \n            Returns:\n              \n                200: Array of all documents in database\n                502: Database could not be reached\n              \n            \n          \n          \n          DELETE\n          \n            Type: Query\n            Parameters:\n              \n                id: id of the document to be deleted\n              \n            \n            Returns:\n              \n                201: Document has been deleted\n                502: Document could not be deleted.\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          /dims\n        \n        \n          Handle uncategorized dimensions\n          GET, POST, DELETE\n        \n      \n      \n        \n          GET\n          \n            Type: Quey\n            Parameters:\n            \n            Returns:\n              \n                200: A list of uncategorized dimensions\n                500: Dimensions could not be fetched\n              \n            \n          \n        \n        \n        \n          POST\n          \n            Type: Body\n            Parameters:\n              \n                dim: String indicating the dimension to be added to the database\n              \n            \n            Returns:\n              \n                200: Dimension succesfully added to database\n                500: Dimension not succesfully added to database\n              \n            \n          \n        \n        \n        \n          DELETE\n          \n            Type: Query\n            Parameters:\n              \n                dimension id: String indicating the dimension to be removed to the database\n              \n            \n            Returns:\n              \n                200: Dimension successfully removed from database\n                500: Dimension not successfully removed from database\n              \n            \n            Example (Angular):\n               {{\"\n                export class DeleteExample {\n                constructor(private httpClient: HttpClient) {}\n                ngOnInit() {\n                this.httpClient.delete('/dims/123456');\n                }\n                }\n                \"}}\n            \n            \n          \n        \n      \n    \n    \n      \n        \n          /keys\n        \n        \n          Handle uncategorized keys\n          GET, POST, DELETE\n        \n      \n      \n        \n          GET\n          \n            Type: Quey\n            Parameters:\n            \n            Returns:\n              \n                200: A list of uncategorized keys\n                500: keys could not be fetched\n              \n            \n          \n        \n        \n        \n          POST\n          \n            Type: Body\n            Parameters:\n              \n                key: String indicating the key to be added to the database\n              \n            \n            Returns:\n              \n                200: key successfully added to database\n                500: key not successfully added to database\n              \n            \n            Example (Angular):\n               {{\"\n                export class PostExample {\n                constructor(private httpClient: HttpClient) {}\n                ngOnInit() {\n                const key: {\n                'key': 'my-key',\n              };\n                this.httpClient.post('/keys', key);\n                }\n                }\n                \"}}\n            \n            \n          \n        \n        \n        \n          DELETE\n          \n            Type: Query\n            Parameters:\n              \n                dimension id: String indicating the dimension to be removed to the database\n              \n            \n            Returns:\n              \n                200: Dimension successfully removed from database\n                500: Dimension not successfully removed from database\n              \n            \n            Example (Angular):\n               {{\"\n                export class DeleteExample {\n                constructor(private httpClient: HttpClient) {}\n                ngOnInit() {\n                this.httpClient.delete('/keys/123456');\n                }\n                }\n                \"}}\n            \n            \n          \n        \n      \n    \n    \n      \n        \n          /health\n        \n        \n          Make sure the backend is running\n          GET\n        \n      \n      \n        \n          GET\n          \n            Type: Query\n            Parameters:\n            \n            Returns:\n              {{\" {status: 'UP'} \"}}\n            \n          \n        \n      \n    \n    \n      \n        \n          /keywordlist\n        \n        \n          Get a list of all keywords\n          GET\n        \n      \n      \n        \n          GET\n          \n            Type: Query\n            Parameters:\n            \n            Returns:\n              \n                200: Array with all keywords\n                500: Error on server\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          /models\n        \n        \n          Manage keyword models\n          GET, POST, DELETE\n        \n      \n      \n        \n          GET\n          \n            Type: Query\n            Parameters:\n            \n            Returns:\n              \n                200: Array with all keyword models\n                500: Error on server\n              \n            \n          \n          \n          POST\n          \n            Type: Body\n            Parameters:\n              \n                id: ID of the model\n                hierarchy: Order of the KWM\n                keywords: A list of keywords in the KWM\n              \n            \n            Returns:\n              \n                200: Model successfully added\n                500: Error on server\n              \n            \n            \n          \n          DELETE\n          \n            Type: Query\n            Parameters:\n              \n                id: ID of the model to delete\n              \n            \n            Returns:\n              \n                200: Model successfully deleted\n                500: Error on server\n              \n            \n          \n        \n      \n    \n    \n      \n        \n          /apply\n        \n        \n          Apply tagging mechanism\n          POST\n        \n      \n      \n        \n          POST\n          \n            Type: Body\n            Parameters:\n              \n                documents: Array of documents to be tagged\n                options: An object containing the method and additional parameters to be used when tagging\n                job_id: A random string used to monitoring the job\n              \n            \n            Returns:\n              \n                200: Tagging successfully applied \n              \n            \n          \n        \n      \n    \n    \n      \n        \n          /wordcloud\n        \n        \n          Get word cloud\n          GET\n        \n      \n      \n        \n          GET\n          \n            Type: Query\n            Parameters:\n            \n            Returns:\n              \n                200: PNG of the word cloud \n              \n            \n          \n        \n      \n    \n    \n      \n        \n          /job\n        \n        \n          Manage tagging jobs\n          GET, DELETE\n        \n      \n      \n        \n          GET\n          \n            Type: Query\n            Parameters:\n              \n                job_id: Id of the job to be fetched\n              \n            \n            Returns:\n              \n                200: Status of the job including percentage complete \n                209: Job not found \n              \n            \n          \n          \n          DELETE\n          \n            Type: Query\n            Parameters:\n              \n                job_id: Id of the job to be deleted\n              \n            \n            Returns:\n              \n                200: Job deleted \n              \n            \n          \n        \n      \n    \n    \n      \n        \n          /statistics\n        \n        \n          Get information about documents and keywords\n          GET\n        \n      \n      \n        \n          GET\n          \n            Type: Query\n            Parameters:\n            \n            Returns:\n              \n                200: An object containing information such as number of documents, number of keywords, etc. \n              \n            \n          \n        \n      \n    \n    \n      \n        \n          /stopServer\n        \n        \n          Stops the backend\n          GET\n        \n      \n      \n        \n          GET\n          \n            Type: Query\n            Parameters:\n            \n            Returns:\n\n              \n                Success:\n                  {{\" {success: 'True', message: 'Server is shutting down...'} \"}}\n                \n                Failure:\n                  {{\" {success: 'False', message: 'Server could not be shut down'} \"}}\n                \n              \n\n            \n          \n        \n      \n    \n    \n      \n        \n          /\n        \n        \n          Hello World Route\n          GET\n        \n      \n      \n        \n          GET\n          \n            Type: Query\n            Parameters:\n            \n            Returns:\n\n              \n                Success:\n                  {{\" 'Hello World' \"}}\n                \n              \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./documentation.component.scss\n                \n                .example-action-buttons {\n  padding-bottom: 20px;\n}\n\n.example-headers-align .mat-expansion-panel-header-title,\n.example-headers-align .mat-expansion-panel-header-description {\n  flex-basis: 0;\n}\n\n.example-headers-align .mat-expansion-panel-header-description {\n  justify-content: space-between;\n  align-items: center;\n}\n\n.example-headers-align .mat-form-field + .mat-form-field {\n  margin-left: 8px;\n}\n\n.mat-list-item {\n  height: 100% !important;\n}\n\nmat-expansion-panel-header {\n  h2 {\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  API Documentation      Expand All    Collapse All                                /upload                          Upload a document to the backend          POST, PATCH, PUT                                      POST                      Type: Body            Description: Saves a new file            Parameters:                              fileKey: Form data with file under the fileKey key.                f_id: Randomly assigned file id.                                      Returns:                              200: Successfully saved file                207: File exists already.                400: Sent file could not be read                500: Sent file could not be saved                502: Sent file could not be entered into the database                                                        PUT                      Type: Body            Description: Adds a copy of an existing file            Parameters:                              fileKey: Form data with file under the fileKey key.                f_id: Randomly assigned file id.                                      Returns:                              200: Successfully saved file                400: Sent file could not be read                500: Sent file could not be saved                502: Sent file could not be entered into the database                                                        PATCH                      Type: Body            Description: Overwrites an existing file            Parameters:                              fileKey: Form data with file under the fileKey key.                f_id: Randomly assigned file id.                                      Returns:                              200: Successfully saved file                400: Sent file could not be read                500: Sent file could not be saved                502: Sent file could not be entered into the database                                                                                  /download                          Downloads a document          POST                                      POST                      Type: Body            Parameters:                              ids: Array of IDs of documents to be downloaded                                      Returns:                              200: Successfully downloaded file                400: Error on the server.                                                                                  /changekeywords                          Change keywords assigned to document          PATCH                                      PATCH                      Type: Body            Parameters:                              id: id of the document to be changed                keywords: Array of keywords to assign to the document                                      Returns:                              200: Successfully updated keywords on file                400: Reading of request unsuccessful                502: Keywords on document could not be updated in database                                                                                  /documents                          Get documents from database          GET, DELETE                                      GET                      Type: Query            Parameters:                        Returns:                              200: Array of all documents in database                502: Database could not be reached                                                        DELETE                      Type: Query            Parameters:                              id: id of the document to be deleted                                      Returns:                              201: Document has been deleted                502: Document could not be deleted.                                                                                  /dims                          Handle uncategorized dimensions          GET, POST, DELETE                                      GET                      Type: Quey            Parameters:                        Returns:                              200: A list of uncategorized dimensions                500: Dimensions could not be fetched                                                                      POST                      Type: Body            Parameters:                              dim: String indicating the dimension to be added to the database                                      Returns:                              200: Dimension succesfully added to database                500: Dimension not succesfully added to database                                                                      DELETE                      Type: Query            Parameters:                              dimension id: String indicating the dimension to be removed to the database                                      Returns:                              200: Dimension successfully removed from database                500: Dimension not successfully removed from database                                      Example (Angular):               {{\"                export class DeleteExample {                constructor(private httpClient: HttpClient) {}                ngOnInit() {                this.httpClient.delete(\\'/dims/123456\\');                }                }                \"}}                                                                                /keys                          Handle uncategorized keys          GET, POST, DELETE                                      GET                      Type: Quey            Parameters:                        Returns:                              200: A list of uncategorized keys                500: keys could not be fetched                                                                      POST                      Type: Body            Parameters:                              key: String indicating the key to be added to the database                                      Returns:                              200: key successfully added to database                500: key not successfully added to database                                      Example (Angular):               {{\"                export class PostExample {                constructor(private httpClient: HttpClient) {}                ngOnInit() {                const key: {                \\'key\\': \\'my-key\\',              };                this.httpClient.post(\\'/keys\\', key);                }                }                \"}}                                                                    DELETE                      Type: Query            Parameters:                              dimension id: String indicating the dimension to be removed to the database                                      Returns:                              200: Dimension successfully removed from database                500: Dimension not successfully removed from database                                      Example (Angular):               {{\"                export class DeleteExample {                constructor(private httpClient: HttpClient) {}                ngOnInit() {                this.httpClient.delete(\\'/keys/123456\\');                }                }                \"}}                                                                                /health                          Make sure the backend is running          GET                                      GET                      Type: Query            Parameters:                        Returns:              {{\" {status: \\'UP\\'} \"}}                                                                    /keywordlist                          Get a list of all keywords          GET                                      GET                      Type: Query            Parameters:                        Returns:                              200: Array with all keywords                500: Error on server                                                                                  /models                          Manage keyword models          GET, POST, DELETE                                      GET                      Type: Query            Parameters:                        Returns:                              200: Array with all keyword models                500: Error on server                                                        POST                      Type: Body            Parameters:                              id: ID of the model                hierarchy: Order of the KWM                keywords: A list of keywords in the KWM                                      Returns:                              200: Model successfully added                500: Error on server                                                          DELETE                      Type: Query            Parameters:                              id: ID of the model to delete                                      Returns:                              200: Model successfully deleted                500: Error on server                                                                                  /apply                          Apply tagging mechanism          POST                                      POST                      Type: Body            Parameters:                              documents: Array of documents to be tagged                options: An object containing the method and additional parameters to be used when tagging                job_id: A random string used to monitoring the job                                      Returns:                              200: Tagging successfully applied                                                                                   /wordcloud                          Get word cloud          GET                                      GET                      Type: Query            Parameters:                        Returns:                              200: PNG of the word cloud                                                                                   /job                          Manage tagging jobs          GET, DELETE                                      GET                      Type: Query            Parameters:                              job_id: Id of the job to be fetched                                      Returns:                              200: Status of the job including percentage complete                 209: Job not found                                                         DELETE                      Type: Query            Parameters:                              job_id: Id of the job to be deleted                                      Returns:                              200: Job deleted                                                                                   /statistics                          Get information about documents and keywords          GET                                      GET                      Type: Query            Parameters:                        Returns:                              200: An object containing information such as number of documents, number of keywords, etc.                                                                                   /stopServer                          Stops the backend          GET                                      GET                      Type: Query            Parameters:                        Returns:                              Success:                  {{\" {success: \\'True\\', message: \\'Server is shutting down...\\'} \"}}                                Failure:                  {{\" {success: \\'False\\', message: \\'Server could not be shut down\\'} \"}}                                                                                                  /                          Hello World Route          GET                                      GET                      Type: Query            Parameters:                        Returns:                              Success:                  {{\" \\'Hello World\\' \"}}                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutomatedTaggingParametersDialog', 'selector': 'app-automated-tagging-parameters-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentOverviewComponent', 'selector': 'app-document-overview'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileExistsDialogComponent', 'selector': 'app-file-exists-dialog'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FileUploadDialogComponent', 'selector': 'app-file-upload-dialog'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'KWMNameDialog', 'selector': 'input-dialog'},{'name': 'TaggingComponent', 'selector': 'app-tagging'},{'name': 'TaggingDialogComponent', 'selector': 'app-tagging-dialog'}];\n    var DIRECTIVES = [{'name': 'DragdropDirective', 'selector': '[appDragdrop]'},{'name': 'NaturalNumbersOnlyDirective', 'selector': '[appNaturalNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragdropDirective.html":{"url":"directives/DragdropDirective.html","title":"directive - DragdropDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DragdropDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/directives/dragdrop.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDragdrop]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                fileDropped\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.fileover\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/directives/dragdrop.directive.ts:32\n                            \n                        \n\n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        fileDropped\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/directives/dragdrop.directive.ts:32\n                            \n                        \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.fileover\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/directives/dragdrop.directive.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            dragleave\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndragleave(event)\n                \n            \n\n\n            \n                \n                    Defined in src/directives/dragdrop.directive.ts:42\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragover\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndragover(event)\n                \n            \n\n\n            \n                \n                    Defined in src/directives/dragdrop.directive.ts:36\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndrop(event)\n                \n            \n\n\n            \n                \n                    Defined in src/directives/dragdrop.directive.ts:48\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import {Directive, EventEmitter, Host, HostBinding, HostListener, Output} from '@angular/core';\n\n@Directive({\n  selector: '[appDragdrop]'\n})\nexport class DragdropDirective {\n  @HostBinding('class.fileover') fileOver: boolean;\n  @Output() fileDropped = new EventEmitter();\n\n  constructor() { }\n\n  @HostListener('dragover', ['$event']) public onDragOver(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.fileOver = true;\n  }\n\n  @HostListener('dragleave', ['$event']) public onDragLeave(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.fileOver = false;\n  }\n\n  @HostListener('drop', ['$event']) public onDrop(event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.fileOver = false;\n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      this.fileDropped.emit(files);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileExistsDialogComponent.html":{"url":"components/FileExistsDialogComponent.html","title":"component - FileExistsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FileExistsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/dialogs/file-exists.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-exists-dialog\n            \n\n\n\n\n            \n                templateUrl\n                file-exists.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDialogButtonClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, translate: TranslateService, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/dialogs/file-exists.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDialogButtonClick\n                        \n                        \n                    \n                \n            \n            \n                \nonDialogButtonClick(response: string)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/file-exists.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/file-exists.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/file-exists.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/file-exists.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\n\nexport interface DialogData {\n  id: string;\n  fid: string;\n}\n\n@Component({\n  selector: 'app-file-exists-dialog',\n  templateUrl: 'file-exists.dialog.html',\n})\nexport class FileExistsDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public translate: TranslateService,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onDialogButtonClick(response: string): void {\n    this.dialogRef.close({response, id: this.data.id, fid: this.data.fid});\n  }\n}\n\n    \n\n    \n        {{'DOCUMENTS.FILE_EXISTS' | translate}}\n\n  {{data.id}}\n  {{'DOCUMENTS.FILE_EXISTS_QUESTION' | translate}}\n\n\n  {{'DOCUMENTS.FILE_EXISTS_OVERWRITE' | translate}}\n  {{'DOCUMENTS.FILE_EXISTS_ADD' | translate}}\n  {{'DOCUMENTS.FILE_EXISTS_CANCEL' | translate}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\\'DOCUMENTS.FILE_EXISTS\\' | translate}}  {{data.id}}  {{\\'DOCUMENTS.FILE_EXISTS_QUESTION\\' | translate}}  {{\\'DOCUMENTS.FILE_EXISTS_OVERWRITE\\' | translate}}  {{\\'DOCUMENTS.FILE_EXISTS_ADD\\' | translate}}  {{\\'DOCUMENTS.FILE_EXISTS_CANCEL\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutomatedTaggingParametersDialog', 'selector': 'app-automated-tagging-parameters-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentOverviewComponent', 'selector': 'app-document-overview'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileExistsDialogComponent', 'selector': 'app-file-exists-dialog'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FileUploadDialogComponent', 'selector': 'app-file-upload-dialog'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'KWMNameDialog', 'selector': 'input-dialog'},{'name': 'TaggingComponent', 'selector': 'app-tagging'},{'name': 'TaggingDialogComponent', 'selector': 'app-tagging-dialog'}];\n    var DIRECTIVES = [{'name': 'DragdropDirective', 'selector': '[appDragdrop]'},{'name': 'NaturalNumbersOnlyDirective', 'selector': '[appNaturalNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileExistsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Service handling uploading, updating and deleting documents\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deleteFile\n                            \n                            \n                                    Public\n                                deleteFiles\n                            \n                            \n                                    Public\n                                getFiles\n                            \n                            \n                                    Public\n                                patchFile\n                            \n                            \n                                    Public\n                                patchKeywords\n                            \n                            \n                                    Public\n                                postFile\n                            \n                            \n                                    Public\n                                putFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/file.service.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: IFile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/file.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteFiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFiles(iDocs: IDocument[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/file.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iDocs\n                                    \n                                                IDocument[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFiles(iDocs: IDocument[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/file.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iDocs\n                                    \n                                                IDocument[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            patchFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patchFile(file: IFile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/file.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            patchKeywords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patchKeywords(iDoc: IDocument)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/file.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iDoc\n                                    \n                                                IDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postFile(file: IFile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/file.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putFile(file: IFile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/file.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { IDocument } from '../models/IDocument.model';\nimport {IFile} from '../models/IFile.model';\n\n\n/**\n *\n * Service handling uploading, updating and deleting documents\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n  constructor(private httpClient: HttpClient) { }\n\n  public postFile(file: IFile): Observable {\n      const formData: FormData = new FormData();\n      const fileData: File = file.file;\n      formData.append('fid', file.fid);\n      formData.append('fileKey', fileData, fileData.name);\n      return this.httpClient\n        .post(`${environment.serverUrl}/upload`, formData, {\n          reportProgress: true,\n          observe: 'events'\n        });\n  }\n\n  public patchFile(file: IFile) {\n    const formData: FormData = new FormData();\n    const fileData: File = file.file;\n    formData.append('fid', file.fid);\n    formData.append('fileKey', fileData, fileData.name);\n    return this.httpClient\n      .patch(`${environment.serverUrl}/upload`, formData, {\n        reportProgress: true,\n        observe: 'events'\n      });\n  }\n\n  public putFile(file: IFile) {\n    const formData: FormData = new FormData();\n    const fileData: File = file.file;\n    formData.append('fileKey', fileData, fileData.name);\n    formData.append('fid', file.fid);\n    return this.httpClient\n      .put(`${environment.serverUrl}/upload`, formData, {\n        reportProgress: true,\n        observe: 'events'\n      });\n  }\n\n  public getFiles(iDocs: IDocument[]): Observable {\n    return this.httpClient.post(`${environment.serverUrl}/download`, iDocs, {\n      observe: 'response',\n      responseType: 'blob'\n    });\n  }\n\n  public deleteFiles(iDocs: IDocument[]): Observable {\n    const options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      }),\n      body: {\n        iDocs: iDocs\n      }\n    }\n\n    return this.httpClient.delete(`${environment.serverUrl}/documents`, options);\n  }\n\n  public deleteFile(file: IFile) {\n    return this.httpClient.delete(`${environment.serverUrl}/documents/${file.file.name}`);\n  }\n\n  public patchKeywords(iDoc: IDocument): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n\n    return this.httpClient.patch(`${environment.serverUrl}/changekeywords`, iDoc, httpOptions);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileUploadComponent.html":{"url":"components/FileUploadComponent.html","title":"component - FileUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FileUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/file-upload/file-upload.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-upload\n            \n\n            \n                styleUrls\n                ./file-upload.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                files\n                            \n                            \n                                    Public\n                                progressMonitor\n                            \n                            \n                                    Public\n                                utils\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cleanUpCancelledFiles\n                            \n                            \n                                    Private\n                                handleFileSend\n                            \n                            \n                                    Public\n                                onSelectFile\n                            \n                            \n                                openExistsDialog\n                            \n                            \n                                openUploadDialog\n                            \n                            \n                                    Public\n                                resendFile\n                            \n                            \n                                    Private\n                                sendFileToService\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                uploadFinished\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fileService: FileService, translate: TranslateService, dialog: MatDialog, utils: Utils)\n                    \n                \n                        \n                            \n                                Defined in src/app/file-upload/file-upload.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                        FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utils\n                                                  \n                                                        \n                                                                        Utils\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        uploadFinished\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:51\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cleanUpCancelledFiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cleanUpCancelledFiles(files: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                                Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleFileSend\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFileSend(event: HttpEvent, file: IFile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            HttpEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : The HttpEvent to process\n\n                                    \n                                \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : the corresponding file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelectFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelectFile(files: FileList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : FileList from the input html element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openExistsDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenExistsDialog(dialogData: DialogData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dialogData\n                                    \n                                                DialogData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openUploadDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenUploadDialog(dialogData: UploadDialogData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dialogData\n                                    \n                                                UploadDialogData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resendFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resendFile(requestType: literal type, file: IFile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestType\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sendFileToService\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendFileToService(file: IFile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : IFile object containing the file to be send\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            files\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            progressMonitor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    progress: 0,\n    finished: 0\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            utils\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Utils\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, EventEmitter, Output} from '@angular/core';\nimport { FileService } from '../services/file.service';\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogData, FileExistsDialogComponent } from '../../dialogs/file-exists.component';\nimport { IFile } from '../models/IFile.model';\nimport { Utils } from '../services/utils.service';\nimport { FileUploadDialogComponent, UploadDialogData } from '../../dialogs/file-upload.dialog.component';\n\n\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\n\n/**\n * @class FileUploadComponent\n *\n * Component handles the file input and displaying the progress\n */\nexport class FileUploadComponent {\n  files: Array = [];\n  @Output() uploadFinished = new EventEmitter();\n  public progressMonitor = {\n    progress: 0,\n    finished: 0\n  };\n\n  constructor(\n    private fileService: FileService,\n    private translate: TranslateService,\n    public dialog: MatDialog,\n    public utils: Utils) {\n  }\n\n  openExistsDialog(dialogData: DialogData): void {\n    const dialogRef = this.dialog.open(FileExistsDialogComponent, {\n      width: '500px',\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe((result: { response: string, id: string, fid: string }) => {\n      const file: IFile | undefined = this.files.find((f: IFile) => f.fid === result.fid);\n      this.resendFile(result, file);\n    });\n  }\n\n  openUploadDialog(dialogData: UploadDialogData): void {\n    const dialogRef = this.dialog.open(FileUploadDialogComponent, {\n      width: '1200px',\n      data: dialogData\n    });\n\n    dialogRef.afterClosed()\n      .subscribe( () => {\n        this.uploadFinished.emit();\n        this.cleanUpCancelledFiles(dialogData.files);\n        this.progressMonitor.finished = 0;\n      });\n  }\n\n  public cleanUpCancelledFiles(files: Array) {\n    for (const file of files) {\n      if (file.status === 'CANCELLED') {\n        this.fileService.deleteFile(file).subscribe( (result) => {\n          console.log(result);\n        });\n      }\n\n    }\n  }\n\n  public resendFile(requestType: { response: string }, file: IFile) {\n    if (file !== undefined) {\n      if (requestType.response === 'overwrite') {\n        this.fileService.patchFile(file)\n          .subscribe((event: HttpEvent) => {\n            this.handleFileSend(event, file);\n          });\n      } else if (requestType.response === 'add') {\n        this.fileService.putFile(file)\n          .subscribe((event: HttpEvent) => {\n            this.handleFileSend(event, file);\n          });\n      } else {\n        file.status = 'CANCELLED';\n        file.icon = 'cloud_done';\n      }\n    }\n  }\n\n  /**\n   * @description\n   * Gets called when the file input element is used, parses the files and sends them to sendFileToService()\n   * @param {FileList} files: FileList from the input html element\n   */\n  public onSelectFile(files: FileList) {\n    this.files = [];\n    for (let idx = 0; idx  {\n          file.status = 'ERROR';\n          file.icon = 'close';\n          return throwError(error);\n        })\n      ).subscribe((event: HttpEvent) => {\n      this.handleFileSend(event, file);\n    });\n    }\n  }\n\n  /**\n   * @description\n   * Processes the HttpEvents of send files and updates the progress and\n   * status accordingly.\n   * @param {HttpEvent} event: The HttpEvent to process\n   * @param {IFile} file: the corresponding file\n   */\n  private handleFileSend(event: HttpEvent, file: IFile) {\n    if (file.status !== 'CANCELLED') {\n      switch (event.type) {\n      case HttpEventType.Sent:\n        file.status = 'REQUEST_SEND';\n        break;\n      case HttpEventType.ResponseHeader:\n        file.status = 'RESPONSE_RECEIVED';\n        break;\n      case HttpEventType.UploadProgress:\n        // update progress\n        file.progress = Math.round(event.loaded / event.total * 100);\n        this.progressMonitor.progress += file.progress;\n        file.status = 'UPLOADING';\n        file.icon = 'cloud_upload';\n        break;\n      case HttpEventType.Response:\n        if (event.status === 207) {\n          const id = event.body.id;\n          const fid = event.body.fid;\n          const dialogData: DialogData = {\n            id,\n            fid\n          };\n          this.openExistsDialog(dialogData);\n        } else {\n          file.status = 'SUCCESS';\n          file.icon = 'cloud_done';\n          this.progressMonitor.finished++;\n        }\n        break;\n    }\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      cloud_upload\n      {{'DOCUMENTS.DRAG_DROP_DIALOG' | translate}}\n      {{'OR' | translate}}\n      \n      {{'DOCUMENTS.BROWSE_FOR_FILES' | translate}}\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./file-upload.component.scss\n                \n                \nmat-list {\n    max-height: 40em;\n    overflow: auto;\n    width: 100%;\n}\n\n.dropzone {\n  display: flex;\n  align-content: center;\n  justify-items: center;\n  width: 100%;\n  background-color: rgba(201, 201, 220, 0.36);\n  border-radius: 4px;\n  transition: background-color 0.2s linear;\n  text-align: center;\n\n  .title {\n    width: 100%;\n    margin: 20px;\n  }\n\n  input {\n    opacity: 0;\n    position: absolute;\n    z-index: 2;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n  }\n\n}\n\n.fileover {\n  background-color: rgba(63, 81, 181, 0.36);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            cloud_upload      {{\\'DOCUMENTS.DRAG_DROP_DIALOG\\' | translate}}      {{\\'OR\\' | translate}}            {{\\'DOCUMENTS.BROWSE_FOR_FILES\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutomatedTaggingParametersDialog', 'selector': 'app-automated-tagging-parameters-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentOverviewComponent', 'selector': 'app-document-overview'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileExistsDialogComponent', 'selector': 'app-file-exists-dialog'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FileUploadDialogComponent', 'selector': 'app-file-upload-dialog'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'KWMNameDialog', 'selector': 'input-dialog'},{'name': 'TaggingComponent', 'selector': 'app-tagging'},{'name': 'TaggingDialogComponent', 'selector': 'app-tagging-dialog'}];\n    var DIRECTIVES = [{'name': 'DragdropDirective', 'selector': '[appDragdrop]'},{'name': 'NaturalNumbersOnlyDirective', 'selector': '[appNaturalNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileUploadDialogComponent.html":{"url":"components/FileUploadDialogComponent.html","title":"component - FileUploadDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FileUploadDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/dialogs/file-upload.dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-upload-dialog\n            \n\n\n\n\n            \n                templateUrl\n                file-upload.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancelAll\n                            \n                            \n                                    Public\n                                cancelUpload\n                            \n                            \n                                onDialogButtonClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, translate: TranslateService, utils: Utils, data: UploadDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/dialogs/file-upload.dialog.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utils\n                                                  \n                                                        \n                                                                        Utils\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        UploadDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancelAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelAll()\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/file-upload.dialog.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancelUpload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelUpload(file: IFile)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/file-upload.dialog.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDialogButtonClick\n                        \n                        \n                    \n                \n            \n            \n                \nonDialogButtonClick(response: string)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/file-upload.dialog.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UploadDialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/file-upload.dialog.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/file-upload.dialog.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/file-upload.dialog.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {IFile} from '../app/models/IFile.model';\nimport {Utils} from '../app/services/utils.service';\nimport {of} from 'rxjs';\n\nexport interface UploadDialogData {\n  files: Array;\n  progressMonitor: {\n    progress: number;\n    finished: number;\n  };\n}\n\n@Component({\n  selector: 'app-file-upload-dialog',\n  templateUrl: 'file-upload.dialog.html',\n})\nexport class FileUploadDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public translate: TranslateService,\n    private utils: Utils,\n    @Inject(MAT_DIALOG_DATA) public data: UploadDialogData) {}\n\n  onDialogButtonClick(response: string): void {\n    console.log(response);\n  }\n\n  public cancelUpload(file: IFile) {\n    file.progress = 100;\n    file.status = 'CANCELLED';\n    file.icon = 'cloud_done';\n  }\n\n  public cancelAll() {\n    for (const file of this.data.files) {\n      this.cancelUpload(file);\n    }\n  }\n}\n\n    \n\n    \n        {{'UPLOADING' | translate}}\n\n  \n    {{ 'PROGRESS' | translate}}\n    \n    {{data.progressMonitor.finished}} / {{data.files.length}}\n  \n  {{'CANCEL_ALL' | translate }}\n  \n    \n      {{file.icon}}\n       {{file.file.name}} \n       {{file.status | translate}} \n      \n      {{'CANCEL' | translate}}\n    \n  \n\n\n\n  {{'CLOSE' | translate}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\\'UPLOADING\\' | translate}}      {{ \\'PROGRESS\\' | translate}}        {{data.progressMonitor.finished}} / {{data.files.length}}    {{\\'CANCEL_ALL\\' | translate }}            {{file.icon}}       {{file.file.name}}        {{file.status | translate}}             {{\\'CANCEL\\' | translate}}        {{\\'CLOSE\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutomatedTaggingParametersDialog', 'selector': 'app-automated-tagging-parameters-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentOverviewComponent', 'selector': 'app-document-overview'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileExistsDialogComponent', 'selector': 'app-file-exists-dialog'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FileUploadDialogComponent', 'selector': 'app-file-upload-dialog'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'KWMNameDialog', 'selector': 'input-dialog'},{'name': 'TaggingComponent', 'selector': 'app-tagging'},{'name': 'TaggingDialogComponent', 'selector': 'app-tagging-dialog'}];\n    var DIRECTIVES = [{'name': 'DragdropDirective', 'selector': '[appDragdrop]'},{'name': 'NaturalNumbersOnlyDirective', 'selector': '[appNaturalNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'FileUploadDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDocument.html":{"url":"interfaces/IDocument.html","title":"interface - IDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/IDocument.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creation_date\n                                \n                                \n                                        id\n                                \n                                \n                                        keywords\n                                \n                                \n                                        language\n                                \n                                \n                                        last_modified\n                                \n                                \n                                        size\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                    \n                                \n                                \n                                    \n                                        creation_date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keywords\n                                    \n                                \n                                \n                                    \n                                        keywords:         IKeyword[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IKeyword[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_modified\n                                    \n                                \n                                \n                                    \n                                        last_modified:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IKeyword } from './IKeyword.model';\n\nexport interface IDocument {\n  content: string;\n  creation_date: Date;\n  last_modified: Date;\n  id: string;\n  language: string;\n  size: number;\n  keywords: IKeyword[];\n  title: string;\n  type: string;\n}\n\nexport interface IResponse {\n  docs: object;\n  num_per_page: number;\n  page: number;\n  sort_field: string;\n  sort_order: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFile.html":{"url":"interfaces/IFile.html","title":"interface - IFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/IFile.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        fid\n                                \n                                \n                                        file\n                                \n                                \n                                        icon\n                                \n                                \n                                        progress\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fid\n                                    \n                                \n                                \n                                    \n                                        fid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFile {\n  file: File;\n  status: string;\n  progress: number;\n  icon: string;\n  fid: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeyWordModel.html":{"url":"interfaces/IKeyWordModel.html","title":"interface - IKeyWordModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeyWordModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/IKeyWordModel.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        hierarchy\n                                \n                                \n                                        id\n                                \n                                \n                                        keywords\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hierarchy\n                                    \n                                \n                                \n                                    \n                                        hierarchy:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keywords\n                                    \n                                \n                                \n                                    \n                                        keywords:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IKeyWordModel {\n  id: string;\n  hierarchy;\n  keywords: string[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeyword.html":{"url":"interfaces/IKeyword.html","title":"interface - IKeyword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeyword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/IKeyword.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IKeyword {\n    value: string;\n    type: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IKeywordListEntry.html":{"url":"interfaces/IKeywordListEntry.html","title":"interface - IKeywordListEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IKeywordListEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/IKeywordListEntry.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        kwm\n                                \n                                \n                                        parents\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kwm\n                                    \n                                \n                                \n                                    \n                                        kwm:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parents\n                                    \n                                \n                                \n                                    \n                                        parents:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IKeywordListEntry {\n  id: string;\n  kwm: string;\n  parents: string[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResponse.html":{"url":"interfaces/IResponse.html","title":"interface - IResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/IDocument.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        docs\n                                \n                                \n                                        num_per_page\n                                \n                                \n                                        page\n                                \n                                \n                                        sort_field\n                                \n                                \n                                        sort_order\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        docs\n                                    \n                                \n                                \n                                    \n                                        docs:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        num_per_page\n                                    \n                                \n                                \n                                    \n                                        num_per_page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort_field\n                                    \n                                \n                                \n                                    \n                                        sort_field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort_order\n                                    \n                                \n                                \n                                    \n                                        sort_order:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IKeyword } from './IKeyword.model';\n\nexport interface IDocument {\n  content: string;\n  creation_date: Date;\n  last_modified: Date;\n  id: string;\n  language: string;\n  size: number;\n  keywords: IKeyword[];\n  title: string;\n  type: string;\n}\n\nexport interface IResponse {\n  docs: object;\n  num_per_page: number;\n  page: number;\n  sort_field: string;\n  sort_order: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaggingMethod.html":{"url":"interfaces/ITaggingMethod.html","title":"interface - ITaggingMethod","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITaggingMethod\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ITaggingMethod.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ITaggingMethod {\n  name: string;\n  type: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaggingRequest.html":{"url":"interfaces/ITaggingRequest.html","title":"interface - ITaggingRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITaggingRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ITaggingRequest.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        documents\n                                \n                                \n                                        jobId\n                                \n                                \n                                        keywordModel\n                                \n                                \n                                        options\n                                \n                                \n                                        taggingMethod\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        documents\n                                    \n                                \n                                \n                                    \n                                        documents:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jobId\n                                    \n                                \n                                \n                                    \n                                        jobId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keywordModel\n                                    \n                                \n                                \n                                    \n                                        keywordModel:         IKeyWordModel | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IKeyWordModel | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        taggingMethod\n                                    \n                                \n                                \n                                    \n                                        taggingMethod:         ITaggingMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ITaggingMethod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ITaggingMethod} from './ITaggingMethod';\nimport {IKeyWordModel} from './IKeyWordModel.model';\nimport {IDocument} from './IDocument.model';\n\nexport interface ITaggingRequest {\n  taggingMethod: ITaggingMethod;\n  keywordModel: IKeyWordModel | undefined;\n  documents: Array;\n  jobId: string;\n  options: { [key: string]: any; };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ItemFlatNode.html":{"url":"classes/ItemFlatNode.html","title":"class - ItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/keywords/keywords.component.ts\n        \n\n            \n                Description\n            \n            \n                Flatitem node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                            \n                                nodeType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Injectable, Inject, ViewChild, ElementRef } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogClose } from '@angular/material/dialog';\nimport { ApiService } from '../services/api.service';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { throwError } from 'rxjs';\n\nimport { KWMNameDialog } from '../../dialogs/keyword-input.dialog.component'\nimport { IKeyWordModel } from '../models/IKeyWordModel.model';\n\n\n/**\n * Type of the item of a node\n */\nconst NodeType = {\n  DIMENSION : 'DIMENSION',\n  KEYWORD : 'KEYWORD',\n};\n/**\n * Node for item\n */\nexport class ItemNode {\n  children: ItemNode[];\n  item: string;\n  nodeType: string;\n}\n\n/** Flatitem node with expandable and level information */\nexport class ItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n  nodeType: string;\n}\n\n/**\n * The Json object for list data.\n */\nconst TREE_DATA: any = [];\n\n\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n\n  get data(): ItemNode[] { return this.dataChange.value; }\n\n  constructor(private api: ApiService) {\n    this.initialize();\n  }\n  dataChange = new BehaviorSubject([]);\n  static data(): any {\n    throw new Error('Method not implemented.');\n  }\n\n  initialize() {\n    // Build the tree nodes from Json object. The result is a list of `ItemNode` with nested\n    //    file node as children.\n    this.api.getKeywordModels()\n    .subscribe((data: Array) => {\n      for (let i = 0 ; i ((accumulator, key) => {\n      const value = obj[key];\n      const node = new ItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  /** Adds a root node */\n  insertRoot(name: string, nodeType: string): ItemNode {\n    const newItem = { item: name, nodeType, children: []} as ItemNode;\n    this.data[0] = newItem;\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  /** Add an item to list */\n  insertItem(parent: ItemNode, name: string, nodeType: string): ItemNode {\n    if (!parent.children) {\n      parent.children = [];\n    }\n    const newItem = { item: name, nodeType } as ItemNode;\n    parent.children.push(newItem);\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemAbove(node: ItemNode, name: string, nodeType: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name, nodeType } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node), 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemBelow(node: ItemNode, name: string, nodeType: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name, nodeType } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node) + 1, 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  getParentFromNodes(node: ItemNode): ItemNode {\n    for (let i = 0; i  0) {\n      for (let i = 0; i  0) {\n          const parent = this.getParent(child, node);\n          if (parent != null) {\n            return parent;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  updateItem(node: ItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n\n  deleteItem(node: ItemNode) {\n    this.deleteNode(this.data, node);\n    this.dataChange.next(this.data);\n  }\n\n  copyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if (!from) {\n      newItem = this.insertItem(to, listItem.item, listItem.nodeType);\n    } else {\n      newItem = this.insertItem(to, from.item, from.nodeType);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if (!from) {\n      newItem = this.insertItemAbove(to, listItem.item, listItem.nodeType);\n    } else {\n      newItem = this.insertItemAbove(to, from.item, from.nodeType);\n    }\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n\n    let newItem;\n    if (!from) {\n      newItem = this.insertItemBelow(to, listItem.item, listItem.nodeType);\n    } else {\n      newItem = this.insertItemBelow(to, from.item, from.nodeType);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  deleteNode(nodes: ItemNode[], nodeToDelete: ItemNode) {\n    const index = nodes.indexOf(nodeToDelete, 0);\n    if (index > -1) {\n      nodes.splice(index, 1);\n    } else {\n      nodes.forEach(node => {\n        if (node.children && node.children.length > 0) {\n          this.deleteNode(node.children, nodeToDelete);\n        }\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Returns the start node and all of its descendants\n  * @param {ItemNode} start node\n  * @returns {List[ItemNode]} List of the start node and all descendants\n  */\n  getDescendants(node: ItemNode) {\n    const ret = [];\n    let toCheck = [node];\n    while (toCheck.length !== 0) {\n      const cur = toCheck.pop();\n      ret.push(cur);\n      if (cur.children) {\n        toCheck = toCheck.concat(cur.children);\n      }\n    }\n    return ret;\n  }\n}\n\n@Component({\n  selector: 'app-keywords',\n  templateUrl: './keywords.component.html',\n  styleUrls: ['./keywords.component.scss'],\n  providers: [ChecklistDatabase]\n})\nexport class KeywordsComponent implements OnInit {\n  NodeType = NodeType; // add enum as variable so it is usable in html file\n\n  /** contains the input string for the new dimension input field */\n  newDimension: string;\n\n  /** contains the input string for the new keyword input field */\n  newKeyword: string;\n\n  /** array of the uncategorized dimensions */\n  uncatDimensions = [];\n\n  /** array of the uncategorized keywords */\n  uncatKeywords = [];\n\n  /** array of the keywordModels */\n  keywordModels: Array = [];\n\n  isNewItem = false;\n  newItem: any;\n\n  /**\n   * Currently selected tree data.\n   */\n  selectedKwmIdx = undefined;\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map();\n\n  /** A selected parent node to be inserted */\n  selectedParent: ItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl;\n\n  treeFlattener: MatTreeFlattener;\n\n  dataSource: MatTreeFlatDataSource;\n\n  nodeStyles = {\n    DIMENSION: {'color': 'darkblue', 'text-decoration': 'underline'},\n    KEYWORD: {'color': 'black'}\n  }\n\n  /* Drag and drop */\n  dragNode: any;\n  dragNodeExpandOverWaitTimeMs = 300;\n  dragNodeExpandOverNode: any;\n  dragNodeExpandOverTime: number;\n  dragNodeExpandOverArea: string;\n  @ViewChild('emptyItem') emptyItem: ElementRef;\n\n  constructor(private api: ApiService,\n              private snackBar: MatSnackBar,\n              private database: ChecklistDatabase,\n              public dialog: MatDialog) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = [];\n      this.dataSource.data = data;\n\n      if (this.selectedKwmIdx !== undefined) {\n        this.keywordModels[this.selectedKwmIdx].hierarchy = this.dataSource.data;\n        this.api.addKeywordModel(this.keywordModels[this.selectedKwmIdx]).subscribe(res => {\n\n        });\n      }\n    });\n   }\n\n  getLevel = (node: ItemFlatNode) => node.level;\n\n  isExpandable = (node: ItemFlatNode) => node.expandable;\n\n  getChildren = (node: ItemNode): ItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: ItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: ItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: ItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n      ? existingNode\n      : new ItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = (node.children && node.children.length > 0);\n    flatNode.nodeType = node.nodeType;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  ngOnInit(): void {\n    this.api.getKeywordModels()\n    .subscribe((data: []) => {\n      this.keywordModels = data;\n    });\n    this.api.getUncategorizedDimensions()\n      .subscribe((data: []) => {\n        this.uncatDimensions = data;\n      });\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.uncatKeywords = data;\n      });\n  }\n\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized dimension\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onDimEnter() {\n    const dimFormatted = this.newDimension.trim();\n    if (dimFormatted !== '') {\n      if (!this.isDuplicate(this.uncatDimensions, dimFormatted)) {\n        this.api.addUncategorizedDimension(dimFormatted)\n          .subscribe(res => {\n            this.uncatDimensions.push(dimFormatted);\n            this.snackBar.open(`${dimFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${dimFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newDimension = '';\n  }\n\n  private error(msg: string) {\n    this.snackBar.open(msg, '', { duration: 3000 });\n  }\n\n  /**\n  * @description\n  * Checks the correctness of a keyword.\n  * @param keyword to be checked\n  * @returns correctness of the keyword\n  */\n  private checkKeyword(kw: string) : boolean {\n    const re = new RegExp(\"^[a-zA-ZäöüÄÖÜ]+$\");\n    if(!re.test(kw)) {\n      this.error(`The keyword ${kw} contains invalid characters`)\n      return false;\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized keyword\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onKeyEnter() {\n    const keyFormatted = this.newKeyword.trim();\n    if (keyFormatted !== '') {\n      if(!this.checkKeyword(keyFormatted)) {\n        return;\n      }\n      if (!this.isDuplicate(this.uncatKeywords, keyFormatted)) {\n        this.api.addUncategorizedKeyword(keyFormatted)\n          .subscribe(res => {\n            this.uncatKeywords.push(keyFormatted);\n            this.snackBar.open(`${keyFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${keyFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newKeyword = '';\n  }\n\n  /**\n  * @description\n  * Checks if a value appears in an array\n  * @param array to be checked\n  * @param value to be checked\n  * @returns true if the value was found, false otherwise\n  */\n  private isDuplicate(arr, value) {\n    const index = arr.findIndex((elem) => elem === value);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the dimension is\n  * removed from the list\n  * @param {string} dimension to be removed\n  */\n  public deleteDimension(dimension: string) {\n    const index = this.uncatDimensions.indexOf(dimension);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedDimension(dimension)\n      .subscribe(res => {\n        this.uncatDimensions.splice(index, 1);\n        this.snackBar.open(`${dimension} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the keyword is\n  * removed from the list\n  * @param {string} keyword to be removed\n  */\n  public deleteKeyword(keyword: string) {\n    const index = this.uncatKeywords.indexOf(keyword);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedKeyword(keyword)\n      .subscribe(res => {\n        this.uncatKeywords.splice(index, 1);\n        this.snackBar.open(`${keyword} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Opens a dialog for inputing a name. If the name is valid a new empty\n  * keyword model is created.\n  * @param {IKeyWordModel} kwm to remove\n  */\n  public newKeywordModel() {\n    const dialogRef = this.dialog.open(KWMNameDialog, {\n      width: '300px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      const name = result;\n\n      if (name === '' || name === undefined) {\n        // invalid name\n        this.snackBar.open(`invalid name`, '', { duration: 3000 });\n      } else if (this.keywordModels.filter(function(kwm){ return kwm.id === name; }).length !== 0) {\n        // duplicate\n        this.snackBar.open(`${name} already exists`, '', { duration: 3000 });\n      } else {\n        // add new kwm\n        const newKwm: IKeyWordModel = {id: name, hierarchy: [], keywords: []};\n        this.api.addKeywordModel(newKwm).subscribe(res => {\n          const newIdx = this.keywordModels.length;\n          this.keywordModels[newIdx] = newKwm;\n          TREE_DATA[newIdx] = newKwm.hierarchy;\n          this.snackBar.open(`added new kwm with name: ${name}`, '', { duration: 3000 });\n        });\n\n      }\n    });\n  }\n\n  /**\n  * @description\n  * Exports the selected keyword model as a json and opens a save file dialog.\n  */\n  public exportKeywordModel() {\n    const selectedKwm: IKeyWordModel = this.keywordModels[this.selectedKwmIdx];\n    let kwmCopy = Object.assign({}, selectedKwm);\n    delete kwmCopy.keywords //delete unnecessary information\n    var blob = new Blob([JSON.stringify(kwmCopy, null, 2) ], {type: 'text/plain'});\n\n    //open dialog\n    let link = document.createElement('a');\n    link.download = selectedKwm.id + \".kwm\";\n    link.href = window.URL.createObjectURL(blob);\n    link.dataset.downloadurl = ['text/json', link.download, link.href].join(':');\n    link.click()\n  }\n\n\n  /**\n  * @description\n  * Checks the correctness of a IKeyWordModel generated from an input file\n  * in the importKeywordModel function. The keywords from the hierarchy are\n  * extracted and added to the keywords array.\n  * @param {IKeyWordModel} kwm to check\n  * @returns {boolean} correctness\n  */\n  private checkCorrectness(kwm: IKeyWordModel) : boolean{\n    if(!kwm.hasOwnProperty(\"id\")) {\n      this.error(\"The imported kwm has no id\");\n      return false;\n    }\n    if(!kwm.hasOwnProperty(\"hierarchy\")) {\n      this.error(\"The imported kwm has no hierarchy\");\n      return false;\n    }\n    kwm[\"keywords\"] = [];\n    let toCheck = kwm.hierarchy.slice() //deep copy\n    toCheck.forEach(node => node[\"shouldBe\"] = NodeType.DIMENSION);\n    while(toCheck.length !== 0) {\n      let cur = toCheck.pop();\n      if(!cur.hasOwnProperty(\"item\")) {\n        this.error(\"The imported kwm contains a node with no item\");\n        return false;\n      }\n      if(!cur.hasOwnProperty(\"nodeType\")) {\n        this.error(`The node ${cur.item} has no nodeType`);\n        return false;\n      }\n      if(cur.nodeType !== cur.shouldBe) {\n        this.error(`The node ${cur.item} has the wrong type`);\n        return false;\n      }\n      if(cur.nodeType === NodeType.KEYWORD) {\n        if(!this.checkKeyword(cur.item)) {\n          return false;\n        }\n        if(kwm.keywords.includes(cur.item)) {\n          this.error(`The keyword ${cur.item} is mentioned twice in the keyword model`);\n          return false;\n        }\n        kwm.keywords.push(cur.item); //add keyword to keywords array\n      }\n      delete cur.shouldBe //remove temporary variable again\n      if(cur.hasOwnProperty(\"children\")) {\n        cur.children.forEach(child => {\n          child[\"shouldBe\"] = cur.nodeType === NodeType.DIMENSION ? NodeType.KEYWORD : NodeType.DIMENSION;\n          toCheck.push(child);\n        });\n      }\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Reads the given file and creates a IKeyWordModel from it. If the hierarchy\n  * is correct and no model with the same name exists the model is added to\n  * the database\n  * @param {FileList} single file containing a kwm\n  */\n  public importKeywordModel(files: FileList) {\n    const file: File = files.item(0);\n    let fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      const newKwm: IKeyWordModel = JSON.parse(fileReader.result as string)\n      const isCorrect = this.checkCorrectness(newKwm);\n      if(isCorrect) {\n        if(this.keywordModels.filter(function(kwm){ return kwm.id === newKwm.id; }).length === 0) {\n          this.api.addKeywordModel(newKwm).subscribe(res => {\n            const newIdx = this.keywordModels.length;\n            this.keywordModels[newIdx] = newKwm;\n            TREE_DATA[newIdx] = newKwm.hierarchy;\n            this.snackBar.open(`added new kwm with name: ${newKwm.id}`, '', { duration: 3000 });\n          });\n        } else {\n          this.snackBar.open(`A kwm with the name ${newKwm.id} already exists`, '', { duration: 3000 });\n        }\n      }\n    }\n    fileReader.readAsText(file);\n  }\n\n  /**\n  * @description\n  * Deletes an keyword model.\n  * @param {IKeyWordModel} kwm to remove\n  */\n  public removeKeywordModel(keywordModel: IKeyWordModel) {\n    this.api.removeKeywordModel(keywordModel).subscribe(res => {\n      const removeIdx = this.selectedKwmIdx;\n      this.keywordModels.splice(removeIdx, 1);\n      TREE_DATA.splice(removeIdx, 1);\n      this.selectedKwmIdx = undefined;\n      this.snackBar.open(`removed kwm with name: ${keywordModel.id}`, '', { duration: 3000 });\n\n      this.database.dataChange.next([]);\n    });\n  }\n\n  /**\n  * @description\n  * Deletes an item and all it descendants. Adds the removed keywords/dimensions\n  * to their respective lists if necessary.\n  * @param {ItemFlatNode} node to delete\n  */\n  public deleteFromHierarchy(node: ItemFlatNode) {\n    const descendants = this.database.getDescendants(this.flatNodeMap.get(node));\n    // re-add to uncatgegorized dimensions/keywords\n    descendants.forEach(node => {\n      if (node.nodeType === NodeType.DIMENSION) {\n        if (!this.isDuplicate(this.uncatDimensions, node.item)) {\n          this.uncatDimensions.push(node.item);\n          this.api.addUncategorizedDimension(node.item)\n            .subscribe(res => {});\n        }\n      } else if (node.nodeType === NodeType.KEYWORD) {\n        if (!this.isDuplicate(this.uncatKeywords, node.item)) {\n          this.uncatKeywords.push(node.item);\n          this.api.addUncategorizedKeyword(node.item)\n            .subscribe(res => {});\n        }\n        const index = this.keywordModels[this.selectedKwmIdx].keywords.indexOf(node.item, 0);\n        this.keywordModels[this.selectedKwmIdx].keywords.splice(index, 1);\n      } else {\n        console.error('undefined type');\n      }\n    });\n    this.removeItem(node);\n\n  }\n\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n\n  removeItem(flatNode: ItemFlatNode) {\n    const node = this.flatNodeMap.get(flatNode);\n    this.database.deleteItem(node);\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: ItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode, '', node.nodeType);\n    this.treeControl.expand(node);\n  }\n\n  /**\n   * Handles dragOver of the mat-grid-tile\n   * @param event\n   */\n  dragOverEmptyTree(event) {\n    event.preventDefault();\n  }\n\n  /**\n   * handles dropping an item over the mat-grid-tile if the tree is empty\n   * @param event\n   */\n  dropOverEmptyTree(event) {\n    if (this.selectedKwmIdx !== undefined) {\n      if (this.keywordModels[this.selectedKwmIdx].hierarchy.length === 0) {\n        if (this.newItem.nodeType === NodeType.DIMENSION) {\n          this.database.insertRoot(this.newItem.item, this.newItem.nodeType);\n        } else {\n          this.snackBar.open(`Root node must be a dimension`, '', { duration: 3000 });\n        }\n      }\n    }\n  }\n\n  /**\n   * Handles the start of the dragging of an item\n   * @param event\n   * @param node\n   * @param newItem: indicates if item gets moved from outside the tree\n   * @param type: NodeType of the item\n   */\n  handleDragStart(event, node, newItem, type?) {\n    if (newItem) {\n      this.dragNode = new ItemFlatNode;\n      this.dragNode.item = node;\n      this.dragNode.nodeType = type;\n      this.isNewItem = true;\n      this.newItem = this.dragNode;\n    } else {\n      this.dragNode = node;\n    }\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\n    event.dataTransfer.setData('foo', 'bar');\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\n    this.treeControl.collapse(node);\n  }\n\n  /**\n   * Handles the dragover of an item over the tree.\n   * @param event\n   * @param node\n   * @param newItem: indicates if item gets moved from outside the tree\n   * @param type: NodeType of the item\n   */\n  handleDragOver(event, node) {\n    event.preventDefault();\n\n    // Handle node expand\n    if (node === this.dragNodeExpandOverNode) {\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\n          this.treeControl.expand(node);\n        }\n      }\n    } else {\n      this.dragNodeExpandOverNode = node;\n      this.dragNodeExpandOverTime = new Date().getTime();\n    }\n\n    // Handle drag area\n    const percentageX = event.offsetX / event.target.clientWidth;\n    const percentageY = event.offsetY / event.target.clientHeight;\n    if (percentageY  0.75) {\n      this.dragNodeExpandOverArea = 'below';\n    } else {\n      this.dragNodeExpandOverArea = 'center';\n    }\n  }\n\n  /**\n   * Handles dropping an item over the another node.\n   * Before moving the node, the correctness of the resulting tree is ensured.\n   * @param event\n   * @param node that the dragNode is dropped over\n   */\n  handleDrop(event, node) {\n    if (node !== this.dragNode) {\n      let newItem: ItemNode = null;\n      console.log('dragNode', this.flatNodeMap.get(this.dragNode), 'node', this.flatNodeMap.get(node), 'newItem', this.newItem);\n      if (this.newItem !== null\n         && this.newItem.nodeType === NodeType.KEYWORD\n         && this.keywordModels[this.selectedKwmIdx].keywords.includes(this.newItem.item)) {\n        this.snackBar.open(`${this.newItem.item} is already in this keyword model`, '', { duration: 3000 });\n      } else {\n        // dragNode is used if the item is moved within the tree, this.newItem otherwise\n        const nodeToDrop = this.dragNode === undefined ? this.newItem : this.dragNode;\n        switch (this.dragNodeExpandOverArea) {\n          case 'above':\n            if (nodeToDrop.nodeType === node.nodeType) { // must be same node type as sibling\n              newItem = this.database.copyPasteItemAbove(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n            } else {\n              this.snackBar.open(`${nodeToDrop.item} must be a ${node.nodeType} to be moved here`, '', { duration: 3000 });\n            }\n            break;\n          case 'below':\n            if (nodeToDrop.nodeType === node.nodeType) {// must be same node type as sibling\n              newItem = this.database.copyPasteItemBelow(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n            } else {\n              this.snackBar.open(`${nodeToDrop.item} must be a ${node.nodeType} to be moved here`, '', { duration: 3000 });\n            }\n            break;\n          case 'center':\n            if (nodeToDrop.nodeType !== node.nodeType) {// must be different node type as parent\n              newItem = this.database.copyPasteItem(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n            } else {\n              this.snackBar.open(`A ${nodeToDrop.nodeType} can not be added to a  ${node.nodeType}`, '', { duration: 3000 });\n            }\n            break;\n        }\n      }\n      if (newItem !== null) {\n        if (newItem.nodeType === NodeType.KEYWORD) { // add to keywords list\n          this.keywordModels[this.selectedKwmIdx].keywords.push(newItem.item);\n        }\n        this.database.deleteItem(this.flatNodeMap.get(this.dragNode)); // remove old node\n        this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\n      }\n    }\n    // cleanup\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n  }\n\n  handleDragEnd(event) {\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n    this.newItem = null;\n    this.isNewItem = false;\n  }\n\n  /**\n   * Gets called when another kwm gets selected and updates the\n   * tree view accordingly.\n   * @param event\n   */\n  selectionChange(event){\n    this.selectedKwmIdx = event[0].value;\n    this.database.dataChange.next(TREE_DATA[this.selectedKwmIdx]);\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ItemNode.html":{"url":"classes/ItemNode.html","title":"class - ItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/keywords/keywords.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                            \n                                nodeType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nodeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Injectable, Inject, ViewChild, ElementRef } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatDialogClose } from '@angular/material/dialog';\nimport { ApiService } from '../services/api.service';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\nimport { BehaviorSubject } from 'rxjs';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { throwError } from 'rxjs';\n\nimport { KWMNameDialog } from '../../dialogs/keyword-input.dialog.component'\nimport { IKeyWordModel } from '../models/IKeyWordModel.model';\n\n\n/**\n * Type of the item of a node\n */\nconst NodeType = {\n  DIMENSION : 'DIMENSION',\n  KEYWORD : 'KEYWORD',\n};\n/**\n * Node for item\n */\nexport class ItemNode {\n  children: ItemNode[];\n  item: string;\n  nodeType: string;\n}\n\n/** Flatitem node with expandable and level information */\nexport class ItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n  nodeType: string;\n}\n\n/**\n * The Json object for list data.\n */\nconst TREE_DATA: any = [];\n\n\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n\n  get data(): ItemNode[] { return this.dataChange.value; }\n\n  constructor(private api: ApiService) {\n    this.initialize();\n  }\n  dataChange = new BehaviorSubject([]);\n  static data(): any {\n    throw new Error('Method not implemented.');\n  }\n\n  initialize() {\n    // Build the tree nodes from Json object. The result is a list of `ItemNode` with nested\n    //    file node as children.\n    this.api.getKeywordModels()\n    .subscribe((data: Array) => {\n      for (let i = 0 ; i ((accumulator, key) => {\n      const value = obj[key];\n      const node = new ItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  /** Adds a root node */\n  insertRoot(name: string, nodeType: string): ItemNode {\n    const newItem = { item: name, nodeType, children: []} as ItemNode;\n    this.data[0] = newItem;\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  /** Add an item to list */\n  insertItem(parent: ItemNode, name: string, nodeType: string): ItemNode {\n    if (!parent.children) {\n      parent.children = [];\n    }\n    const newItem = { item: name, nodeType } as ItemNode;\n    parent.children.push(newItem);\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemAbove(node: ItemNode, name: string, nodeType: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name, nodeType } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node), 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemBelow(node: ItemNode, name: string, nodeType: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name, nodeType } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node) + 1, 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  getParentFromNodes(node: ItemNode): ItemNode {\n    for (let i = 0; i  0) {\n      for (let i = 0; i  0) {\n          const parent = this.getParent(child, node);\n          if (parent != null) {\n            return parent;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  updateItem(node: ItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n\n  deleteItem(node: ItemNode) {\n    this.deleteNode(this.data, node);\n    this.dataChange.next(this.data);\n  }\n\n  copyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if (!from) {\n      newItem = this.insertItem(to, listItem.item, listItem.nodeType);\n    } else {\n      newItem = this.insertItem(to, from.item, from.nodeType);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if (!from) {\n      newItem = this.insertItemAbove(to, listItem.item, listItem.nodeType);\n    } else {\n      newItem = this.insertItemAbove(to, from.item, from.nodeType);\n    }\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n\n    let newItem;\n    if (!from) {\n      newItem = this.insertItemBelow(to, listItem.item, listItem.nodeType);\n    } else {\n      newItem = this.insertItemBelow(to, from.item, from.nodeType);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  deleteNode(nodes: ItemNode[], nodeToDelete: ItemNode) {\n    const index = nodes.indexOf(nodeToDelete, 0);\n    if (index > -1) {\n      nodes.splice(index, 1);\n    } else {\n      nodes.forEach(node => {\n        if (node.children && node.children.length > 0) {\n          this.deleteNode(node.children, nodeToDelete);\n        }\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Returns the start node and all of its descendants\n  * @param {ItemNode} start node\n  * @returns {List[ItemNode]} List of the start node and all descendants\n  */\n  getDescendants(node: ItemNode) {\n    const ret = [];\n    let toCheck = [node];\n    while (toCheck.length !== 0) {\n      const cur = toCheck.pop();\n      ret.push(cur);\n      if (cur.children) {\n        toCheck = toCheck.concat(cur.children);\n      }\n    }\n    return ret;\n  }\n}\n\n@Component({\n  selector: 'app-keywords',\n  templateUrl: './keywords.component.html',\n  styleUrls: ['./keywords.component.scss'],\n  providers: [ChecklistDatabase]\n})\nexport class KeywordsComponent implements OnInit {\n  NodeType = NodeType; // add enum as variable so it is usable in html file\n\n  /** contains the input string for the new dimension input field */\n  newDimension: string;\n\n  /** contains the input string for the new keyword input field */\n  newKeyword: string;\n\n  /** array of the uncategorized dimensions */\n  uncatDimensions = [];\n\n  /** array of the uncategorized keywords */\n  uncatKeywords = [];\n\n  /** array of the keywordModels */\n  keywordModels: Array = [];\n\n  isNewItem = false;\n  newItem: any;\n\n  /**\n   * Currently selected tree data.\n   */\n  selectedKwmIdx = undefined;\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map();\n\n  /** A selected parent node to be inserted */\n  selectedParent: ItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl;\n\n  treeFlattener: MatTreeFlattener;\n\n  dataSource: MatTreeFlatDataSource;\n\n  nodeStyles = {\n    DIMENSION: {'color': 'darkblue', 'text-decoration': 'underline'},\n    KEYWORD: {'color': 'black'}\n  }\n\n  /* Drag and drop */\n  dragNode: any;\n  dragNodeExpandOverWaitTimeMs = 300;\n  dragNodeExpandOverNode: any;\n  dragNodeExpandOverTime: number;\n  dragNodeExpandOverArea: string;\n  @ViewChild('emptyItem') emptyItem: ElementRef;\n\n  constructor(private api: ApiService,\n              private snackBar: MatSnackBar,\n              private database: ChecklistDatabase,\n              public dialog: MatDialog) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = [];\n      this.dataSource.data = data;\n\n      if (this.selectedKwmIdx !== undefined) {\n        this.keywordModels[this.selectedKwmIdx].hierarchy = this.dataSource.data;\n        this.api.addKeywordModel(this.keywordModels[this.selectedKwmIdx]).subscribe(res => {\n\n        });\n      }\n    });\n   }\n\n  getLevel = (node: ItemFlatNode) => node.level;\n\n  isExpandable = (node: ItemFlatNode) => node.expandable;\n\n  getChildren = (node: ItemNode): ItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: ItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: ItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: ItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n      ? existingNode\n      : new ItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = (node.children && node.children.length > 0);\n    flatNode.nodeType = node.nodeType;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  ngOnInit(): void {\n    this.api.getKeywordModels()\n    .subscribe((data: []) => {\n      this.keywordModels = data;\n    });\n    this.api.getUncategorizedDimensions()\n      .subscribe((data: []) => {\n        this.uncatDimensions = data;\n      });\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.uncatKeywords = data;\n      });\n  }\n\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized dimension\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onDimEnter() {\n    const dimFormatted = this.newDimension.trim();\n    if (dimFormatted !== '') {\n      if (!this.isDuplicate(this.uncatDimensions, dimFormatted)) {\n        this.api.addUncategorizedDimension(dimFormatted)\n          .subscribe(res => {\n            this.uncatDimensions.push(dimFormatted);\n            this.snackBar.open(`${dimFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${dimFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newDimension = '';\n  }\n\n  private error(msg: string) {\n    this.snackBar.open(msg, '', { duration: 3000 });\n  }\n\n  /**\n  * @description\n  * Checks the correctness of a keyword.\n  * @param keyword to be checked\n  * @returns correctness of the keyword\n  */\n  private checkKeyword(kw: string) : boolean {\n    const re = new RegExp(\"^[a-zA-ZäöüÄÖÜ]+$\");\n    if(!re.test(kw)) {\n      this.error(`The keyword ${kw} contains invalid characters`)\n      return false;\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized keyword\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onKeyEnter() {\n    const keyFormatted = this.newKeyword.trim();\n    if (keyFormatted !== '') {\n      if(!this.checkKeyword(keyFormatted)) {\n        return;\n      }\n      if (!this.isDuplicate(this.uncatKeywords, keyFormatted)) {\n        this.api.addUncategorizedKeyword(keyFormatted)\n          .subscribe(res => {\n            this.uncatKeywords.push(keyFormatted);\n            this.snackBar.open(`${keyFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${keyFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newKeyword = '';\n  }\n\n  /**\n  * @description\n  * Checks if a value appears in an array\n  * @param array to be checked\n  * @param value to be checked\n  * @returns true if the value was found, false otherwise\n  */\n  private isDuplicate(arr, value) {\n    const index = arr.findIndex((elem) => elem === value);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the dimension is\n  * removed from the list\n  * @param {string} dimension to be removed\n  */\n  public deleteDimension(dimension: string) {\n    const index = this.uncatDimensions.indexOf(dimension);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedDimension(dimension)\n      .subscribe(res => {\n        this.uncatDimensions.splice(index, 1);\n        this.snackBar.open(`${dimension} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the keyword is\n  * removed from the list\n  * @param {string} keyword to be removed\n  */\n  public deleteKeyword(keyword: string) {\n    const index = this.uncatKeywords.indexOf(keyword);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedKeyword(keyword)\n      .subscribe(res => {\n        this.uncatKeywords.splice(index, 1);\n        this.snackBar.open(`${keyword} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Opens a dialog for inputing a name. If the name is valid a new empty\n  * keyword model is created.\n  * @param {IKeyWordModel} kwm to remove\n  */\n  public newKeywordModel() {\n    const dialogRef = this.dialog.open(KWMNameDialog, {\n      width: '300px',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      const name = result;\n\n      if (name === '' || name === undefined) {\n        // invalid name\n        this.snackBar.open(`invalid name`, '', { duration: 3000 });\n      } else if (this.keywordModels.filter(function(kwm){ return kwm.id === name; }).length !== 0) {\n        // duplicate\n        this.snackBar.open(`${name} already exists`, '', { duration: 3000 });\n      } else {\n        // add new kwm\n        const newKwm: IKeyWordModel = {id: name, hierarchy: [], keywords: []};\n        this.api.addKeywordModel(newKwm).subscribe(res => {\n          const newIdx = this.keywordModels.length;\n          this.keywordModels[newIdx] = newKwm;\n          TREE_DATA[newIdx] = newKwm.hierarchy;\n          this.snackBar.open(`added new kwm with name: ${name}`, '', { duration: 3000 });\n        });\n\n      }\n    });\n  }\n\n  /**\n  * @description\n  * Exports the selected keyword model as a json and opens a save file dialog.\n  */\n  public exportKeywordModel() {\n    const selectedKwm: IKeyWordModel = this.keywordModels[this.selectedKwmIdx];\n    let kwmCopy = Object.assign({}, selectedKwm);\n    delete kwmCopy.keywords //delete unnecessary information\n    var blob = new Blob([JSON.stringify(kwmCopy, null, 2) ], {type: 'text/plain'});\n\n    //open dialog\n    let link = document.createElement('a');\n    link.download = selectedKwm.id + \".kwm\";\n    link.href = window.URL.createObjectURL(blob);\n    link.dataset.downloadurl = ['text/json', link.download, link.href].join(':');\n    link.click()\n  }\n\n\n  /**\n  * @description\n  * Checks the correctness of a IKeyWordModel generated from an input file\n  * in the importKeywordModel function. The keywords from the hierarchy are\n  * extracted and added to the keywords array.\n  * @param {IKeyWordModel} kwm to check\n  * @returns {boolean} correctness\n  */\n  private checkCorrectness(kwm: IKeyWordModel) : boolean{\n    if(!kwm.hasOwnProperty(\"id\")) {\n      this.error(\"The imported kwm has no id\");\n      return false;\n    }\n    if(!kwm.hasOwnProperty(\"hierarchy\")) {\n      this.error(\"The imported kwm has no hierarchy\");\n      return false;\n    }\n    kwm[\"keywords\"] = [];\n    let toCheck = kwm.hierarchy.slice() //deep copy\n    toCheck.forEach(node => node[\"shouldBe\"] = NodeType.DIMENSION);\n    while(toCheck.length !== 0) {\n      let cur = toCheck.pop();\n      if(!cur.hasOwnProperty(\"item\")) {\n        this.error(\"The imported kwm contains a node with no item\");\n        return false;\n      }\n      if(!cur.hasOwnProperty(\"nodeType\")) {\n        this.error(`The node ${cur.item} has no nodeType`);\n        return false;\n      }\n      if(cur.nodeType !== cur.shouldBe) {\n        this.error(`The node ${cur.item} has the wrong type`);\n        return false;\n      }\n      if(cur.nodeType === NodeType.KEYWORD) {\n        if(!this.checkKeyword(cur.item)) {\n          return false;\n        }\n        if(kwm.keywords.includes(cur.item)) {\n          this.error(`The keyword ${cur.item} is mentioned twice in the keyword model`);\n          return false;\n        }\n        kwm.keywords.push(cur.item); //add keyword to keywords array\n      }\n      delete cur.shouldBe //remove temporary variable again\n      if(cur.hasOwnProperty(\"children\")) {\n        cur.children.forEach(child => {\n          child[\"shouldBe\"] = cur.nodeType === NodeType.DIMENSION ? NodeType.KEYWORD : NodeType.DIMENSION;\n          toCheck.push(child);\n        });\n      }\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Reads the given file and creates a IKeyWordModel from it. If the hierarchy\n  * is correct and no model with the same name exists the model is added to\n  * the database\n  * @param {FileList} single file containing a kwm\n  */\n  public importKeywordModel(files: FileList) {\n    const file: File = files.item(0);\n    let fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      const newKwm: IKeyWordModel = JSON.parse(fileReader.result as string)\n      const isCorrect = this.checkCorrectness(newKwm);\n      if(isCorrect) {\n        if(this.keywordModels.filter(function(kwm){ return kwm.id === newKwm.id; }).length === 0) {\n          this.api.addKeywordModel(newKwm).subscribe(res => {\n            const newIdx = this.keywordModels.length;\n            this.keywordModels[newIdx] = newKwm;\n            TREE_DATA[newIdx] = newKwm.hierarchy;\n            this.snackBar.open(`added new kwm with name: ${newKwm.id}`, '', { duration: 3000 });\n          });\n        } else {\n          this.snackBar.open(`A kwm with the name ${newKwm.id} already exists`, '', { duration: 3000 });\n        }\n      }\n    }\n    fileReader.readAsText(file);\n  }\n\n  /**\n  * @description\n  * Deletes an keyword model.\n  * @param {IKeyWordModel} kwm to remove\n  */\n  public removeKeywordModel(keywordModel: IKeyWordModel) {\n    this.api.removeKeywordModel(keywordModel).subscribe(res => {\n      const removeIdx = this.selectedKwmIdx;\n      this.keywordModels.splice(removeIdx, 1);\n      TREE_DATA.splice(removeIdx, 1);\n      this.selectedKwmIdx = undefined;\n      this.snackBar.open(`removed kwm with name: ${keywordModel.id}`, '', { duration: 3000 });\n\n      this.database.dataChange.next([]);\n    });\n  }\n\n  /**\n  * @description\n  * Deletes an item and all it descendants. Adds the removed keywords/dimensions\n  * to their respective lists if necessary.\n  * @param {ItemFlatNode} node to delete\n  */\n  public deleteFromHierarchy(node: ItemFlatNode) {\n    const descendants = this.database.getDescendants(this.flatNodeMap.get(node));\n    // re-add to uncatgegorized dimensions/keywords\n    descendants.forEach(node => {\n      if (node.nodeType === NodeType.DIMENSION) {\n        if (!this.isDuplicate(this.uncatDimensions, node.item)) {\n          this.uncatDimensions.push(node.item);\n          this.api.addUncategorizedDimension(node.item)\n            .subscribe(res => {});\n        }\n      } else if (node.nodeType === NodeType.KEYWORD) {\n        if (!this.isDuplicate(this.uncatKeywords, node.item)) {\n          this.uncatKeywords.push(node.item);\n          this.api.addUncategorizedKeyword(node.item)\n            .subscribe(res => {});\n        }\n        const index = this.keywordModels[this.selectedKwmIdx].keywords.indexOf(node.item, 0);\n        this.keywordModels[this.selectedKwmIdx].keywords.splice(index, 1);\n      } else {\n        console.error('undefined type');\n      }\n    });\n    this.removeItem(node);\n\n  }\n\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n\n  removeItem(flatNode: ItemFlatNode) {\n    const node = this.flatNodeMap.get(flatNode);\n    this.database.deleteItem(node);\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: ItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode, '', node.nodeType);\n    this.treeControl.expand(node);\n  }\n\n  /**\n   * Handles dragOver of the mat-grid-tile\n   * @param event\n   */\n  dragOverEmptyTree(event) {\n    event.preventDefault();\n  }\n\n  /**\n   * handles dropping an item over the mat-grid-tile if the tree is empty\n   * @param event\n   */\n  dropOverEmptyTree(event) {\n    if (this.selectedKwmIdx !== undefined) {\n      if (this.keywordModels[this.selectedKwmIdx].hierarchy.length === 0) {\n        if (this.newItem.nodeType === NodeType.DIMENSION) {\n          this.database.insertRoot(this.newItem.item, this.newItem.nodeType);\n        } else {\n          this.snackBar.open(`Root node must be a dimension`, '', { duration: 3000 });\n        }\n      }\n    }\n  }\n\n  /**\n   * Handles the start of the dragging of an item\n   * @param event\n   * @param node\n   * @param newItem: indicates if item gets moved from outside the tree\n   * @param type: NodeType of the item\n   */\n  handleDragStart(event, node, newItem, type?) {\n    if (newItem) {\n      this.dragNode = new ItemFlatNode;\n      this.dragNode.item = node;\n      this.dragNode.nodeType = type;\n      this.isNewItem = true;\n      this.newItem = this.dragNode;\n    } else {\n      this.dragNode = node;\n    }\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\n    event.dataTransfer.setData('foo', 'bar');\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\n    this.treeControl.collapse(node);\n  }\n\n  /**\n   * Handles the dragover of an item over the tree.\n   * @param event\n   * @param node\n   * @param newItem: indicates if item gets moved from outside the tree\n   * @param type: NodeType of the item\n   */\n  handleDragOver(event, node) {\n    event.preventDefault();\n\n    // Handle node expand\n    if (node === this.dragNodeExpandOverNode) {\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\n          this.treeControl.expand(node);\n        }\n      }\n    } else {\n      this.dragNodeExpandOverNode = node;\n      this.dragNodeExpandOverTime = new Date().getTime();\n    }\n\n    // Handle drag area\n    const percentageX = event.offsetX / event.target.clientWidth;\n    const percentageY = event.offsetY / event.target.clientHeight;\n    if (percentageY  0.75) {\n      this.dragNodeExpandOverArea = 'below';\n    } else {\n      this.dragNodeExpandOverArea = 'center';\n    }\n  }\n\n  /**\n   * Handles dropping an item over the another node.\n   * Before moving the node, the correctness of the resulting tree is ensured.\n   * @param event\n   * @param node that the dragNode is dropped over\n   */\n  handleDrop(event, node) {\n    if (node !== this.dragNode) {\n      let newItem: ItemNode = null;\n      console.log('dragNode', this.flatNodeMap.get(this.dragNode), 'node', this.flatNodeMap.get(node), 'newItem', this.newItem);\n      if (this.newItem !== null\n         && this.newItem.nodeType === NodeType.KEYWORD\n         && this.keywordModels[this.selectedKwmIdx].keywords.includes(this.newItem.item)) {\n        this.snackBar.open(`${this.newItem.item} is already in this keyword model`, '', { duration: 3000 });\n      } else {\n        // dragNode is used if the item is moved within the tree, this.newItem otherwise\n        const nodeToDrop = this.dragNode === undefined ? this.newItem : this.dragNode;\n        switch (this.dragNodeExpandOverArea) {\n          case 'above':\n            if (nodeToDrop.nodeType === node.nodeType) { // must be same node type as sibling\n              newItem = this.database.copyPasteItemAbove(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n            } else {\n              this.snackBar.open(`${nodeToDrop.item} must be a ${node.nodeType} to be moved here`, '', { duration: 3000 });\n            }\n            break;\n          case 'below':\n            if (nodeToDrop.nodeType === node.nodeType) {// must be same node type as sibling\n              newItem = this.database.copyPasteItemBelow(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n            } else {\n              this.snackBar.open(`${nodeToDrop.item} must be a ${node.nodeType} to be moved here`, '', { duration: 3000 });\n            }\n            break;\n          case 'center':\n            if (nodeToDrop.nodeType !== node.nodeType) {// must be different node type as parent\n              newItem = this.database.copyPasteItem(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n            } else {\n              this.snackBar.open(`A ${nodeToDrop.nodeType} can not be added to a  ${node.nodeType}`, '', { duration: 3000 });\n            }\n            break;\n        }\n      }\n      if (newItem !== null) {\n        if (newItem.nodeType === NodeType.KEYWORD) { // add to keywords list\n          this.keywordModels[this.selectedKwmIdx].keywords.push(newItem.item);\n        }\n        this.database.deleteItem(this.flatNodeMap.get(this.dragNode)); // remove old node\n        this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\n      }\n    }\n    // cleanup\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n  }\n\n  handleDragEnd(event) {\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n    this.newItem = null;\n    this.isNewItem = false;\n  }\n\n  /**\n   * Gets called when another kwm gets selected and updates the\n   * tree view accordingly.\n   * @param event\n   */\n  selectionChange(event){\n    this.selectedKwmIdx = event[0].value;\n    this.database.dataChange.next(TREE_DATA[this.selectedKwmIdx]);\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/KWMNameDialog.html":{"url":"components/KWMNameDialog.html","title":"component - KWMNameDialog","body":"\n                   \n\n\n\n\n\n  Components\n  KWMNameDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/dialogs/keyword-input.dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                input-dialog\n            \n\n\n\n\n            \n                templateUrl\n                keyword-input.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/dialogs/keyword-input.dialog.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/keyword-input.dialog.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/keyword-input.dialog.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/keyword-input.dialog.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n@Component({\n    selector: 'input-dialog',\n    templateUrl: 'keyword-input.dialog.html',\n  })\n  export class KWMNameDialog {\n\n    constructor(\n      public dialogRef: MatDialogRef,\n      @Inject(MAT_DIALOG_DATA) public name: string) {}\n\n    onClose(): void {\n      this.dialogRef.close();\n    }\n  }\n    \n\n    \n        {{'KEYWORDS.NEW_KEYWORD_MODEL' | translate}}\n\n    {{'KEYWORDS.NEW_KEYWORD_MODEL_DIALOG' | translate}}:\n    \n        \n    \n\n\n    {{'CLOSE' | translate}}\n    {{'OK' | translate}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\\'KEYWORDS.NEW_KEYWORD_MODEL\\' | translate}}    {{\\'KEYWORDS.NEW_KEYWORD_MODEL_DIALOG\\' | translate}}:                    {{\\'CLOSE\\' | translate}}    {{\\'OK\\' | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutomatedTaggingParametersDialog', 'selector': 'app-automated-tagging-parameters-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentOverviewComponent', 'selector': 'app-document-overview'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileExistsDialogComponent', 'selector': 'app-file-exists-dialog'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FileUploadDialogComponent', 'selector': 'app-file-upload-dialog'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'KWMNameDialog', 'selector': 'input-dialog'},{'name': 'TaggingComponent', 'selector': 'app-tagging'},{'name': 'TaggingDialogComponent', 'selector': 'app-tagging-dialog'}];\n    var DIRECTIVES = [{'name': 'DragdropDirective', 'selector': '[appDragdrop]'},{'name': 'NaturalNumbersOnlyDirective', 'selector': '[appNaturalNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'KWMNameDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NaturalNumbersOnlyDirective.html":{"url":"directives/NaturalNumbersOnlyDirective.html","title":"directive - NaturalNumbersOnlyDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NaturalNumbersOnlyDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/directives/natural-numbers-only.directive.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appNaturalNumbersOnly]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/directives/natural-numbers-only.directive.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ninput(event)\n                \n            \n\n\n            \n                \n                    Defined in src/directives/natural-numbers-only.directive.ts:41\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener } from '@angular/core';\n\n\n/**\n * @class NaturalNumbersOnlyDirective\n *\n * Directive that ensures that the associated input field only\n * contains positiv integers\n */\n@Directive({\n  selector: '[appNaturalNumbersOnly]'\n})\nexport class NaturalNumbersOnlyDirective {\n\n  constructor(private _el: ElementRef) { }\n\n  @HostListener('input', ['$event']) onInputChange(event) {\n    const initalValue = this._el.nativeElement.value;\n    let replaced = initalValue.replace(/[^0-9]*/g, '');\n    if(replaced !== '' && Number(replaced) \n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaggingDialogComponent.html":{"url":"components/TaggingDialogComponent.html","title":"component - TaggingDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TaggingDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/dialogs/tagging.dialog.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tagging-dialog\n            \n\n\n\n\n            \n                templateUrl\n                tagging.dialog.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDialogButtonClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, translate: TranslateService, data: TaggingDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/dialogs/tagging.dialog.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        TaggingDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDialogButtonClick\n                        \n                        \n                    \n                \n            \n            \n                \nonDialogButtonClick(response: string)\n                \n            \n\n\n            \n                \n                    Defined in src/dialogs/tagging.dialog.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaggingDialogData\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/tagging.dialog.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/tagging.dialog.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/dialogs/tagging.dialog.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {IFile} from '../app/models/IFile.model';\n\nexport interface TaggingDialogData {\n  status: string;\n  progress: number;\n  jobId: string;\n  timeRemaining: number\n}\n\n@Component({\n  selector: 'app-tagging-dialog',\n  templateUrl: 'tagging.dialog.html',\n})\nexport class TaggingDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public translate: TranslateService,\n    @Inject(MAT_DIALOG_DATA) public data: TaggingDialogData) {}\n\n  onDialogButtonClick(response: string): void {\n    this.dialogRef.close(response);\n  }\n}\n\n    \n\n    \n        {{'TAGGING' | translate}}\n\n  {{data.status | translate}}\n  \n  \n    Time Remaining: {{data.timeRemaining.toFixed(1) + 2}}s\n  \n\n\n\n\n  {{'CLOSE' | translate}}\n  {{'CANCEL' | translate }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\\'TAGGING\\' | translate}}  {{data.status | translate}}        Time Remaining: {{data.timeRemaining.toFixed(1) + 2}}s    {{\\'CLOSE\\' | translate}}  {{\\'CANCEL\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AutomatedTaggingParametersDialog', 'selector': 'app-automated-tagging-parameters-dialog'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentOverviewComponent', 'selector': 'app-document-overview'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileExistsDialogComponent', 'selector': 'app-file-exists-dialog'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'FileUploadDialogComponent', 'selector': 'app-file-upload-dialog'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'KWMNameDialog', 'selector': 'input-dialog'},{'name': 'TaggingComponent', 'selector': 'app-tagging'},{'name': 'TaggingDialogComponent', 'selector': 'app-tagging-dialog'}];\n    var DIRECTIVES = [{'name': 'DragdropDirective', 'selector': '[appDragdrop]'},{'name': 'NaturalNumbersOnlyDirective', 'selector': '[appNaturalNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TaggingDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TaggingDialogData.html":{"url":"interfaces/TaggingDialogData.html","title":"interface - TaggingDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TaggingDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dialogs/tagging.dialog.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jobId\n                                \n                                \n                                        progress\n                                \n                                \n                                        status\n                                \n                                \n                                        timeRemaining\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jobId\n                                    \n                                \n                                \n                                    \n                                        jobId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeRemaining\n                                    \n                                \n                                \n                                    \n                                        timeRemaining:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {IFile} from '../app/models/IFile.model';\n\nexport interface TaggingDialogData {\n  status: string;\n  progress: number;\n  jobId: string;\n  timeRemaining: number\n}\n\n@Component({\n  selector: 'app-tagging-dialog',\n  templateUrl: 'tagging.dialog.html',\n})\nexport class TaggingDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public translate: TranslateService,\n    @Inject(MAT_DIALOG_DATA) public data: TaggingDialogData) {}\n\n  onDialogButtonClick(response: string): void {\n    this.dialogRef.close(response);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UploadDialogData.html":{"url":"interfaces/UploadDialogData.html","title":"interface - UploadDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UploadDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dialogs/file-upload.dialog.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        files\n                                \n                                \n                                        progressMonitor\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        files\n                                    \n                                \n                                \n                                    \n                                        files:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progressMonitor\n                                    \n                                \n                                \n                                    \n                                        progressMonitor:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {TranslateService} from '@ngx-translate/core';\nimport {IFile} from '../app/models/IFile.model';\nimport {Utils} from '../app/services/utils.service';\nimport {of} from 'rxjs';\n\nexport interface UploadDialogData {\n  files: Array;\n  progressMonitor: {\n    progress: number;\n    finished: number;\n  };\n}\n\n@Component({\n  selector: 'app-file-upload-dialog',\n  templateUrl: 'file-upload.dialog.html',\n})\nexport class FileUploadDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public translate: TranslateService,\n    private utils: Utils,\n    @Inject(MAT_DIALOG_DATA) public data: UploadDialogData) {}\n\n  onDialogButtonClick(response: string): void {\n    console.log(response);\n  }\n\n  public cancelUpload(file: IFile) {\n    file.progress = 100;\n    file.status = 'CANCELLED';\n    file.icon = 'cloud_done';\n  }\n\n  public cancelAll() {\n    for (const file of this.data.files) {\n      this.cancelUpload(file);\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Utils.html":{"url":"injectables/Utils.html","title":"injectable - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/utils.service.ts\n        \n\n            \n                Description\n            \n            \n                Service handling communication regarding the keywords with the backend\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sleep\n                            \n                            \n                                    Public\n                                uuid4\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sleep\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sleep(milliseconds: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/utils.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    milliseconds\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            uuid4\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uuid4()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/utils.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n/**\n *\n *\n * Service handling communication regarding the keywords with the backend\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class Utils {\n\n  public uuid4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\n      .replace(/[xy]/g, (c: string) => {\n      // tslint:disable-next-line:no-bitwise\n      const r = Math.random() * 16 | 0;\n        // tslint:disable-next-line:no-bitwise\n      const v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n  });\n  }\n\n  public sleep(milliseconds: number) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/document-overview/document-overview.component.ts\n            \n            component\n            DocumentOverviewComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/documentation/documentation.component.ts\n            \n            component\n            DocumentationComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/documentview/document-view-table.component.ts\n            \n            component\n            DocumentViewTableComponent\n            \n                1 %\n                (1/56)\n            \n        \n        \n            \n                \n                src/app/file-upload/file-upload.component.ts\n            \n            component\n            FileUploadComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            component\n            KeywordsComponent\n            \n                32 %\n                (18/56)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            class\n            ItemFlatNode\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            class\n            ItemNode\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            injectable\n            ChecklistDatabase\n            \n                21 %\n                (4/19)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            variable\n            NodeType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            variable\n            TREE_DATA\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/IDocument.model.ts\n            \n            interface\n            IDocument\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/models/IDocument.model.ts\n            \n            interface\n            IResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/IFile.model.ts\n            \n            interface\n            IFile\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/IKeyWordModel.model.ts\n            \n            interface\n            IKeyWordModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/IKeyword.model.ts\n            \n            interface\n            IKeyword\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/IKeywordListEntry.model.ts\n            \n            interface\n            IKeywordListEntry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/ITaggingMethod.ts\n            \n            interface\n            ITaggingMethod\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/models/ITaggingRequest.model.ts\n            \n            interface\n            ITaggingRequest\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/services/file.service.ts\n            \n            injectable\n            FileService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/services/utils.service.ts\n            \n            injectable\n            Utils\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/tagging/tagging.component.ts\n            \n            component\n            TaggingComponent\n            \n                2 %\n                (1/41)\n            \n        \n        \n            \n                \n                src/dialogs/automated-tagging-parameters.component.ts\n            \n            component\n            AutomatedTaggingParametersDialog\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/dialogs/automated-tagging-parameters.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dialogs/file-exists.component.ts\n            \n            component\n            FileExistsDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/dialogs/file-exists.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dialogs/file-upload.dialog.component.ts\n            \n            component\n            FileUploadDialogComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/dialogs/file-upload.dialog.component.ts\n            \n            interface\n            UploadDialogData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/dialogs/keyword-input.dialog.component.ts\n            \n            component\n            KWMNameDialog\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dialogs/tagging.dialog.component.ts\n            \n            component\n            TaggingDialogComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/dialogs/tagging.dialog.component.ts\n            \n            interface\n            TaggingDialogData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/directives/dragdrop.directive.ts\n            \n            directive\n            DragdropDirective\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/directives/natural-numbers-only.directive.ts\n            \n            directive\n            NaturalNumbersOnlyDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.3\n        \n            @angular/cdk : ^9.1.3\n        \n            @angular/common : ~9.1.3\n        \n            @angular/compiler : ~9.1.3\n        \n            @angular/core : ~9.1.3\n        \n            @angular/forms : ~9.1.3\n        \n            @angular/material : ^9.1.3\n        \n            @angular/platform-browser : ~9.1.3\n        \n            @angular/platform-browser-dynamic : ~9.1.3\n        \n            @angular/router : ~9.1.3\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            bootstrap : ^4.4.1\n        \n            echarts : ^4.8.0\n        \n            jquery : ^3.5.0\n        \n            moment : ^2.27.0\n        \n            ngx-echarts : ^5.0.0\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            HttpLoaderFactory\n                        \n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(httpClient)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpClient\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated with Angular CLI version 9.1.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAutomatedTaggingParametersDialog\n\nAutomatedTaggingParametersDialog\n\nAppModule -->\n\nAutomatedTaggingParametersDialog->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDocumentOverviewComponent\n\nDocumentOverviewComponent\n\nAppModule -->\n\nDocumentOverviewComponent->AppModule\n\n\n\n\n\nDocumentViewTableComponent\n\nDocumentViewTableComponent\n\nAppModule -->\n\nDocumentViewTableComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nDragdropDirective\n\nDragdropDirective\n\nAppModule -->\n\nDragdropDirective->AppModule\n\n\n\n\n\nFileExistsDialogComponent\n\nFileExistsDialogComponent\n\nAppModule -->\n\nFileExistsDialogComponent->AppModule\n\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\nAppModule -->\n\nFileUploadComponent->AppModule\n\n\n\n\n\nFileUploadDialogComponent\n\nFileUploadDialogComponent\n\nAppModule -->\n\nFileUploadDialogComponent->AppModule\n\n\n\n\n\nKWMNameDialog\n\nKWMNameDialog\n\nAppModule -->\n\nKWMNameDialog->AppModule\n\n\n\n\n\nKeywordsComponent\n\nKeywordsComponent\n\nAppModule -->\n\nKeywordsComponent->AppModule\n\n\n\n\n\nNaturalNumbersOnlyDirective\n\nNaturalNumbersOnlyDirective\n\nAppModule -->\n\nNaturalNumbersOnlyDirective->AppModule\n\n\n\n\n\nTaggingComponent\n\nTaggingComponent\n\nAppModule -->\n\nTaggingComponent->AppModule\n\n\n\n\n\nTaggingDialogComponent\n\nTaggingDialogComponent\n\nAppModule -->\n\nTaggingDialogComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgxDaterangepickerMd\n\nNgxDaterangepickerMd\n\nAppModule -->\n\nNgxDaterangepickerMd->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            NodeType   (src/.../keywords.component.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            TREE_DATA   (src/.../keywords.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  serverUrl: 'http://18.235.6.254:5000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  serverUrl: 'http://localhost:5000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/keywords/keywords.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NodeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  DIMENSION : 'DIMENSION',\n  KEYWORD : 'KEYWORD',\n}\n                        \n                    \n\n                \n                    \n                        Type of the item of a node\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TREE_DATA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        The Json object for list data.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,1.031,1,1.273]],["body/injectables/ApiService.html",[0,1.533,1,2.11,2,2.043,3,0.396,4,0.335,5,0.335,6,2.727,7,1.809,8,0.53,9,1.533,10,1.901,11,4.344,12,4.344,13,5.134,14,5.134,15,4.344,16,4.344,17,1.302,18,3.322,19,2.495,20,1.43,21,3.322,22,2.088,23,0.042,24,1.091,25,1.091,26,2.322,27,4.344,28,4.344,29,3.322,30,4.215,31,1.403,32,4.015,33,4.344,34,3.322,35,2.495,36,3.322,37,3.322,38,4.344,39,3.322,40,4.344,41,3.322,42,0.613,43,0.461,44,4.374,45,1.302,46,1.614,47,2.043,48,1.172,49,0.289,50,2.727,51,2.727,52,3.322,53,3.322,54,1.172,55,1.614,56,2.727,57,2.043,58,0.396,59,0.95,60,1.929,61,3.322,62,3.322,63,1.812,64,4.637,65,3.609,66,1.812,67,2.796,68,4.215,69,3.322,70,3.322,71,3.322,72,3.322,73,0.023,74,0.03,75,0.023]],["title/components/AppComponent.html",[76,0.103,77,0.75]],["body/components/AppComponent.html",[3,0.362,4,0.306,5,0.412,8,0.483,9,1.443,10,1.883,17,1.188,19,2.588,20,1.397,22,1.188,23,0.042,24,0.947,25,1.013,26,1.321,31,0.778,42,0.552,43,0.421,45,1.188,46,1.473,47,1.863,49,0.202,54,1.443,57,2.513,58,0.362,59,0.867,73,0.021,74,0.028,75,0.021,76,0.164,77,1.271,78,1.443,79,1.188,80,1.188,81,1.188,82,0.778,83,2.488,84,1.443,85,1.632,86,1.188,87,1.468,88,1.16,89,1.049,90,4.625,91,1.049,92,4.087,93,1.299,94,3.797,95,4.625,96,4.243,97,3.251,98,2.518,99,1.574,100,2.13,101,4.087,102,3.03,103,1.443,104,2.512,105,2.026,106,3.355,107,3.03,108,1.416,109,4.087,110,2.873,111,3.03,112,3.355,113,3.03,114,2.226,115,3.03,116,3.03,117,2.488,118,2.844,119,3.03,120,3.03,121,3.355,122,2.226,123,1.632,124,2.873,125,3.014,126,1.986,127,4.087,128,4.064,129,4.95,130,4.087,131,2.873,132,4.087,133,4.087,134,4.087,135,4.087,136,3.03,137,4.087,138,3.355,139,3.03,140,3.03,141,4.087,142,3.03,143,4.087,144,3.03,145,3.03,146,3.797,147,1.986,148,2.488,149,3.03,150,2.488,151,3.03,152,3.03,153,3.03,154,2.13,155,2.488,156,3.03,157,2.488,158,2.13,159,2.488,160,2.488,161,2.488,162,2.13,163,2.873,164,2.488,165,0.963,166,1.443,167,1.299,168,1.188,169,1.416,170,1.188,171,1.188,172,0.696,173,1.188,174,0.696,175,1.188,176,0.778,177,1.188,178,0.963,179,1.188,180,0.696,181,1.188,182,0.696,183,1.188,184,0.549,185,1.188,186,0.696,187,1.188,188,0.696,189,1.188,190,1.188]],["title/modules/AppModule.html",[191,1.796,192,1.796]],["body/modules/AppModule.html",[3,0.318,4,0.269,5,0.378,23,0.042,42,0.72,43,0.37,45,1.046,49,0.178,58,0.318,73,0.018,74,0.025,75,0.018,77,1.448,88,0.546,114,1.453,125,1.453,165,0.848,172,1.177,174,1.177,176,1.315,178,0.848,180,1.177,182,1.177,184,0.929,186,1.177,188,1.177,191,1.641,192,3.661,193,1.453,194,1.641,195,3.552,196,3.041,197,2.039,198,1.876,199,2.191,200,2.191,201,2.191,202,2.191,203,2.789,204,3.074,205,2.191,206,2.303,207,2.669,208,3.074,209,2.191,210,3.552,211,2.191,212,2.191,213,2.191,214,3.074,215,2.191,216,2.191,217,2.191,218,2.191,219,2.191,220,2.191,221,3.074,222,3.836,223,2.191,224,1.297,225,2.191,226,3.552,227,2.191,228,3.074,229,2.191,230,2.191,231,1.82,232,2.191,233,2.191,234,2.191,235,2.191,236,2.191,237,2.191,238,2.191,239,3.074,240,2.191,241,2.191,242,2.191,243,2.191,244,2.191,245,2.191,246,1.453,247,3.074,248,3.074,249,2.191,250,2.191,251,2.191,252,2.191,253,2.191,254,2.191,255,2.191,256,2.191,257,2.191,258,2.191,259,2.191,260,2.191,261,2.191,262,2.191,263,2.191,264,1.876,265,2.191,266,2.191,267,2.191,268,2.191,269,2.191,270,2.191,271,2.191,272,1.876,273,2.191,274,2.191,275,1.297,276,2.191,277,2.191,278,2.191,279,3.745,280,3.074,281,1.641,282,3.074,283,2.669,284,3.745,285,3.745,286,2.191,287,3.745,288,2.191,289,3.745,290,2.191,291,3.745,292,2.669,293,3.745,294,2.669,295,1.297,296,3.745,297,2.669,298,3.745,299,2.669,300,3.745,301,1.453,302,2.039,303,3.745,304,2.669,305,3.745,306,2.669,307,3.745,308,2.669,309,1.046,310,3.745,311,2.669,312,3.745,313,2.669,314,3.745,315,2.669,316,3.745,317,2.669,318,3.745,319,3.745,320,3.745,321,2.669,322,3.745,323,2.669,324,3.745,325,1.641,326,1.641,327,3.745,328,1.641,329,2.669,330,2.669,331,2.669,332,2.191,333,2.191,334,2.191,335,2.191,336,1.641,337,2.669,338,2.191,339,3.745,340,2.191,341,2.191]],["title/classes/AppPage.html",[49,0.195,342,2.053]],["body/classes/AppPage.html",[3,0.521,4,0.441,5,0.441,8,0.697,9,1.819,20,1.323,23,0.041,31,1.323,42,0.521,49,0.291,57,2.688,58,0.521,60,1.819,67,2.38,73,0.03,74,0.035,75,0.03,167,1.389,281,2.688,342,3.622,343,2.688,344,3.588,345,5.659,346,5.659,347,4.371,348,5.851,349,4.371,350,3.588,351,4.371,352,4.371,353,4.371]],["title/modules/AppRoutingModule.html",[191,1.796,203,1.59]],["body/modules/AppRoutingModule.html",[3,0.411,4,0.348,5,0.348,23,0.042,42,0.679,43,0.479,49,0.23,54,1.217,58,0.411,63,1.217,73,0.023,74,0.03,75,0.023,76,0.199,114,1.878,122,1.878,123,1.217,124,2.424,125,2.424,172,1.023,174,1.023,182,1.132,184,0.807,186,1.023,188,1.023,193,1.878,198,2.424,203,2.424,206,2.12,208,2.831,209,2.831,210,4.046,211,2.831,212,2.831,213,2.831,214,3.654,215,2.831,216,2.831,217,2.831,218,2.831,219,2.831,220,2.831,221,3.654,222,4.043,223,2.831,224,1.676,225,2.831,226,4.046,227,2.831,228,3.654,229,2.831,230,2.831,231,2.163,232,2.831,233,2.831,234,2.831,235,2.831,236,2.831,237,2.831,238,2.831,239,3.654,240,2.831,241,2.831,242,2.831,243,2.831,244,2.831,245,2.831,246,1.878,247,3.654,248,3.654,249,2.831,250,2.831,251,2.831,252,2.831,253,2.831,254,2.831,255,2.831,256,2.831,257,2.831,258,2.831,259,2.831,260,2.831,261,2.831,262,2.831,263,2.831,264,2.424,265,2.831,266,2.831,267,2.831,268,2.831,269,2.831,270,2.831,271,2.831,272,2.424,273,2.831,274,2.831,275,1.676,276,2.831,277,2.831,278,2.831,282,3.654,332,2.831,333,2.831,334,2.831,335,2.831,338,2.831,341,2.831,354,3.448,355,3.448,356,3.03,357,4.451,358,2.831,359,5.618,360,3.448]],["title/injectables/ChecklistDatabase.html",[0,1.031,361,1.59]],["body/injectables/ChecklistDatabase.html",[0,0.729,1,1.507,2,0.76,3,0.147,4,0.125,5,0.268,8,0.689,9,0.729,10,0.657,17,0.485,20,1.3,22,1.872,23,0.042,24,1.131,25,0.978,26,2.082,31,1.267,35,1.51,42,0.473,43,0.172,48,0.436,49,0.207,54,0.729,55,1.51,58,0.371,59,0.591,60,1.715,63,1.84,66,1.787,73,0.014,74,0.014,75,0.008,76,0.073,82,0.959,84,0.436,85,0.729,87,0.317,88,0.253,89,0.317,91,0.317,93,0.657,99,0.393,103,1.22,104,0.601,105,1.836,108,1.543,126,1.293,147,2.02,169,0.354,184,0.224,197,0.673,231,0.601,246,0.673,275,0.601,295,1.004,301,0.673,302,1.125,309,1.693,325,0.76,326,1.636,328,0.76,361,1.693,362,0.673,363,1.629,364,1.452,365,2.556,366,1.911,367,1.452,368,2.556,369,2.277,370,1.452,371,4.013,372,1.452,373,2.815,374,2.788,375,2.185,376,1.693,377,2.035,378,1.27,379,1.87,380,2.066,381,2.066,382,2.066,383,2.066,384,1.636,385,2.322,386,2.066,387,2.066,388,2.066,389,2.066,390,2.185,391,2.066,392,2.066,393,2.066,394,2.066,395,2.066,396,1.015,397,2.066,398,1.236,399,2.788,400,1.728,401,1.236,402,1.236,403,1.236,404,3.241,405,1.236,406,1.452,407,3.036,408,2.814,409,1.236,410,2.661,411,1.452,412,1.236,413,1.452,414,1.236,415,1.236,416,1.452,417,1.236,418,1.452,419,2.185,420,1.236,421,1.87,422,1.236,423,1.236,424,1.236,425,1.452,426,1.236,427,1.236,428,1.452,429,1.236,430,1.452,431,2.43,432,1.452,433,1.236,434,1.452,435,1.236,436,1.452,437,1.236,438,1.87,439,1.236,440,1.236,441,0.673,442,1.452,443,2.185,444,0.869,445,0.869,446,1.27,447,0.76,448,1.452,449,0.869,450,1.452,451,1.452,452,0.869,453,1.452,454,0.869,455,0.76,456,0.673,457,0.673,458,1.125,459,0.673,460,0.869,461,0.869,462,0.869,463,0.869,464,0.869,465,2.43,466,1.636,467,1.911,468,2.005,469,0.869,470,0.869,471,2.43,472,3.293,473,0.869,474,2.185,475,0.869,476,0.869,477,1.452,478,3.884,479,0.869,480,2.43,481,2.43,482,1.452,483,1.452,484,1.452,485,0.869,486,0.869,487,1.87,488,1.452,489,1.87,490,1.87,491,1.87,492,1.87,493,1.87,494,1.452,495,1.452,496,0.869,497,0.869,498,0.869,499,1.452,500,0.869,501,0.869,502,0.869,503,0.869,504,0.869,505,0.869,506,1.51,507,0.869,508,0.869,509,0.869,510,2.185,511,1.452,512,1.452,513,0.869,514,0.869,515,0.869,516,0.869,517,0.869,518,0.869,519,0.76,520,0.869,521,0.869,522,0.869,523,0.869,524,0.869,525,0.869,526,0.869,527,0.76,528,1.87,529,0.869,530,0.869,531,0.869,532,0.869,533,0.869,534,0.869,535,0.869,536,0.869,537,1.449,538,0.76,539,1.452,540,0.869,541,0.869,542,1.452,543,0.869,544,0.869,545,0.869,546,0.869,547,0.869,548,0.869,549,1.27,550,0.869,551,0.869,552,0.869,553,0.869,554,0.869,555,0.869,556,1.452,557,1.452,558,0.869,559,0.869,560,0.869,561,1.452,562,0.869,563,0.869,564,0.869,565,0.869,566,1.87,567,0.869,568,1.87,569,0.869,570,0.869,571,0.869,572,0.869,573,0.869,574,0.869,575,0.76,576,0.869,577,0.869,578,0.869,579,0.869,580,0.869,581,2.185,582,2.185,583,0.869,584,0.869,585,1.51,586,1.004,587,1.452,588,1.27,589,1.27,590,1.636,591,1.51,592,1.27,593,1.27,594,1.452,595,1.27,596,1.125,597,0.869,598,1.452,599,0.869,600,0.869,601,0.869,602,0.869,603,2.185,604,0.869,605,1.452,606,2.298,607,2.298,608,1.27,609,1.452,610,0.869,611,1.636,612,0.869,613,1.452,614,0.869,615,0.869,616,0.869,617,0.869,618,0.869,619,1.452,620,0.869,621,0.76,622,0.869,623,0.81,624,1.51,625,1.452,626,1.159,627,0.869,628,0.869,629,0.869,630,0.869,631,1.004,632,1.27,633,0.9,634,1.452,635,1.911,636,0.869,637,0.869,638,0.869,639,0.869,640,0.869,641,1.452,642,0.869,643,0.869,644,0.869,645,0.869,646,0.869,647,0.869,648,0.869,649,0.869,650,0.869,651,0.869,652,0.869,653,0.76,654,0.869,655,0.869,656,2.43,657,0.869,658,1.452,659,0.869,660,0.869,661,1.452,662,0.869,663,0.869,664,0.869,665,0.869,666,2.788,667,0.869,668,1.452,669,2.43,670,0.869,671,1.452,672,0.869,673,0.869,674,0.869,675,0.869,676,0.869,677,0.869,678,0.869,679,0.869,680,0.869,681,1.27,682,0.76,683,2.185,684,0.869,685,1.452,686,2.185,687,0.869,688,0.869,689,0.869,690,0.869,691,0.869,692,1.452,693,0.869,694,0.869,695,0.869,696,2.185,697,1.452,698,0.76,699,0.869,700,0.869,701,0.869,702,0.869,703,0.869,704,0.869,705,0.869,706,0.869,707,0.869]],["title/components/DashboardComponent.html",[76,0.103,172,0.671]],["body/components/DashboardComponent.html",[3,0.418,4,0.353,5,0.453,7,1.906,8,0.558,9,1.586,17,1.946,20,1.154,23,0.042,24,0.92,31,0.899,42,0.418,43,0.486,49,0.299,58,0.418,73,0.024,74,0.031,75,0.024,76,0.186,77,0.899,78,1.586,79,1.372,80,1.372,81,1.372,82,0.899,84,1.586,85,1.752,86,1.372,87,1.503,88,1.19,89,1.154,91,1.154,99,1.665,103,1.586,114,2.852,123,1.236,124,3.808,147,2.184,154,2.461,155,3.69,157,2.874,158,3.16,159,2.874,160,2.874,161,2.874,162,2.461,163,3.49,164,3.69,165,1.113,166,1.586,167,1.429,168,1.372,169,1.498,170,1.372,171,1.372,172,1.245,173,1.372,174,0.804,175,1.372,176,0.899,177,1.372,178,1.113,179,1.372,180,0.804,181,1.372,182,0.804,183,1.372,184,0.635,185,1.372,186,0.804,187,1.372,188,0.804,189,1.372,190,1.372,222,3.16,708,2.874,709,4.964,710,4.495,711,3.501,712,3.501,713,3.501,714,3.501,715,3.501,716,3.501,717,4.495,718,4.495,719,4.495,720,4.495,721,4.495,722,4.495,723,3.69,724,3.69,725,4.447,726,3.501,727,3.501,728,2.461,729,3.501,730,3.501,731,4.495,732,3.501,733,3.501,734,3.501,735,2.874]],["title/components/DocumentViewTableComponent.html",[76,0.103,176,0.75]],["body/components/DocumentViewTableComponent.html",[1,1.635,3,0.203,4,0.171,5,0.27,7,0.926,8,0.427,9,0.944,10,1.801,17,0.666,19,0.826,20,1.442,22,1.841,23,0.042,24,1.012,25,1.1,26,1.976,31,1.335,32,2.637,35,0.826,42,0.59,43,0.236,45,0.666,48,0.6,49,0.178,54,1.835,55,1.3,58,0.203,59,0.486,60,1.168,63,1.324,66,1.6,73,0.012,74,0.026,75,0.012,76,0.133,77,0.437,78,0.944,79,0.666,80,0.666,81,0.666,82,0.437,84,0.944,85,1.168,86,0.666,87,1.295,88,0.961,89,0.687,91,0.687,93,0.85,98,1.457,99,1.193,103,1.705,104,2.106,105,1.777,108,1.536,122,2.791,123,0.6,126,1.3,147,0.826,158,1.195,165,0.54,166,0.944,167,0.85,168,0.666,169,1.073,170,0.666,171,0.666,172,0.391,173,0.666,174,0.391,175,0.666,176,1.047,177,2.106,178,1.84,179,0.666,180,0.391,181,0.666,182,0.391,183,0.666,184,0.308,185,0.666,186,0.391,187,0.666,188,0.391,189,0.666,190,0.666,264,2.326,275,1.3,288,1.396,290,1.396,295,0.826,301,0.926,302,1.457,309,1.47,363,1.976,369,0.826,376,1.801,377,1.801,384,2.307,385,2.106,396,1.396,400,1.166,441,0.926,446,2.307,447,1.045,455,1.045,457,0.926,458,2.222,466,1.045,467,1.045,468,1.47,506,1.608,519,2.034,527,2.307,537,2.557,538,2.034,549,2.307,575,1.645,585,1.608,586,0.826,588,1.045,591,1.608,592,2.034,595,1.045,606,1.645,607,1.645,608,1.645,611,3.357,621,1.045,623,1.049,624,2.282,626,1.888,631,0.826,633,1.166,653,1.645,725,1.396,736,4.633,737,1.396,738,3.308,739,3.721,740,3.308,741,2.676,742,3.308,743,3.308,744,3.308,745,3.752,746,3.308,747,3.308,748,2.676,749,2.676,750,3.752,751,3.308,752,2.676,753,2.676,754,3.308,755,2.676,756,2.664,757,4.333,758,2.203,759,2.676,760,3.752,761,1.7,762,1.7,763,2.676,764,1.7,765,2.676,766,1.7,767,2.676,768,2.676,769,1.7,770,1.7,771,1.7,772,2.676,773,4.08,774,1.7,775,2.676,776,1.7,777,2.676,778,1.7,779,2.676,780,1.7,781,4.333,782,1.7,783,1.7,784,1.7,785,3.308,786,1.7,787,3.08,788,3.08,789,2.197,790,3.752,791,1.7,792,3.308,793,1.7,794,1.7,795,2.676,796,1.7,797,3.308,798,2.197,799,2.676,800,1.7,801,3.308,802,2.676,803,1.7,804,1.823,805,1.195,806,1.7,807,1.7,808,1.045,809,1.195,810,1.7,811,1.7,812,1.7,813,1.7,814,1.7,815,1.7,816,1.7,817,1.7,818,2.676,819,1.7,820,1.7,821,1.7,822,1.7,823,2.197,824,2.676,825,1.7,826,1.7,827,2.676,828,1.7,829,1.7,830,1.7,831,1.7,832,1.7,833,1.7,834,1.7,835,1.7,836,1.7,837,1.7,838,1.7,839,3.308,840,1.7,841,1.7,842,1.396,843,1.7,844,1.7,845,1.7,846,1.7,847,1.7,848,1.7,849,1.396,850,1.195,851,1.7,852,1.396,853,1.7,854,1.7,855,1.7,856,1.7,857,1.7,858,1.7,859,1.7,860,2.676,861,1.7,862,1.7,863,1.7,864,1.7,865,1.7,866,1.7,867,1.7,868,1.7,869,1.7,870,1.7,871,1.7,872,1.7,873,1.7,874,2.676,875,2.676,876,1.7,877,1.7,878,2.676,879,2.676,880,2.676,881,2.676,882,2.676,883,2.676,884,2.676,885,1.7,886,2.676,887,2.676,888,2.676,889,0.926,890,1.7,891,1.7,892,1.7,893,1.7,894,1.7,895,1.7]],["title/components/DocumentationComponent.html",[76,0.103,174,0.671]],["body/components/DocumentationComponent.html",[3,0.232,4,0.196,5,0.546,7,2.843,8,0.311,19,2.573,20,0.5,22,2.251,23,0.042,24,0.609,25,1.18,30,2.441,31,1.475,35,2.715,42,0.355,43,0.27,49,0.317,54,1.812,55,2.226,58,0.568,59,1.31,63,1.049,65,2.836,67,1.061,73,0.013,74,0.02,75,0.013,76,0.128,77,0.5,78,1.049,79,0.763,80,0.763,81,0.763,82,0.5,86,0.763,87,1.34,88,1.051,89,0.763,91,0.763,93,0.945,98,1.061,99,1.456,108,1.405,110,2.836,118,1.828,123,0.688,125,2.197,126,1.445,131,2.836,138,1.599,146,1.599,150,1.599,154,1.369,162,1.369,163,1.369,165,0.619,166,1.049,167,0.945,168,0.763,169,1.154,170,0.763,171,0.763,172,0.448,173,0.763,174,0.927,175,0.763,176,0.5,177,2.046,178,0.619,179,0.763,180,0.448,181,0.763,182,0.448,183,0.763,184,0.353,185,0.763,186,0.448,187,0.763,188,0.448,189,0.763,190,0.763,272,1.369,295,1.445,309,1.703,340,1.599,363,1.296,365,3.622,373,1.198,376,1.061,377,2.884,378,1.828,385,1.445,441,1.061,468,1.165,506,1.445,589,3.02,590,3.505,593,1.828,623,1.581,626,1.296,632,3.02,633,1.296,635,3.256,681,2.481,682,1.828,698,1.198,728,3.349,735,2.441,756,2.816,798,1.599,849,3.312,852,3.312,889,1.061,896,1.599,897,3.606,898,2.973,899,3.606,900,3.606,901,2.973,902,1.948,903,2.973,904,2.836,905,5.295,906,4.912,907,4.035,908,4.035,909,5.586,910,5.511,911,4.035,912,4.035,913,4.58,914,5.416,915,4.58,916,2.973,917,2.973,918,2.441,919,2.973,920,4.032,921,2.973,922,2.973,923,2.973,924,2.973,925,5.295,926,2.973,927,2.973,928,4.58,929,4.035,930,4.035,931,4.912,932,4.035,933,3.76,934,4.035,935,1.948,936,4.912,937,2.973,938,1.948,939,1.948,940,2.973,941,2.973,942,2.973,943,2.441,944,2.973,945,2.973,946,2.973,947,3.453,948,4.035,949,2.973,950,2.973,951,2.973,952,4.035,953,4.035,954,2.973,955,4.345,956,4.035,957,4.035,958,4.035,959,1.948,960,1.948,961,1.948,962,1.948,963,1.948,964,1.599,965,1.948,966,1.948,967,1.948,968,1.948,969,1.948]],["title/components/FileUploadComponent.html",[76,0.103,180,0.671]],["body/components/FileUploadComponent.html",[3,0.467,4,0.287,5,0.591,8,0.453,9,1.38,10,1.66,17,1.113,20,1.297,22,1.753,23,0.042,24,1.035,25,0.987,26,1.949,31,1.148,42,0.603,43,0.394,45,1.113,48,1.003,49,0.261,58,0.339,59,0.812,60,1.003,73,0.019,74,0.027,75,0.019,76,0.171,77,0.729,78,1.38,79,1.113,80,1.113,81,1.113,82,0.729,84,1.38,85,1.579,86,1.113,87,1.452,88,1.146,89,1.004,91,1.004,93,1.243,99,1.532,103,1.701,104,1.381,105,1.113,108,1.119,118,1.747,123,1.003,148,2.332,165,0.903,166,1.701,167,1.606,168,1.113,169,1.378,170,1.113,171,1.113,172,0.653,173,1.113,174,0.653,175,1.113,176,0.729,177,1.113,178,0.903,179,1.113,180,1.161,181,1.113,182,0.653,183,1.113,184,0.515,185,1.113,186,0.653,187,1.113,188,0.653,189,1.113,190,1.113,224,2.538,309,1.113,336,3.212,363,1.949,369,1.381,400,1.238,468,1.113,537,2.13,585,1.381,586,1.381,591,2.342,596,2.436,623,1.533,624,1.381,631,1.381,633,1.238,728,1.997,758,2.538,808,1.747,809,1.997,850,1.997,889,1.547,904,3.388,947,1.997,964,2.332,970,3.672,971,1.997,972,3.672,973,3.211,974,3.911,975,3.672,976,2.841,977,3.911,978,2.841,979,3.211,980,3.672,981,2.841,982,2.841,983,2.963,984,2.841,985,2.841,986,3.211,987,2.332,988,1.997,989,1.997,990,1.381,991,3.672,992,2.332,993,2.332,994,2.332,995,2.332,996,2.332,997,2.332,998,3.211,999,4.393,1000,2.332,1001,2.332,1002,4.149,1003,2.332,1004,2.332,1005,2.332,1006,2.332,1007,2.332,1008,3.956,1009,2.332,1010,3.956,1011,2.332,1012,2.332,1013,2.332,1014,2.332,1015,2.332,1016,2.332,1017,2.332,1018,1.997,1019,2.332,1020,2.332,1021,2.332,1022,2.332,1023,2.332,1024,3.911,1025,2.841,1026,2.841,1027,2.841]],["title/components/HomeComponent.html",[76,0.103,182,0.671]],["body/components/HomeComponent.html",[3,0.338,4,0.285,5,0.509,8,0.451,9,1.377,10,1.929,17,1.109,19,2.535,20,1.473,22,1.749,23,0.042,24,1.033,25,1.094,26,1.945,31,1.146,42,0.574,43,0.393,45,1.109,46,1.375,47,1.74,49,0.188,58,0.338,59,0.809,63,1.575,66,0.999,73,0.019,74,0.027,75,0.019,76,0.158,77,0.726,78,1.377,79,1.109,80,1.109,81,1.109,82,0.726,84,1.377,85,1.575,86,1.109,87,1.451,88,1.145,89,1.001,91,1.001,93,1.24,94,3.664,96,3.664,97,3.138,98,2.43,99,1.529,100,1.989,103,1.698,104,2.686,105,2.193,106,3.202,108,1.276,110,2.742,112,3.202,114,2.124,117,2.323,121,3.202,122,2.124,123,0.999,165,0.899,166,1.377,167,1.24,168,1.109,169,1.376,170,1.109,171,1.109,172,0.65,173,1.109,174,0.65,175,1.109,176,0.726,177,1.529,178,0.899,179,1.109,180,0.65,181,1.109,182,1.105,183,1.109,184,0.513,185,1.109,186,0.65,187,1.109,188,0.65,189,1.109,190,1.109,224,1.375,623,1.749,756,3.287,804,2.452,805,1.989,823,2.323,980,3.138,1028,2.323,1029,4.463,1030,3.9,1031,4.463,1032,4.463,1033,4.463,1034,4.463,1035,3.9,1036,3.9,1037,3.9,1038,3.9,1039,2.829,1040,3.9,1041,2.829,1042,2.829,1043,2.829,1044,2.829,1045,3.9,1046,2.829,1047,3.9,1048,2.829,1049,2.829,1050,2.829,1051,2.829,1052,3.9,1053,2.829,1054,2.829,1055,2.829,1056,2.829,1057,3.949,1058,2.829,1059,2.323,1060,2.829,1061,3.9,1062,2.829,1063,2.829,1064,2.829,1065,2.829,1066,2.829,1067,3.202]],["title/interfaces/IDocument.html",[804,1.419,990,1.419]],["body/interfaces/IDocument.html",[3,0.492,4,0.415,5,0.415,8,0.657,23,0.041,25,1.231,42,0.492,54,1.959,58,0.492,67,3.022,73,0.028,74,0.034,75,0.028,93,1.581,98,3.022,108,1.744,400,2.329,787,4.556,788,4.556,789,4.556,804,2.417,920,4.556,990,2.002,1068,2.896,1069,3.382,1070,5.344,1071,4.12,1072,3.382]],["title/interfaces/IFile.html",[983,1.796,990,1.419]],["body/interfaces/IFile.html",[3,0.53,4,0.346,5,0.595,8,0.548,10,1.411,23,0.042,25,1.065,42,0.642,43,0.477,45,1.346,48,1.212,49,0.296,58,0.41,59,0.982,60,1.212,73,0.023,74,0.03,75,0.023,76,0.174,84,1.212,85,1.567,87,0.882,88,0.703,89,0.882,91,0.882,93,1.411,99,1.092,103,1.212,108,1.577,118,3.198,166,1.212,167,1.411,180,1.02,224,2.391,336,2.112,363,1.497,400,2.144,468,1.346,585,1.669,586,1.669,591,2.391,596,2.418,623,1.346,624,1.669,631,1.669,633,1.497,758,2.391,808,2.112,809,2.415,850,2.415,889,1.87,904,2.415,947,2.415,970,2.415,971,2.415,972,2.82,973,2.82,975,2.82,979,2.82,980,3.458,983,2.73,986,3.645,987,2.82,988,2.415,989,2.415,990,1.669,991,4.528,992,4.269,993,2.82,994,2.82,995,2.82,996,2.82,997,2.82,998,3.645,999,4.421,1000,2.82,1001,2.82,1002,4.039,1003,2.82,1004,2.82,1005,2.82,1006,2.82,1007,2.82,1008,4.269,1009,2.82,1010,4.269,1011,2.82,1012,2.82,1013,2.82,1014,2.82,1015,2.82,1016,2.82,1017,2.82,1018,2.415,1019,2.82,1020,2.82,1021,2.82,1022,2.82,1023,2.82,1068,2.415]],["title/classes/ItemFlatNode.html",[49,0.195,408,1.59]],["body/classes/ItemFlatNode.html",[0,0.822,1,1.285,3,0.171,4,0.144,5,0.235,8,0.727,10,0.741,20,0.757,23,0.042,24,0.933,25,0.604,31,0.367,35,1.652,42,0.505,43,0.199,48,0.505,49,0.226,54,0.822,55,1.652,58,0.405,59,0.666,60,1.757,63,1.894,66,1.807,73,0.016,74,0.016,75,0.01,76,0.083,82,0.757,84,0.505,85,0.822,87,0.367,88,0.293,89,0.367,91,0.367,93,0.741,99,0.455,103,0.505,105,1.787,108,1.511,126,1.132,147,2.143,169,0.409,184,0.259,197,0.779,231,0.695,246,0.779,275,0.695,295,1.132,301,0.779,302,1.269,309,1.658,325,0.88,326,1.813,328,0.88,343,0.88,361,1.605,362,0.779,363,1.748,364,1.006,365,2.601,366,1.433,367,1.006,368,2.09,369,1.95,370,1.006,371,4.001,372,1.006,373,2.951,374,2.389,375,2.073,376,1.269,377,2.038,378,0.88,379,1.006,384,0.88,385,2.143,390,1.006,399,3.1,400,1.748,404,3.099,406,1.006,407,2.073,408,2.752,411,1.006,413,1.006,416,1.006,418,1.006,419,1.638,421,1.638,425,1.006,428,1.006,430,1.006,431,2.389,432,1.006,434,1.006,436,1.006,438,1.638,441,0.779,442,1.638,443,2.389,444,1.006,445,1.006,446,1.433,447,0.88,448,1.638,449,1.006,450,1.638,451,1.638,452,1.638,453,2.63,454,1.638,455,1.433,456,0.779,457,0.779,458,1.269,459,0.779,460,1.006,461,1.006,462,1.006,463,1.006,464,1.006,465,2.63,466,1.813,467,2.09,468,2.07,469,1.006,470,1.006,471,2.63,472,3.441,473,1.006,474,2.389,475,1.006,476,1.006,477,1.638,478,3.964,479,1.006,480,2.63,481,2.63,482,1.638,483,1.638,484,1.638,485,1.006,486,1.006,487,2.073,488,1.638,489,2.073,490,2.073,491,2.073,492,2.073,493,2.073,494,1.638,495,1.638,496,1.006,497,1.006,498,1.006,499,1.638,500,1.006,501,1.006,502,1.006,503,1.006,504,1.006,505,1.006,506,1.652,507,1.006,508,1.006,509,1.006,510,2.389,511,1.638,512,1.638,513,1.006,514,1.006,515,1.006,516,1.006,517,1.006,518,1.006,519,0.88,520,1.006,521,1.006,522,1.006,523,1.006,524,1.006,525,1.006,526,1.006,527,0.88,528,2.073,529,1.006,530,1.006,531,1.006,532,1.006,533,1.006,534,1.006,535,1.006,536,1.006,537,1.605,538,0.88,539,1.638,540,1.006,541,1.006,542,1.638,543,1.006,544,1.006,545,1.006,546,1.006,547,1.006,548,1.006,549,1.433,550,1.006,551,1.006,552,1.006,553,1.006,554,1.006,555,1.006,556,1.638,557,1.638,558,1.006,559,1.006,560,1.006,561,1.638,562,1.006,563,1.006,564,1.006,565,1.006,566,2.073,567,1.006,568,2.073,569,1.006,570,1.006,571,1.006,572,1.006,573,1.006,574,1.006,575,0.88,576,1.006,577,1.006,578,1.006,579,1.006,580,1.006,581,2.389,582,2.389,583,1.006,584,1.006,585,1.652,586,1.132,587,1.638,588,1.433,589,1.433,590,1.813,591,1.652,592,1.433,593,1.433,594,1.638,595,1.433,596,1.269,597,1.006,598,1.638,599,1.006,600,1.006,601,1.006,602,1.006,603,2.389,604,1.006,605,1.638,606,2.467,607,2.467,608,1.433,609,1.638,610,1.006,611,1.813,612,1.006,613,1.638,614,1.006,615,1.006,616,1.006,617,1.006,618,1.006,619,1.638,620,1.006,621,0.88,622,1.006,623,0.913,624,1.652,625,1.638,626,1.285,627,1.006,628,1.006,629,1.006,630,1.006,631,1.132,632,1.433,633,1.016,634,1.638,635,2.09,636,1.006,637,1.006,638,1.006,639,1.006,640,1.006,641,1.638,642,1.006,643,1.006,644,1.006,645,1.006,646,1.006,647,1.006,648,1.006,649,1.006,650,1.006,651,1.006,652,1.006,653,0.88,654,1.006,655,1.006,656,2.63,657,1.006,658,1.638,659,1.006,660,1.006,661,1.638,662,1.006,663,1.006,664,1.006,665,1.006,666,2.973,667,1.006,668,1.638,669,2.63,670,1.006,671,1.638,672,1.006,673,1.006,674,1.006,675,1.006,676,1.006,677,1.006,678,1.006,679,1.006,680,1.006,681,1.433,682,0.88,683,2.389,684,1.006,685,1.638,686,2.389,687,1.006,688,1.006,689,1.006,690,1.006,691,1.006,692,1.638,693,1.006,694,1.006,695,1.006,696,2.389,697,1.638,698,0.88,699,1.006,700,1.006,701,1.006,702,1.006,703,1.006,704,1.006,705,1.006,706,1.006,707,1.006,1073,1.431,1074,1.431,1075,1.431]],["title/classes/ItemNode.html",[49,0.195,404,1.59]],["body/classes/ItemNode.html",[0,0.826,1,1.289,3,0.172,4,0.145,5,0.236,8,0.728,10,0.744,20,0.601,23,0.042,24,0.935,25,0.479,31,0.369,35,1.657,42,0.506,43,0.2,48,0.508,49,0.227,54,0.826,55,1.657,58,0.407,59,0.669,60,1.76,63,1.896,66,1.809,73,0.016,74,0.016,75,0.01,76,0.083,82,0.76,84,0.508,85,0.826,87,0.369,88,0.294,89,0.369,91,0.369,93,0.744,99,0.457,103,0.508,105,1.791,108,1.512,126,1.137,147,2.147,169,0.411,184,0.261,197,0.783,231,0.699,246,0.783,275,0.699,295,1.137,301,0.783,302,1.274,309,1.661,325,0.884,326,1.819,328,0.884,343,0.884,361,1.611,362,0.783,363,1.753,364,1.011,365,2.607,366,1.439,367,1.011,368,2.096,369,1.954,370,1.011,371,4.004,372,1.011,373,3.014,374,2.397,375,2.638,376,1.274,377,2.043,378,0.884,379,1.011,384,0.884,385,2.147,390,1.011,399,2.638,400,1.635,404,3.118,406,1.011,407,2.08,408,2.715,411,1.011,413,1.011,416,1.011,418,1.011,419,1.645,421,1.645,425,1.011,428,1.011,430,1.011,431,2.397,432,1.011,434,1.011,436,1.011,438,1.645,441,0.783,442,1.645,443,2.397,444,1.011,445,1.011,446,1.439,447,0.884,448,1.645,449,1.011,450,1.645,451,1.645,452,1.011,453,1.645,454,1.011,455,0.884,456,0.783,457,0.783,458,1.274,459,0.783,460,1.011,461,1.011,462,1.011,463,1.011,464,1.011,465,2.638,466,1.819,467,2.096,468,2.072,469,1.011,470,1.011,471,2.638,472,3.446,473,1.011,474,2.397,475,1.011,476,1.011,477,1.645,478,3.967,479,1.011,480,2.638,481,2.638,482,1.645,483,1.645,484,1.645,485,1.011,486,1.011,487,2.08,488,1.645,489,2.08,490,2.08,491,2.08,492,2.08,493,2.08,494,1.645,495,1.645,496,1.011,497,1.011,498,1.011,499,1.645,500,1.011,501,1.011,502,1.011,503,1.011,504,1.011,505,1.011,506,1.657,507,1.011,508,1.011,509,1.011,510,2.397,511,1.645,512,1.645,513,1.011,514,1.011,515,1.011,516,1.011,517,1.011,518,1.011,519,0.884,520,1.011,521,1.011,522,1.011,523,1.011,524,1.011,525,1.011,526,1.011,527,0.884,528,2.08,529,1.011,530,1.011,531,1.011,532,1.011,533,1.011,534,1.011,535,1.011,536,1.011,537,1.611,538,0.884,539,1.645,540,1.011,541,1.011,542,1.645,543,1.011,544,1.011,545,1.011,546,1.011,547,1.011,548,1.011,549,1.439,550,1.011,551,1.011,552,1.011,553,1.011,554,1.011,555,1.011,556,1.645,557,1.645,558,1.011,559,1.011,560,1.011,561,1.645,562,1.011,563,1.011,564,1.011,565,1.011,566,2.08,567,1.011,568,2.08,569,1.011,570,1.011,571,1.011,572,1.011,573,1.011,574,1.011,575,0.884,576,1.011,577,1.011,578,1.011,579,1.011,580,1.011,581,2.397,582,2.397,583,1.011,584,1.011,585,1.657,586,1.137,587,1.645,588,1.439,589,1.439,590,1.819,591,1.657,592,1.439,593,1.439,594,1.645,595,1.439,596,1.274,597,1.011,598,1.645,599,1.011,600,1.011,601,1.011,602,1.011,603,2.397,604,1.011,605,1.645,606,2.473,607,2.473,608,1.439,609,1.645,610,1.011,611,1.819,612,1.011,613,1.645,614,1.011,615,1.011,616,1.011,617,1.011,618,1.011,619,1.645,620,1.011,621,0.884,622,1.011,623,0.917,624,1.657,625,1.645,626,1.289,627,1.011,628,1.011,629,1.011,630,1.011,631,1.137,632,1.439,633,1.02,634,1.645,635,2.096,636,1.011,637,1.011,638,1.011,639,1.011,640,1.011,641,1.645,642,1.011,643,1.011,644,1.011,645,1.011,646,1.011,647,1.011,648,1.011,649,1.011,650,1.011,651,1.011,652,1.011,653,0.884,654,1.011,655,1.011,656,2.638,657,1.011,658,1.645,659,1.011,660,1.011,661,1.645,662,1.011,663,1.011,664,1.011,665,1.011,666,2.98,667,1.011,668,1.645,669,2.638,670,1.011,671,1.645,672,1.011,673,1.011,674,1.011,675,1.011,676,1.011,677,1.011,678,1.011,679,1.011,680,1.011,681,1.439,682,0.884,683,2.397,684,1.011,685,1.645,686,2.397,687,1.011,688,1.011,689,1.011,690,1.011,691,1.011,692,1.645,693,1.011,694,1.011,695,1.011,696,2.397,697,1.645,698,0.884,699,1.011,700,1.011,701,1.011,702,1.011,703,1.011,704,1.011,705,1.011,706,1.011,707,1.011,1076,1.438,1077,1.438]],["title/components/SearchComponent.html",[76,0.103,186,0.671]],["body/components/SearchComponent.html",[3,0.483,4,0.408,5,0.496,23,0.041,24,1.007,42,0.483,43,0.562,49,0.27,58,0.483,73,0.028,74,0.033,75,0.028,76,0.188,77,1.039,78,1.737,79,1.586,80,1.586,81,1.586,82,1.039,86,1.586,87,1.534,88,1.218,89,1.263,91,1.263,122,3.004,123,1.428,165,1.286,166,1.737,167,1.564,168,1.586,169,1.577,170,1.586,171,1.586,172,0.93,173,1.586,174,0.93,175,1.586,176,1.039,177,1.586,178,1.286,179,1.586,180,0.93,181,1.586,182,0.93,183,1.586,184,0.734,185,1.586,186,1.267,187,1.586,188,0.93,189,1.586,190,1.586,1078,3.322,1079,5.302,1080,4.921,1081,4.039]],["title/components/SettingsComponent.html",[76,0.103,188,0.671]],["body/components/SettingsComponent.html",[3,0.483,4,0.408,5,0.496,23,0.041,24,1.007,42,0.483,43,0.562,49,0.27,58,0.483,73,0.028,74,0.033,75,0.028,76,0.188,77,1.039,78,1.737,79,1.586,80,1.586,81,1.586,82,1.039,86,1.586,87,1.534,88,1.218,89,1.263,91,1.263,123,1.995,165,1.286,166,1.737,167,1.564,168,1.586,169,1.577,170,1.586,171,1.586,172,0.93,173,1.586,174,0.93,175,1.586,176,1.039,177,1.586,178,1.286,179,1.586,180,0.93,181,1.586,182,0.93,183,1.586,184,0.734,185,1.586,186,0.93,187,1.586,188,1.267,189,1.586,190,1.586,1081,4.039,1082,3.322,1083,5.302,1084,4.921]],["title/injectables/UploadService.html",[0,1.031,758,1.419]],["body/injectables/UploadService.html",[0,1.635,2,2.257,3,0.438,4,0.37,5,0.566,7,1.999,8,0.585,9,1.635,10,1.784,17,1.439,19,2.727,20,1.303,22,1.989,23,0.042,24,1.039,25,1.091,26,2.212,31,1.189,32,3.863,42,0.67,43,0.509,44,3.803,45,1.439,46,1.784,47,2.257,48,1.296,49,0.309,50,3.013,51,3.013,56,3.013,57,2.257,58,0.438,59,1.05,60,1.635,63,1.635,64,3.803,65,2.581,66,1.635,67,1.999,68,3.013,73,0.025,74,0.032,75,0.025,100,2.581,626,1.6,756,2.257,758,2.466,804,2.59,805,2.581,808,2.257,842,3.803,988,2.581,989,2.581,1018,2.581,1057,4.376,1059,3.803,1085,3.013,1086,4.632,1087,4.632,1088,3.671,1089,4.632,1090,3.671,1091,4.632,1092,3.671,1093,3.671,1094,3.671,1095,3.671,1096,3.671,1097,3.671,1098,3.671,1099,3.671,1100,3.671,1101,3.671,1102,3.671,1103,3.671,1104,3.671,1105,3.671]],["title/coverage.html",[1106,3.272]],["body/coverage.html",[0,1.813,1,1.642,5,0.38,6,3.093,23,0.042,25,0.771,46,2.288,49,0.342,66,1.33,73,0.026,74,0.032,75,0.026,76,0.207,77,0.967,83,3.093,125,2.051,172,0.866,174,0.866,176,0.967,178,1.197,180,0.866,182,0.866,184,0.683,186,0.866,188,0.866,336,2.895,342,2.648,344,3.093,361,2.051,362,3.076,404,2.051,408,2.051,456,2.051,459,2.051,468,2.367,708,3.093,736,3.093,737,3.093,739,3.093,758,1.831,804,1.831,889,2.564,896,3.093,970,3.31,971,3.31,983,2.316,990,2.288,1028,3.093,1069,3.093,1078,3.093,1082,3.093,1085,3.093,1106,3.093,1107,3.767,1108,3.767,1109,4.708,1110,4.708,1111,3.767,1112,3.767,1113,3.767,1114,3.767,1115,3.767,1116,3.767,1117,3.767,1118,3.767,1119,3.767,1120,3.767,1121,3.767,1122,3.767,1123,3.767,1124,5.649,1125,4.708,1126,3.767,1127,5.649,1128,3.767,1129,3.093,1130,3.093,1131,3.865,1132,3.093,1133,3.093,1134,3.767]],["title/dependencies.html",[194,2.16,1135,2.439]],["body/dependencies.html",[23,0.042,43,0.608,48,1.545,73,0.03,74,0.035,75,0.03,194,2.692,196,3.078,280,4.234,281,3.171,286,3.594,358,3.594,1072,3.594,1136,4.378,1137,4.915,1138,4.378,1139,4.378,1140,4.378,1141,4.378,1142,4.378,1143,4.378,1144,4.378,1145,4.378,1146,4.378,1147,4.378,1148,4.378,1149,4.378,1150,4.378,1151,4.378,1152,4.378]],["title/index.html",[8,0.389,1153,2.439,1154,2.439]],["body/index.html",[4,0.415,23,0.034,24,0.842,66,1.452,73,0.028,74,0.034,75,0.028,76,0.189,88,0.842,128,4.554,131,3.494,206,2.53,224,1.999,231,2.595,350,3.377,366,3.492,918,3.377,933,4.384,943,4.08,1137,3.377,1155,4.114,1156,4.97,1157,4.114,1158,5.34,1159,4.114,1160,4.114,1161,5.679,1162,5.838,1163,4.114,1164,4.114,1165,4.114,1166,4.114,1167,4.114,1168,4.114,1169,4.114,1170,4.114,1171,5.34,1172,4.114,1173,4.114,1174,4.114,1175,4.114,1176,4.114,1177,4.114,1178,4.114,1179,3.377,1180,4.97,1181,5.547,1182,4.114,1183,4.97,1184,4.97,1185,4.114,1186,4.114,1187,4.114,1188,5.34,1189,4.114,1190,4.114,1191,4.114,1192,4.114]],["title/modules.html",[193,2.17]],["body/modules.html",[23,0.037,73,0.032,74,0.037,75,0.032,192,2.887,193,2.556,203,2.556,281,2.887,1067,3.854,1193,4.695,1194,4.695,1195,5.371,1196,4.695]],["title/overview.html",[1197,3.272]],["body/overview.html",[2,2.514,23,0.041,73,0.028,74,0.034,75,0.028,77,1.497,78,1.443,165,1.3,172,1.224,174,1.224,176,1.367,180,1.224,182,1.224,184,0.966,186,1.224,188,1.224,191,2.514,192,3.771,193,2.227,194,2.514,195,3.357,196,2.875,197,2.227,198,2.875,199,3.357,200,3.357,201,3.357,202,3.357,203,2.9,204,4.065,205,3.357,206,2.514,343,2.514,356,2.514,723,4.065,724,4.065,1068,2.875,1197,3.357,1198,4.089,1199,4.089]],["title/routes.html",[356,2.451]],["body/routes.html",[23,0.037,73,0.032,74,0.037,75,0.032,356,2.932]],["title/miscellaneous/variables.html",[1200,2.002,1201,2.883]],["body/miscellaneous/variables.html",[8,0.667,23,0.041,25,1.186,46,2.711,73,0.028,74,0.034,75,0.028,82,1.074,97,3.529,104,2.711,105,2.186,108,1.196,309,1.64,362,2.278,368,2.572,369,2.614,385,2.44,456,2.734,457,2.278,458,2.278,459,2.734,506,2.033,626,2.188,1129,3.434,1130,3.434,1131,3.434,1132,4.121,1133,4.121,1179,4.121,1200,3.434,1201,3.434,1202,5.02,1203,4.183,1204,4.183,1205,5.02,1206,4.183,1207,4.183,1208,4.183,1209,4.183,1210,4.183,1211,4.183,1212,4.183,1213,4.183,1214,4.183,1215,4.183]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":468,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["0.75",{"_index":695,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["0/1",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["1.10.0",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["1.amazonaws.com:5000",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["100",{"_index":889,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["10px",{"_index":727,"title":{},"body":{"components/DashboardComponent.html":{}}}],["131.compute",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["180",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":723,"title":{},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["200",{"_index":909,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["200px",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["20px",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["25",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":724,"title":{},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["3.5.0",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["3/17",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":531,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["3000",{"_index":607,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["33",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["4.4.1",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":912,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["40em",{"_index":1026,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["5",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["500",{"_index":914,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["502",{"_index":915,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["52",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.5.4",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1199,"title":{},"body":{"overview.html":{}}}],["7/44",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8px",{"_index":963,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["9",{"_index":1198,"title":{},"body":{"overview.html":{}}}],["9.1.3",{"_index":1137,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.2.2",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":556,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["_nodedata",{"_index":557,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["_nodedata.expandable",{"_index":558,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["_nodedata.item",{"_index":560,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["abc",{"_index":1099,"title":{},"body":{"injectables/UploadService.html":{}}}],["above",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["accessors",{"_index":395,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["accordion",{"_index":899,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["accumulator",{"_index":469,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["accumulator.concat(node",{"_index":476,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["action",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{}}}],["actual_component",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["add",{"_index":430,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["add_circle",{"_index":888,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["added",{"_index":377,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["addkeywordtodoc",{"_index":742,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["addnewitem(node",{"_index":655,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["adds",{"_index":839,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["adduncategorizeddimension",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{}}}],["adduncategorizeddimension(dim",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{}}}],["adduncategorizedkeyword",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{}}}],["adduncategorizedkeyword(key",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{}}}],["align",{"_index":955,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["already",{"_index":608,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["amos",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["and/or",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["angular",{"_index":933,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":807,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["angular/cdk/drag",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/cdk/tree",{"_index":449,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/common",{"_index":1072,"title":{},"body":{"interfaces/IDocument.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["angular/compiler",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentationComponent.html":{}}}],["angular/material/form",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/material/sort",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentViewTableComponent.html":{}}}],["angular/material/table",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentViewTableComponent.html":{}}}],["angular/material/toolbar",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tree",{"_index":328,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/platform",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":358,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["app",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["app.component",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":77,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appears",{"_index":622,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["application/json",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["apply",{"_index":877,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["applybulkkeywords",{"_index":748,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["applybulkkeywords(keyword",{"_index":763,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["applykeyword",{"_index":749,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["applykeyword(doc",{"_index":765,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["appmodule",{"_index":192,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":342,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":203,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":688,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["arising",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["arr.findindex((elem",{"_index":629,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["array",{"_index":623,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["artifacts",{"_index":1173,"title":{},"body":{"index.html":{}}}],["assets/img/infinitag1.png",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["assign",{"_index":922,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["assigned",{"_index":919,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["associated",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["authors",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auto",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/FileUploadComponent.html":{}}}],["automated",{"_index":718,"title":{},"body":{"components/DashboardComponent.html":{}}}],["automatically",{"_index":1167,"title":{},"body":{"index.html":{}}}],["available",{"_index":1067,"title":{},"body":{"components/HomeComponent.html":{},"modules.html":{}}}],["back",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["backend",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["backendstatus",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["bar",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["basis",{"_index":959,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["behaviorsubject",{"_index":438,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["below",{"_index":697,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["between",{"_index":961,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["body",{"_index":906,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["boolean",{"_index":455,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["bootstrap",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":731,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bottom",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["break",{"_index":1010,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["breakpoint",{"_index":743,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["browse",{"_index":1195,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":351,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":279,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":366,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"index.html":{}}}],["buildfiletree",{"_index":380,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["buildfiletree(obj",{"_index":398,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["button:focus",{"_index":890,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["buttons",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{}}}],["c",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["called",{"_index":586,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["case",{"_index":1008,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["catcherror",{"_index":988,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["category",{"_index":374,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["cdkdragdrop",{"_index":443,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["center",{"_index":698,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["change",{"_index":918,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["changed",{"_index":921,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["changekeywords",{"_index":917,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["changes",{"_index":775,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["changes.documents",{"_index":828,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["changes.documents.currentvalue",{"_index":829,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["changes.filter",{"_index":831,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["changes.filter.currentvalue",{"_index":833,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["charge",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["check",{"_index":1191,"title":{},"body":{"index.html":{}}}],["checked",{"_index":625,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["checklist",{"_index":364,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["checklistdatabase",{"_index":361,"title":{"injectables/ChecklistDatabase.html":{}},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["checks",{"_index":621,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["children",{"_index":375,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["claim",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["class",{"_index":49,"title":{"classes/AppPage.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["classes",{"_index":343,"title":{},"body":{"classes/AppPage.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"overview.html":{}}}],["cli",{"_index":1158,"title":{},"body":{"index.html":{}}}],["close",{"_index":1003,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["cloud_done",{"_index":1023,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["cloud_upload",{"_index":1019,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["cluster_appmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1169,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":903,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["column",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["columns",{"_index":816,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["communication",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{}}}],["component",{"_index":76,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["components",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["conditions",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["connection",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["console",{"_index":1001,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["console.log(\"postfile",{"_index":1096,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('document",{"_index":1021,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["console.log(response",{"_index":1066,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(value",{"_index":1055,"title":{},"body":{"components/HomeComponent.html":{}}}],["const",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["constructor(api",{"_index":396,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{}}}],["constructor(http",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(httpclient",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["constructor(private",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["constructor(uploadservice",{"_index":976,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["container",{"_index":726,"title":{},"body":{"components/DashboardComponent.html":{}}}],["containing",{"_index":985,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["content",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"classes/AppPage.html":{},"components/DocumentationComponent.html":{},"interfaces/IDocument.html":{},"injectables/UploadService.html":{}}}],["context",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["convert",{"_index":562,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copies",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["copy",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["copypasteitem",{"_index":381,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["copypasteitem(from",{"_index":406,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copypasteitemabove",{"_index":382,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["copypasteitemabove(from",{"_index":411,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copypasteitembelow",{"_index":383,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["copypasteitembelow(from",{"_index":413,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copyright",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["coverage",{"_index":1106,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createdat",{"_index":883,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["creation_date",{"_index":789,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"interfaces/IDocument.html":{}}}],["currently",{"_index":457,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["currentroot",{"_index":424,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["damages",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboard",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["dashboard.component.html",{"_index":710,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":709,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.component",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboardcomponent",{"_index":172,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":385,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["data.splice(index",{"_index":860,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["database",{"_index":365,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["database.datachange.subscribe(data",{"_index":548,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["datachange",{"_index":379,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["datasource",{"_index":527,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["date",{"_index":1070,"title":{},"body":{"interfaces/IDocument.html":{}}}],["date().gettime",{"_index":685,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["date(document.creation_date",{"_index":822,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["date:'dd.mm.yy",{"_index":885,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["date:\\'dd.mm.yy",{"_index":895,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["deal",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dealings",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["declarations",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":798,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{}}}],["default",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["defines",{"_index":814,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["delete",{"_index":632,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deleted",{"_index":641,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deletedimension(dimension",{"_index":636,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deleteexample",{"_index":934,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["deleteitem",{"_index":386,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["deleteitem(node",{"_index":416,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deletekeyword(keyword",{"_index":642,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deletenode",{"_index":387,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["deletenode(nodes",{"_index":418,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dependencies",{"_index":194,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":363,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deutch",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["dev",{"_index":1164,"title":{},"body":{"index.html":{}}}],["development",{"_index":1160,"title":{},"body":{"index.html":{}}}],["dim",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{}}}],["dimension",{"_index":590,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dimensions",{"_index":928,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["dimformatted",{"_index":598,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dims",{"_index":927,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["direction",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["directives",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1172,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1176,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":876,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["disabled\\'}}apply",{"_index":894,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["display",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["displayed",{"_index":835,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["displayedcolumns",{"_index":744,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["displaying",{"_index":994,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["displays",{"_index":810,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["dist",{"_index":1175,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["doc",{"_index":767,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["doc.id",{"_index":859,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["document",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["document.creation_date",{"_index":821,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["document.id",{"_index":858,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["documentation",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{},"coverage.html":{}}}],["documentation'},{'name",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["documentation.component.html",{"_index":898,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.scss",{"_index":897,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation/documentation.component",{"_index":338,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["documentationcomponent",{"_index":174,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documents",{"_index":756,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["documentsurl",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentview/document",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["documentviewtablecomponent",{"_index":176,"title":{"components/DocumentViewTableComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["doe",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["doesnt",{"_index":673,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dom",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["down",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{}}}],["download",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["download(document",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{}}}],["downloadurl",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{}}}],["drag",{"_index":528,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragdropmodule",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["dragnode",{"_index":529,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandoverarea",{"_index":534,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandovernode",{"_index":532,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandovertime",{"_index":533,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandoverwaittimems",{"_index":530,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["drop",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["drop(event",{"_index":647,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dropdim(event",{"_index":579,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dropkey(event",{"_index":583,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["duration",{"_index":606,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dynamic",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1186,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":344,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":349,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":347,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":370,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["edit",{"_index":725,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{}}}],["edit.checked",{"_index":874,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["editediting",{"_index":893,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["editing",{"_index":873,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["elem",{"_index":630,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["element",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["element(by.css('app",{"_index":352,"title":{},"body":{"classes/AppPage.html":{}}}],["element.creation_date",{"_index":884,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.keywords",{"_index":887,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.language",{"_index":881,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.size",{"_index":882,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.title",{"_index":879,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.type",{"_index":880,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["elementref",{"_index":442,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["emptyitem",{"_index":536,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["enabled",{"_index":875,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["end",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["english",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["enter",{"_index":587,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["entered",{"_index":916,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["environment",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.serverurl",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["environments/environment",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["err",{"_index":861,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["error",{"_index":841,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["error(\"method",{"_index":461,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DocumentViewTableComponent.html":{}}}],["event.body",{"_index":1022,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["event.container",{"_index":649,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.container.data",{"_index":652,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.currentindex",{"_index":582,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.datatransfer.setdata('foo",{"_index":676,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.datatransfer.setdragimage(this.emptyitem.nativeelement",{"_index":677,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.offsetx",{"_index":690,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.offsety",{"_index":693,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.preventdefault",{"_index":680,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.previouscontainer",{"_index":648,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.previousindex",{"_index":581,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.target.clientheight",{"_index":694,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.target.clientwidth",{"_index":691,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.target.focus",{"_index":834,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["event.total",{"_index":1017,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["event.type",{"_index":1007,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["events",{"_index":1104,"title":{},"body":{"injectables/UploadService.html":{}}}],["example",{"_index":7,"title":{},"body":{"injectables/ApiService.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"injectables/UploadService.html":{}}}],["execute",{"_index":1183,"title":{},"body":{"index.html":{}}}],["existingnode",{"_index":566,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["existingnode.item",{"_index":569,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["expand",{"_index":682,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["expandable",{"_index":453,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["expansion",{"_index":956,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["export",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{}}}],["exports",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["failed(check",{"_index":1000,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["failure",{"_index":950,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["false",{"_index":506,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["fetched",{"_index":930,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["field",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["file.file.name",{"_index":1024,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["file.icon",{"_index":1002,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["file.name",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["file.progress",{"_index":1015,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["file.status",{"_index":999,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["filekey",{"_index":907,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["filelist",{"_index":980,"title":{},"body":{"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{}}}],["filename",{"_index":878,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["files",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"index.html":{}}}],["files[0",{"_index":1056,"title":{},"body":{"components/HomeComponent.html":{}}}],["fileuploadcomponent",{"_index":180,"title":{"components/FileUploadComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fill",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["fills",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["filter",{"_index":757,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["filtered",{"_index":811,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["filtereddata",{"_index":836,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["filterstring",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{}}}],["finding",{"_index":513,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["firefox",{"_index":671,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["fitness",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["fixed",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["flag",{"_index":1178,"title":{},"body":{"index.html":{}}}],["flat",{"_index":511,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatitem",{"_index":452,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode",{"_index":568,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode.expandable",{"_index":572,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode.item",{"_index":570,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode.level",{"_index":571,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnodemap",{"_index":515,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flattened",{"_index":516,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flattreecontrol",{"_index":448,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":545,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flex",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{}}}],["flexbox",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["focus",{"_index":592,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["focus(event",{"_index":768,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["following",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["footer",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["form",{"_index":908,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["formatted",{"_index":594,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["formdata",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["formdata.append('file",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{}}}],["formdata.append('filekey",{"_index":1097,"title":{},"body":{"injectables/UploadService.html":{}}}],["formdata.append('test",{"_index":1098,"title":{},"body":{"injectables/UploadService.html":{}}}],["formsmodule",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":627,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["free",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["from.children",{"_index":491,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["from.children.foreach(child",{"_index":492,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["from.item",{"_index":490,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["front",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["frontend",{"_index":1155,"title":{},"body":{"index.html":{}}}],["functionality",{"_index":715,"title":{},"body":{"components/DashboardComponent.html":{}}}],["furnished",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["further",{"_index":1187,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1171,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1157,"title":{},"body":{"index.html":{}}}],["getchildren",{"_index":554,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getdata",{"_index":440,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["getlevel",{"_index":550,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getparent",{"_index":388,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["getparent(currentroot",{"_index":422,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["getparentfromnodes",{"_index":389,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["getparentfromnodes(node",{"_index":425,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["gets",{"_index":585,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getting",{"_index":1153,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":345,"title":{},"body":{"classes/AppPage.html":{}}}],["getuncategorizeddimensions",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{}}}],["getuncategorizedkeywords",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{}}}],["go",{"_index":1190,"title":{},"body":{"index.html":{}}}],["granted",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["graph",{"_index":1196,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":729,"title":{},"body":{"components/DashboardComponent.html":{}}}],["h2",{"_index":966,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["handle",{"_index":681,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledragend(event",{"_index":705,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledragover(event",{"_index":679,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledragstart(event",{"_index":664,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledrop(event",{"_index":699,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handlefileinput",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{}}}],["handlefileinput(files",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["handles",{"_index":993,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["handling",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["haschild",{"_index":555,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["hasnocontent",{"_index":559,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["header",{"_index":958,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["headers",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{},"injectables/UploadService.html":{}}}],["health",{"_index":940,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["height",{"_index":964,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["hello",{"_index":952,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["help",{"_index":1188,"title":{},"body":{"index.html":{}}}],["helps",{"_index":512,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["hereby",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["hh:mm",{"_index":886,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["holders",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["home.component.html",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":182,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["html5",{"_index":674,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["http",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://ec2",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1166,"title":{},"body":{"index.html":{}}}],["http://localhost:5000",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["httpclientmodule",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1094,"title":{},"body":{"injectables/UploadService.html":{}}}],["httpevent",{"_index":986,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype",{"_index":987,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype.response",{"_index":1020,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype.responseheader",{"_index":1011,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype.sent",{"_index":1009,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype.uploadprogress",{"_index":1014,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpheaders",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["httpoptions",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["httpresponse",{"_index":1093,"title":{},"body":{"injectables/UploadService.html":{}}}],["https://stackoverflow.com/questions/19055264/why",{"_index":672,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["icon",{"_index":992,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["iconpath",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["id",{"_index":920,"title":{},"body":{"components/DocumentationComponent.html":{},"interfaces/IDocument.html":{}}}],["identifier",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["idoc",{"_index":842,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"injectables/UploadService.html":{}}}],["idoc.keywords.includes(keyword",{"_index":843,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["idoc.keywords.push(keyword",{"_index":844,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["idoc.keywords.sort",{"_index":845,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["idoc.title",{"_index":848,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["idocument",{"_index":804,"title":{"interfaces/IDocument.html":{}},"body":{"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["idx",{"_index":998,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["if(!from",{"_index":487,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(!this.isduplicate(this.uncatdimensions",{"_index":601,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(!this.isduplicate(this.uncatkeywords",{"_index":616,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(dimformatted",{"_index":600,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(keyformatted",{"_index":615,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(newitem",{"_index":665,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["ifile",{"_index":983,"title":{"interfaces/IFile.html":{}},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["implemented",{"_index":462,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["implements",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["implied",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["import",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{}}}],["important",{"_index":965,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["imports",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["included",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["including",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":931,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["infineon",{"_index":722,"title":{},"body":{"components/DashboardComponent.html":{}}}],["infinitag",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{}}}],["information",{"_index":454,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["initialize",{"_index":390,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"injectables/UploadService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"injectables/UploadService.html":{},"overview.html":{}}}],["input",{"_index":591,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["inputs",{"_index":755,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["insert",{"_index":654,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["inserted",{"_index":521,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insertitem",{"_index":391,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["insertitem(parent",{"_index":428,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insertitemabove",{"_index":392,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["insertitemabove(node",{"_index":432,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insertitembelow",{"_index":393,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["insertitembelow(node",{"_index":434,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["interface",{"_index":990,"title":{"interfaces/IDocument.html":{},"interfaces/IFile.html":{}},"body":{"components/FileUploadComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["interfaces",{"_index":1068,"title":{},"body":{"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"overview.html":{}}}],["interval",{"_index":745,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["isallselected",{"_index":750,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["isduplicate(arr",{"_index":628,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["isexpandable",{"_index":552,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["isnewitem:boolean",{"_index":505,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["item",{"_index":373,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["item's",{"_index":523,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["itemflatnode",{"_index":408,"title":{"classes/ItemFlatNode.html":{}},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["itemnode",{"_index":404,"title":{"classes/ItemNode.html":{}},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["items",{"_index":376,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["itemvalue",{"_index":661,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["jjohn",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["jquery",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":368,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":960,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["karma",{"_index":1185,"title":{},"body":{"index.html":{}}}],["keep",{"_index":517,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["key",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keyformatted",{"_index":613,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keys",{"_index":936,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["keyword",{"_index":611,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keyword).subscribe",{"_index":854,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["keywords",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/IDocument.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywords'},{'name",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["keywords.component.html",{"_index":501,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywords.component.scss",{"_index":502,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywords/keywords.component",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["keywordscomponent",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["kind",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["language",{"_index":787,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"interfaces/IDocument.html":{}}}],["later",{"_index":565,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["layout",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["learning",{"_index":720,"title":{},"body":{"components/DashboardComponent.html":{}}}],["left",{"_index":962,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["legend",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["level",{"_index":399,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["liability",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["liable",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["license",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["limitation",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["limited",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["listitem",{"_index":407,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["listitem.item",{"_index":489,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["literal",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["machine",{"_index":719,"title":{},"body":{"components/DashboardComponent.html":{}}}],["make",{"_index":941,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["map",{"_index":510,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["maps",{"_index":564,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["margin",{"_index":735,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["mastertoggle",{"_index":751,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["mat",{"_index":728,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["mataccordion",{"_index":900,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["matbuttonmodule",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglemodule",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["math.round(event.loaded",{"_index":1016,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["maticonmodule",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodule",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":446,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["matsnackbarmodule",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["matsort",{"_index":797,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["matsortmodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["mattable",{"_index":801,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["mattabledatasource",{"_index":785,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["mattablemodule",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["mattreeflatdatasource",{"_index":450,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":547,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreeflattener",{"_index":451,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreeflattener(this.transformer",{"_index":540,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreemodule",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1025,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["merchantability",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["merge",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["message",{"_index":948,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["metadata",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["methods",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["miscellaneous",{"_index":1200,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/idocument.model",{"_index":805,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["modified",{"_index":514,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["modify",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["module",{"_index":191,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":193,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1189,"title":{},"body":{"index.html":{}}}],["moveiteminarray",{"_index":444,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["moveiteminarray(event.container.data",{"_index":650,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["moveiteminarray(this.uncatdimensions",{"_index":580,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["moveiteminarray(this.uncatkeywords",{"_index":584,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mykeywords",{"_index":790,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["name",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["nav",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1165,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":346,"title":{},"body":{"classes/AppPage.html":{}}}],["nested",{"_index":465,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nestednode",{"_index":662,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nestednodemap",{"_index":520,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["new",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"coverage.html":{},"index.html":{}}}],["newdimension",{"_index":503,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newitem",{"_index":478,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newitem:any",{"_index":507,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newitemname",{"_index":524,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newkeyword",{"_index":504,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["ng",{"_index":1162,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":752,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["ngonchanges(changes",{"_index":772,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["ngoninit",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node",{"_index":371,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.children",{"_index":474,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.children.length",{"_index":499,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.expandable",{"_index":553,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.item",{"_index":471,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.level",{"_index":551,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes",{"_index":421,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes.foreach(node",{"_index":498,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes.indexof(nodetodelete",{"_index":496,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes.splice(index",{"_index":497,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodetodelete",{"_index":419,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["none",{"_index":892,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["noninfringement",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notice",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["now",{"_index":716,"title":{},"body":{"components/DashboardComponent.html":{}}}],["null",{"_index":472,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["number",{"_index":400,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["obj",{"_index":405,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["obj[key",{"_index":470,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["object",{"_index":369,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentViewTableComponent.html":{},"injectables/UploadService.html":{}}}],["observe",{"_index":1103,"title":{},"body":{"injectables/UploadService.html":{}}}],["obtaining",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["of(idoc",{"_index":846,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["onchanges",{"_index":738,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["ondimenter",{"_index":597,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["oninit",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["onkey",{"_index":753,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["onkey(event",{"_index":777,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["onkeyenter",{"_index":612,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["onselectfile",{"_index":974,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onselectfile(files",{"_index":979,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["open_in_new",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["option.tolowercase().startswith(filter",{"_index":872,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["optional",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["order",{"_index":815,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["otherwise",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["out",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":891,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["overflow",{"_index":1027,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["overview",{"_index":1197,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1135,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["panel",{"_index":957,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["param",{"_index":624,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["parent",{"_index":431,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parent.children",{"_index":477,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parent.children.push(newitem",{"_index":479,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parentnode",{"_index":481,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parentnode.children.splice(parentnode.children.indexof(node",{"_index":483,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parses",{"_index":996,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["particular",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["patch",{"_index":849,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{}}}],["patchkeywords",{"_index":1086,"title":{},"body":{"injectables/UploadService.html":{}}}],["patchkeywords(idoc",{"_index":1089,"title":{},"body":{"injectables/UploadService.html":{}}}],["path",{"_index":359,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["percentagex",{"_index":689,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["percentagey",{"_index":692,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["permission",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["permit",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["person",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["persons",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["popper.js",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["position",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["post",{"_index":905,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["post(`${environment.serverurl}/upload",{"_index":1101,"title":{},"body":{"injectables/UploadService.html":{}}}],["postexample",{"_index":937,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["postfile",{"_index":1087,"title":{},"body":{"injectables/UploadService.html":{}}}],["postfile(file",{"_index":1091,"title":{},"body":{"injectables/UploadService.html":{}}}],["present",{"_index":609,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["pressed",{"_index":588,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["private",{"_index":537,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["prod",{"_index":1177,"title":{},"body":{"index.html":{}}}],["production",{"_index":1179,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":991,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["project",{"_index":1156,"title":{},"body":{"index.html":{}}}],["promise",{"_index":348,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["protractor",{"_index":350,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provided",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["providedin",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["providers",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"overview.html":{}}}],["public",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["publish",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["purpose",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["query",{"_index":925,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["quey",{"_index":929,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["reached",{"_index":926,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["read",{"_index":593,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["reading",{"_index":923,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["readme",{"_index":1192,"title":{},"body":{"index.html":{}}}],["received",{"_index":1013,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["record",{"_index":563,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["regarding",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{}}}],["reload",{"_index":1168,"title":{},"body":{"index.html":{}}}],["remaining",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["removed",{"_index":635,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["removeuncategorizeddimension",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeuncategorizeddimension(dim",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeuncategorizedkeyword",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeuncategorizedkeyword(key",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{}}}],["reportprogress",{"_index":1102,"title":{},"body":{"injectables/UploadService.html":{}}}],["representing",{"_index":713,"title":{},"body":{"components/DashboardComponent.html":{}}}],["represents",{"_index":372,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["request",{"_index":633,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["require",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":670,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["res",{"_index":855,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["reset",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":1012,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["restriction",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["result",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["returns",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["right",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["rights",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["root",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/UploadService.html":{}}}],["root'},{'name",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["route",{"_index":954,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["routermodule",{"_index":357,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":360,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":356,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["rows",{"_index":865,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["run",{"_index":1161,"title":{},"body":{"index.html":{}}}],["running",{"_index":943,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["rxjs",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":989,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["same",{"_index":518,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["save",{"_index":659,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["saved",{"_index":911,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["savenode(node",{"_index":660,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["scaffolding",{"_index":1170,"title":{},"body":{"index.html":{}}}],["search",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{}}}],["search'},{'name",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["search(value",{"_index":779,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["search.component.html",{"_index":1080,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":1079,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search.component",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["searchcomponent",{"_index":186,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searches",{"_index":869,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["select",{"_index":653,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selected",{"_index":458,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["selectedkeywords",{"_index":746,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["selectedkwm",{"_index":459,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedparent",{"_index":522,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selection",{"_index":519,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selectionchange(event",{"_index":706,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selectionmodel",{"_index":806,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["selectionmodel(true",{"_index":795,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["selector",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["sell",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["send",{"_index":596,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["sendfiletoservice",{"_index":975,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["sendfiletoservice(file",{"_index":982,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["sends",{"_index":631,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["sent",{"_index":913,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["serve",{"_index":1163,"title":{},"body":{"index.html":{}}}],["server",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{},"index.html":{}}}],["serverstatus",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["serverurl",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["services/api.service",{"_index":447,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["services/upload.service",{"_index":809,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["setdatasource",{"_index":754,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["settimeout",{"_index":824,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["settings",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1084,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":1083,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["settingscomponent",{"_index":188,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shall",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shut",{"_index":951,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["shutting",{"_index":949,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["simplechanges",{"_index":773,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["size",{"_index":788,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"interfaces/IDocument.html":{}}}],["snackbar",{"_index":538,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["software",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{}}}],["solid",{"_index":733,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solution",{"_index":721,"title":{},"body":{"components/DashboardComponent.html":{}}}],["sort",{"_index":747,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["space",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{}}}],["span')).gettext",{"_index":353,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../keywords.component.ts",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":354,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:34",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":708,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:39",{"_index":711,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:43",{"_index":712,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/documentation/documentation.component.ts",{"_index":896,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{}}}],["src/app/documentation/documentation.component.ts:34",{"_index":902,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/documentview/document",{"_index":736,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"coverage.html":{}}}],["src/app/file",{"_index":970,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:36",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:37",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:38",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:39",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:40",{"_index":1053,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:41",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:43",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:45",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:46",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:50",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:58",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:68",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/keywords/keywords.component.ts",{"_index":362,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/keywords/keywords.component.ts:115",{"_index":429,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:125",{"_index":433,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:137",{"_index":435,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:149",{"_index":426,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:160",{"_index":423,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:177",{"_index":437,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:182",{"_index":417,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:187",{"_index":409,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:204",{"_index":412,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:220",{"_index":414,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:237",{"_index":420,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:37",{"_index":1076,"title":{},"body":{"classes/ItemNode.html":{}}}],["src/app/keywords/keywords.component.ts:38",{"_index":1077,"title":{},"body":{"classes/ItemNode.html":{}}}],["src/app/keywords/keywords.component.ts:43",{"_index":1074,"title":{},"body":{"classes/ItemFlatNode.html":{}}}],["src/app/keywords/keywords.component.ts:44",{"_index":1075,"title":{},"body":{"classes/ItemFlatNode.html":{}}}],["src/app/keywords/keywords.component.ts:45",{"_index":1073,"title":{},"body":{"classes/ItemFlatNode.html":{}}}],["src/app/keywords/keywords.component.ts:64",{"_index":415,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:67",{"_index":439,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:69",{"_index":397,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:75",{"_index":427,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:96",{"_index":401,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/models/idocument.model.ts",{"_index":1069,"title":{},"body":{"interfaces/IDocument.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts",{"_index":1078,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:40",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:44",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:48",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:52",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:61",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:70",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:79",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/upload.service.ts",{"_index":1085,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/services/upload.service.ts:44",{"_index":1088,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:50",{"_index":1092,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:63",{"_index":1090,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/settings/settings.component.ts",{"_index":1082,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1131,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1154,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":384,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["status",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["stops",{"_index":946,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["stopserver",{"_index":945,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["stored",{"_index":1174,"title":{},"body":{"index.html":{}}}],["string",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":402,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["structured",{"_index":367,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["style",{"_index":732,"title":{},"body":{"components/DashboardComponent.html":{}}}],["styles",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["styleurls",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["sub",{"_index":403,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["subject",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["sublicense",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["subscribe((data",{"_index":467,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["subscribe((event",{"_index":1005,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["subscribe((response",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscribe((value",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["subscribe(res",{"_index":603,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["subscription",{"_index":792,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["substantial",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["succedes",{"_index":634,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["succesfull",{"_index":851,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["succesfully",{"_index":932,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["success",{"_index":947,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["successfully",{"_index":910,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["support",{"_index":1193,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":942,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["svg",{"_index":1194,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1006,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["tab",{"_index":714,"title":{},"body":{"components/DashboardComponent.html":{}}}],["table",{"_index":739,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["table.component",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["table.component.html",{"_index":741,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.scss",{"_index":740,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts",{"_index":737,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:103",{"_index":774,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:114",{"_index":769,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:126",{"_index":770,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:140",{"_index":771,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:154",{"_index":783,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:172",{"_index":766,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:193",{"_index":764,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:208",{"_index":778,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:218",{"_index":780,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:54",{"_index":794,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:55",{"_index":759,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:58",{"_index":791,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:60",{"_index":800,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:61",{"_index":803,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:62",{"_index":793,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:63",{"_index":761,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:64",{"_index":762,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:65",{"_index":786,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:66",{"_index":796,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:67",{"_index":784,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:70",{"_index":776,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:84",{"_index":782,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":813,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["template",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["templateurl",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["term",{"_index":781,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["test",{"_index":1182,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1181,"title":{},"body":{"index.html":{}}}],["thin",{"_index":734,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.addkeywordtodoc(doc",{"_index":853,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.api.adduncategorizeddimension(dimformatted",{"_index":602,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.adduncategorizedkeyword(keyformatted",{"_index":617,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.getuncategorizeddimensions",{"_index":576,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.getuncategorizedkeywords",{"_index":466,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.removeuncategorizeddimension(dimension",{"_index":638,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.removeuncategorizedkeyword(keyword",{"_index":644,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.applykeyword(doc",{"_index":867,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.breakpoint",{"_index":819,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.buildfiletree(value",{"_index":475,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.copypasteitem(child",{"_index":493,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.data.splice(this.data.indexof(node",{"_index":484,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.copypasteitem(this.flatnodemap.get(this.dragnode",{"_index":702,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.copypasteitemabove(this.flatnodemap.get(this.dragnode",{"_index":700,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.copypasteitembelow(this.flatnodemap.get(this.dragnode",{"_index":701,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.datachange.next(tree_data[event[0].value",{"_index":707,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.deleteitem(this.flatnodemap.get(this.dragnode",{"_index":703,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.insertitem(parentnode",{"_index":657,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.updateitem(nestednode",{"_index":663,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datachange.next(this.data",{"_index":480,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datachange.value",{"_index":463,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datasource",{"_index":546,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datasource.data",{"_index":549,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datasource.filter",{"_index":832,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.datasource.filtereddata",{"_index":837,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.datasource.sort",{"_index":825,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.deletenode(node.children",{"_index":500,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.deletenode(this.data",{"_index":486,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.documents",{"_index":823,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{}}}],["this.documents.findindex(document",{"_index":857,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.documents.push(response",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.documentsurl}/download",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.documentsurl}/upload",{"_index":1052,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.downloadurl}/${document.title",{"_index":1064,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.dragnode",{"_index":666,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnode.item",{"_index":667,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandoverarea",{"_index":696,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandovernode",{"_index":683,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandovertime",{"_index":686,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandoverwaittimems",{"_index":687,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.files",{"_index":997,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["this.flatnodemap.get(node",{"_index":656,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.flatnodemap.set(flatnode",{"_index":573,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getchildren",{"_index":543,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getlevel",{"_index":541,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getparent(child",{"_index":485,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getparentfromnodes(node",{"_index":482,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.http.delete(`${environment.serverurl}/dims/${dim",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.delete(`${environment.serverurl}/keys/${key",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${environment.serverurl}/dims",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${environment.serverurl}/keys",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${environment.serverurl}/dims",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${environment.serverurl}/keys",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient",{"_index":1100,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.httpclient.delete('/dims/123456",{"_index":935,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.delete('/keys/123456",{"_index":939,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.delete(\\'/dims/123456",{"_index":967,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.delete(\\'/keys/123456",{"_index":969,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.get(this.backendstatus",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["this.httpclient.get(this.documentsurl",{"_index":1054,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.httpclient.get(url",{"_index":1065,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.httpclient.patch(`${environment.serverurl}/changekeywords",{"_index":1105,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.httpclient.post('/keys",{"_index":938,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.post(\\'/keys",{"_index":968,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.post(this.uploadurl",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.initialize",{"_index":464,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.insertitem(to",{"_index":488,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.insertitemabove(to",{"_index":494,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.insertitembelow(to",{"_index":495,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.isexpandable",{"_index":542,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.isnewitem",{"_index":668,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywords",{"_index":575,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywords.filter(option",{"_index":871,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.nestednodemap.get(node",{"_index":567,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.nestednodemap.set(node",{"_index":574,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newdimension",{"_index":610,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newdimension.trim().tolowercase",{"_index":599,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newitem",{"_index":669,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newkeyword",{"_index":620,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newkeyword.trim().tolowercase",{"_index":614,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.ngoninit",{"_index":830,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.search(event.target.value",{"_index":868,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.selectedkeywords",{"_index":818,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.selection.select(row",{"_index":838,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.selection.selected.foreach(doc",{"_index":866,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.selection.selected.length",{"_index":863,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.serverstatus",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["this.serverurl}/documents",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.serverurl}/health",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["this.setdatasource",{"_index":817,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.snackbar.open('no",{"_index":864,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.snackbar.open(`${dimension",{"_index":640,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${dimformatted",{"_index":605,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${keyformatted",{"_index":619,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${keyword",{"_index":646,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(err",{"_index":862,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.sort",{"_index":826,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.treecontrol",{"_index":544,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.collapse(node",{"_index":678,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.expand(node",{"_index":658,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.expanddescendants(this.nestednodemap.get(newitem",{"_index":704,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.isexpanded(node",{"_index":684,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treeflattener",{"_index":539,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions",{"_index":577,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions.indexof(dimension",{"_index":637,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions.push(dimformatted",{"_index":604,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions.splice(index",{"_index":639,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords",{"_index":578,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords.indexof(keyword",{"_index":643,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords.push(keyformatted",{"_index":618,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords.splice(index",{"_index":645,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uploadservice.patchkeywords(res).subscribe",{"_index":856,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["thorws",{"_index":840,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["through",{"_index":812,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["throw",{"_index":460,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["throwerror",{"_index":808,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["throwerror('keyword",{"_index":847,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["throwerror(error",{"_index":1004,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["tile",{"_index":730,"title":{},"body":{"components/DashboardComponent.html":{}}}],["time",{"_index":1071,"title":{},"body":{"interfaces/IDocument.html":{}}}],["title",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{}}}],["toggle",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["tort",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["transferarrayitem",{"_index":445,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["transferarrayitem(event.previouscontainer.data",{"_index":651,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["transformer",{"_index":561,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["tree",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["tree_data",{"_index":456,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treecontrol",{"_index":525,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["treeflattener",{"_index":526,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["true",{"_index":626,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":473,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["uncatdimensions",{"_index":508,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["uncategorized",{"_index":589,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["uncatkeywords",{"_index":509,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["undefined",{"_index":760,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["under",{"_index":378,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["unit",{"_index":1180,"title":{},"body":{"index.html":{}}}],["unsuccessful",{"_index":924,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["up",{"_index":944,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["update",{"_index":850,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["updated",{"_index":852,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{}}}],["updateing",{"_index":1095,"title":{},"body":{"injectables/UploadService.html":{}}}],["updateitem",{"_index":394,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["updateitem(node",{"_index":436,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["updates",{"_index":827,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["upload",{"_index":904,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["upload'},{'name",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["upload.component",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["upload.component.html",{"_index":973,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["upload.component.scss",{"_index":972,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["upload.component.ts",{"_index":971,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["upload.component.ts:48",{"_index":977,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:52",{"_index":978,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:59",{"_index":981,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:73",{"_index":984,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload/file",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["uploading",{"_index":1018,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["uploadservice",{"_index":758,"title":{"injectables/UploadService.html":{}},"body":{"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["uploadurl",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{}}}],["use",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"index.html":{}}}],["used",{"_index":995,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["uses",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["using",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["value",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["value.status",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["value.tolowercase",{"_index":870,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["var",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["variable",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1201,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1159,"title":{},"body":{"index.html":{}}}],["via",{"_index":1184,"title":{},"body":{"index.html":{}}}],["view",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":441,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["viewchild('emptyitem",{"_index":535,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["viewchild(mataccordion",{"_index":901,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["viewchild(matsort",{"_index":799,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["viewchild(mattable",{"_index":802,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["void",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["warranties",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["warranty",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["welcome",{"_index":717,"title":{},"body":{"components/DashboardComponent.html":{}}}],["well",{"_index":595,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["whether",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["width",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{}}}],["window.innerwidth",{"_index":820,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["without",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["work",{"_index":675,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["works",{"_index":1081,"title":{},"body":{"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["world",{"_index":953,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["yes",{"_index":410,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["zone.js",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addUncategorizedDimension\n                            \n                            \n                                    Public\n                                addUncategorizedKeyword\n                            \n                            \n                                    Public\n                                getUncategorizedDimensions\n                            \n                            \n                                    Public\n                                getUncategorizedKeywords\n                            \n                            \n                                    Public\n                                removeUncategorizedDimension\n                            \n                            \n                                    Public\n                                removeUncategorizedKeyword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addUncategorizedDimension\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUncategorizedDimension(dim)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dim\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addUncategorizedKeyword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUncategorizedKeyword(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUncategorizedDimensions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUncategorizedDimensions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUncategorizedKeywords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUncategorizedKeywords()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeUncategorizedDimension\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUncategorizedDimension(dim)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dim\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeUncategorizedKeyword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUncategorizedKeyword(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\nimport { Observable } from 'rxjs';\n\n/**\n *\n * @class ApiService\n *\n * Service handling communication regarding the keywords with the backend\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  public getUncategorizedDimensions() {\n    return this.http.get(`${environment.serverUrl}/dims`);\n  }\n\n  public getUncategorizedKeywords() {\n    return this.http.get(`${environment.serverUrl}/keys`);\n  }\n\n  public addUncategorizedDimension(dim): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(`${environment.serverUrl}/dims`, { dim: dim }, httpOptions);\n  }\n\n  public addUncategorizedKeyword(key): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(`${environment.serverUrl}/keys`, { key: key }, httpOptions);\n  }\n\n  public removeUncategorizedDimension(dim): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.delete(`${environment.serverUrl}/dims/${dim}`, httpOptions);\n  }\n\n  public removeUncategorizedKeyword(key): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.delete(`${environment.serverUrl}/keys/${key}`, httpOptions);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backendStatus\n                            \n                            \n                                    Public\n                                iconPath\n                            \n                            \n                                    Public\n                                serverStatus\n                            \n                            \n                                    Public\n                                serverUrl\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backendStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.serverUrl}/health`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/img/InfiniTag1.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DOWN'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.serverUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'infinitag'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../environments/environment';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  public title = 'infinitag';\n  public serverUrl = environment.serverUrl;\n  public backendStatus = `${this.serverUrl}/health`;\n  public serverStatus = 'DOWN';\n\n  public iconPath = 'assets/img/InfiniTag1.png';\n\n\n  constructor(private httpClient: HttpClient) {\n  }\n  public ngOnInit(): void {\n    this.httpClient.get(this.backendStatus)\n      .subscribe((value: { status: string }) => {\n        this.serverStatus = value.status;\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      Home\n      Search\n      Settings\n      Keywords\n      Dashboard\n      Documentation\n      \n        API Documentation\n        Front End Documentation open_in_new\n        Back End Documentation open_in_new\n      \n    \n    \n    \n    Server Status: {{serverStatus}}\n      JJohn Doe \n      \n        \n          \n            English\n            Deutch\n          \n        \n      \n\n  \n\n\n\n\n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .fill-remaining-space {\n  /* This fills the remaining space, by using flexbox.\n     Every toolbar row uses a flexbox row layout. */\n  flex: 1 1 auto;\n}\n\n.nav-buttons {\n  display: flex;\n  flex-direction: column;\n  padding-top: 10%;\n}\n.footer {\n    width: 200px;\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Home      Search      Settings      Keywords      Dashboard      Documentation              API Documentation        Front End Documentation open_in_new        Back End Documentation open_in_new                      Server Status: {{serverStatus}}      JJohn Doe                                     English            Deutch                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDocumentViewTableComponent\n\nDocumentViewTableComponent\n\nAppModule -->\n\nDocumentViewTableComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\nAppModule -->\n\nFileUploadComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nKeywordsComponent\n\nKeywordsComponent\n\nAppModule -->\n\nKeywordsComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            DocumentViewTableComponent\n                        \n                        \n                            DocumentationComponent\n                        \n                        \n                            FileUploadComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            KeywordsComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * @license\n * InfiniTag\n * Copyright (c) AMOS-5.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { AppComponent } from './app.component';\nimport { DocumentViewTableComponent } from './documentview/document-view-table.component';\nimport { HomeComponent } from './home/home.component';\nimport { SearchComponent } from './search/search.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\nimport { DocumentationComponent } from './documentation/documentation.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { KeywordsComponent } from './keywords/keywords.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent,\n    SettingsComponent,\n    DocumentViewTableComponent,\n    HomeComponent,\n    FileUploadComponent,\n    DashboardComponent,\n    DocumentationComponent,\n    KeywordsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    MatTableModule,\n    MatSortModule,\n    BrowserAnimationsModule,\n    MatChipsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatListModule,\n    MatProgressBarModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatButtonToggleModule,\n    DragDropModule,\n    MatTreeModule,\n    MatExpansionModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /**\n * @license\n * InfiniTag\n * Copyright (c) AMOS-5.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { SearchComponent } from './search/search.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { KeywordsComponent } from './keywords/keywords.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport {DocumentationComponent} from './documentation/documentation.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'search', component: SearchComponent },\n  { path: 'settings', component: SettingsComponent },\n  { path: 'keywords', component: KeywordsComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'documentation', component: DocumentationComponent },\n  { path: '**', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChecklistDatabase.html":{"url":"injectables/ChecklistDatabase.html","title":"injectable - ChecklistDatabase","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChecklistDatabase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/keywords/keywords.component.ts\n        \n\n            \n                Description\n            \n            \n                Checklist database, it can build a tree structured Json object.\nEach node in Json object represents a item or a category.\nIf a node is a category, it has children items and new items can be added under the category.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildFileTree\n                            \n                            \n                                copyPasteItem\n                            \n                            \n                                copyPasteItemAbove\n                            \n                            \n                                copyPasteItemBelow\n                            \n                            \n                                    Static\n                                data\n                            \n                            \n                                deleteItem\n                            \n                            \n                                deleteNode\n                            \n                            \n                                getParent\n                            \n                            \n                                getParentFromNodes\n                            \n                            \n                                initialize\n                            \n                            \n                                insertItem\n                            \n                            \n                                insertItemAbove\n                            \n                            \n                                insertItemBelow\n                            \n                            \n                                updateItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/keywords/keywords.component.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildFileTree\n                        \n                        \n                    \n                \n            \n            \n                \nbuildFileTree(obj: object, level: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:96\n                \n            \n\n\n            \n                \n                    Build the file structure tree. The value is the Json object, or a sub-tree of a Json object.\nThe return value is the list of ItemNode.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyPasteItem\n                        \n                        \n                    \n                \n            \n            \n                \ncopyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listItem\n                                    \n                                                ItemFlatNode\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyPasteItemAbove\n                        \n                        \n                    \n                \n            \n            \n                \ncopyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listItem\n                                    \n                                                ItemFlatNode\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyPasteItemBelow\n                        \n                        \n                    \n                \n            \n            \n                \ncopyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listItem\n                                    \n                                                ItemFlatNode\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data()\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteItem(node: ItemNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteNode\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteNode(nodes: ItemNode[], nodeToDelete: ItemNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                ItemNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nodeToDelete\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent(currentRoot: ItemNode, node: ItemNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentRoot\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentFromNodes\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentFromNodes(node: ItemNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insertItem\n                        \n                        \n                    \n                \n            \n            \n                \ninsertItem(parent: ItemNode, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:115\n                \n            \n\n\n            \n                \n                    Add an item to list \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insertItemAbove\n                        \n                        \n                    \n                \n            \n            \n                \ninsertItemAbove(node: ItemNode, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insertItemBelow\n                        \n                        \n                    \n                \n            \n            \n                \ninsertItemBelow(node: ItemNode, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateItem\n                        \n                        \n                    \n                \n            \n            \n                \nupdateItem(node: ItemNode, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:67\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/keywords/keywords.component.ts:69\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Component, OnInit, Injectable, ViewChild, ElementRef } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '../services/api.service';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Node for item\n */\nexport class ItemNode {\n  children: ItemNode[];\n  item: string;\n}\n\n/** Flatitem node with expandable and level information */\nexport class ItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The Json object for list data.\n */\nlet TREE_DATA: any = [];\n\n/**\n * Currently selected tree data.\n */\nlet selectedKwm: string;\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n  static data(): any {\n    throw new Error(\"Method not implemented.\");\n  }\n  dataChange = new BehaviorSubject([]);\n\n  get data(): ItemNode[] { return this.dataChange.value; }\n\n  constructor(private api: ApiService) {\n    this.initialize();\n  }\n\n  initialize() {\n    //Build the tree nodes from Json object. The result is a list of `ItemNode` with nested\n    //    file node as children.\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n\n      for (var i = 0 ; i ((accumulator, key) => {\n      const value = obj[key];\n      const node = new ItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  /** Add an item to list */\n  insertItem(parent: ItemNode, name: string): ItemNode {\n    if (!parent.children) {\n      parent.children = [];\n    }\n    const newItem = { item: name } as ItemNode;\n    parent.children.push(newItem);\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemAbove(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node), 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemBelow(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node) + 1, 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  getParentFromNodes(node: ItemNode): ItemNode {\n    for (let i = 0; i  0) {\n      for (let i = 0; i  0) {\n          const parent = this.getParent(child, node);\n          if (parent != null) {\n            return parent;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  updateItem(node: ItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n\n  deleteItem(node: ItemNode) {\n    this.deleteNode(this.data, node);\n    this.dataChange.next(this.data);\n  }\n\n  copyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItem(to, listItem.item);\n    } else {\n      newItem = this.insertItem(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItemAbove(to, listItem.item);\n    } else {\n      newItem = this.insertItemAbove(to, from.item);\n    }\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n\n    let newItem;\n    if(!from) {\n      newItem = this.insertItemBelow(to, listItem.item);\n    } else {\n      newItem = this.insertItemBelow(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  deleteNode(nodes: ItemNode[], nodeToDelete: ItemNode) {\n    const index = nodes.indexOf(nodeToDelete, 0);\n    if (index > -1) {\n      nodes.splice(index, 1);\n    } else {\n      nodes.forEach(node => {\n        if (node.children && node.children.length > 0) {\n          this.deleteNode(node.children, nodeToDelete);\n        }\n      });\n    }\n  }\n}\n\n@Component({\n  selector: 'app-keywords',\n  templateUrl: './keywords.component.html',\n  styleUrls: ['./keywords.component.scss'],\n  providers: [ChecklistDatabase]\n})\nexport class KeywordsComponent implements OnInit {\n\n\n  newDimension: string;\n  newKeyword: string;\n  isNewItem:boolean = false;\n  newItem:any;\n  uncatDimensions = []\n  uncatKeywords = []\n  keywords = []\n\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map();\n\n  /** A selected parent node to be inserted */\n  selectedParent: ItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl;\n\n  treeFlattener: MatTreeFlattener;\n\n  dataSource: MatTreeFlatDataSource;\n\n\n  /* Drag and drop */\n  dragNode: any;\n  dragNodeExpandOverWaitTimeMs = 300;\n  dragNodeExpandOverNode: any;\n  dragNodeExpandOverTime: number;\n  dragNodeExpandOverArea: string;\n  @ViewChild('emptyItem') emptyItem: ElementRef;\n\n  constructor(private api: ApiService, private snackBar: MatSnackBar, private database: ChecklistDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = [];\n      this.dataSource.data = data;\n    });\n   }\n\n  getLevel = (node: ItemFlatNode) => node.level;\n\n  isExpandable = (node: ItemFlatNode) => node.expandable;\n\n  getChildren = (node: ItemNode): ItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: ItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: ItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: ItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n      ? existingNode\n      : new ItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = (node.children && node.children.length > 0);\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  ngOnInit(): void {\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n      this.keywords = data;\n    });\n    this.api.getUncategorizedDimensions()\n      .subscribe((data: []) => {\n        this.uncatDimensions = data;\n      });\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.uncatKeywords = data;\n      });\n  }\n\n  dropDim(event: CdkDragDrop) {\n    moveItemInArray(this.uncatDimensions, event.previousIndex, event.currentIndex);\n  }\n\n  dropKey(event: CdkDragDrop) {\n    moveItemInArray(this.uncatKeywords, event.previousIndex, event.currentIndex);\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized dimension\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onDimEnter() {\n    const dimFormatted = this.newDimension.trim().toLowerCase();\n    if(dimFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatDimensions, dimFormatted)) {\n        this.api.addUncategorizedDimension(dimFormatted)\n          .subscribe(res => {\n            this.uncatDimensions.push(dimFormatted)\n            this.snackBar.open(`${dimFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${dimFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newDimension=\"\";\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized keyword\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onKeyEnter() {\n    const keyFormatted = this.newKeyword.trim().toLowerCase();\n    if(keyFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatKeywords, keyFormatted)) {\n        this.api.addUncategorizedKeyword(keyFormatted)\n          .subscribe(res => {\n            this.uncatKeywords.push(keyFormatted)\n            this.snackBar.open(`${keyFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${keyFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newKeyword=\"\";\n  }\n\n  /**\n  * @description\n  * Checks if a value appears in an array\n  * @param array to be checked\n  * @param value to be checked\n  * @returns true if the value was found, false otherwise\n  */\n  private isDuplicate(arr, value) {\n    const index = arr.findIndex((elem) => elem === value);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the dimension is\n  * removed from the list\n  * @param {string} dimension to be removed\n  */\n  public deleteDimension(dimension: string) {\n    const index = this.uncatDimensions.indexOf(dimension);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedDimension(dimension)\n      .subscribe(res => {\n        this.uncatDimensions.splice(index, 1);\n        this.snackBar.open(`${dimension} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the keyword is\n  * removed from the list\n  * @param {string} keyword to be removed\n  */\n  public deleteKeyword(keyword: string) {\n    const index = this.uncatKeywords.indexOf(keyword);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedKeyword(keyword)\n      .subscribe(res => {\n        this.uncatKeywords.splice(index, 1);\n        this.snackBar.open(`${keyword} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: ItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode, '');\n    this.treeControl.expand(node);\n  }\n\n  /** Save the node to database */\n  saveNode(node: ItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this.database.updateItem(nestedNode, itemValue);\n  }\n\n  handleDragStart(event, node, newItem) {\n    if(newItem) {\n      this.dragNode = new ItemFlatNode;\n      this.dragNode.item = node;\n      this.isNewItem = true;\n      this.newItem = this.dragNode;\n    } else {\n      this.dragNode = node;\n    }\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\n    event.dataTransfer.setData('foo', 'bar');\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\n    this.treeControl.collapse(node);\n  }\n\n  handleDragOver(event, node) {\n    event.preventDefault();\n\n    // Handle node expand\n    if (node === this.dragNodeExpandOverNode) {\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\n          this.treeControl.expand(node);\n        }\n      }\n    } else {\n      this.dragNodeExpandOverNode = node;\n      this.dragNodeExpandOverTime = new Date().getTime();\n    }\n\n    // Handle drag area\n    const percentageX = event.offsetX / event.target.clientWidth;\n    const percentageY = event.offsetY / event.target.clientHeight;\n    if (percentageY  0.75) {\n      this.dragNodeExpandOverArea = 'below';\n    } else {\n      this.dragNodeExpandOverArea = 'center';\n    }\n  }\n\n  handleDrop(event, node) {\n    if (node !== this.dragNode) {\n      let newItem: ItemNode;\n      if (this.dragNodeExpandOverArea === 'above') {\n        newItem = this.database.copyPasteItemAbove(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else if (this.dragNodeExpandOverArea === 'below') {\n        newItem = this.database.copyPasteItemBelow(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else {\n        newItem = this.database.copyPasteItem(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      }\n      this.database.deleteItem(this.flatNodeMap.get(this.dragNode));\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\n    }\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n  }\n\n  handleDragEnd(event) {\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n    this.newItem = null;\n    this.isNewItem = false;\n  }\n\n  selectionChange(event){\n    this.database.dataChange.next(TREE_DATA[event[0].value])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:39\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dashboard.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *\n * @class DashboardComponent\n *\n * Component representing the dashboard tab (no functionality right now)\n *\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    Dashboard InfiniTag\n     Welcome to InfiniTag - The automated machine learning software solution of Infineon\n    \n        1\n        2\n        3\n    \n    \n        Edit\n        edit\n    \n    \n\n        \n\n    \n\n\n\n\n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                .container {\n    padding-top: 10px;\n}\nmat-grid-tile{\n    border-style: solid;\n    border-width: thin;\n}\n\n.edit {\n    margin-top: 20px;\n}\n\n.footer {\n    width: 200px;\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n}\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Dashboard InfiniTag     Welcome to InfiniTag - The automated machine learning software solution of Infineon            1        2        3                Edit        edit                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentViewTableComponent.html":{"url":"components/DocumentViewTableComponent.html","title":"component - DocumentViewTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentViewTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/documentview/document-view-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                document-view-table\n            \n\n            \n                styleUrls\n                document-view-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                document-view-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addKeywordToDoc\n                            \n                            \n                                breakpoint\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                interval\n                            \n                            \n                                keywords\n                            \n                            \n                                selectedKeywords\n                            \n                            \n                                selection\n                            \n                            \n                                sort\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyBulkKeywords\n                            \n                            \n                                    Public\n                                applyKeyword\n                            \n                            \n                                    Public\n                                focus\n                            \n                            \n                                    Public\n                                isAllSelected\n                            \n                            \n                                    Public\n                                masterToggle\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onKey\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                    Public\n                                setDatasource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                documents\n                            \n                            \n                                filter\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, uploadService: UploadService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/documentview/document-view-table.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        UploadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        documents\n                    \n                \n                \n                    \n                        Type :         Array | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:64\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyBulkKeywords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyBulkKeywords(keyword)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyKeyword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyKeyword(doc, keyword)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keyword\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    focus(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAllSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the items are selected, false otherwise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            masterToggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    masterToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onKey(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        List of keywords matching search term\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDatasource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDatasource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addKeywordToDoc\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:154\n                            \n                        \n\n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        document\n                                                \n                                                \n                                                        keyword\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breakpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['select', 'title', 'type', 'language', 'size', 'creation_date', 'MyKeywords']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keywords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedKeywords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SelectionModel(true, [])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatTable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatTable, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { IDocument } from '../models/IDocument.model';\n\nimport { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { of, throwError, Observable, Subscription, interval } from 'rxjs';\nimport { ApiService } from '../services/api.service';\n\nimport { UploadService } from '../services/upload.service';\n\n\n/**\n * @class DocumentViewTableComponent\n *\n * Component gets document data from the backend and displays it as a table.\n * The data can be filtered through a search bar and new tags can be added\n * to the documents\n */\n@Component({\n  selector: 'document-view-table',\n  styleUrls: ['document-view-table.component.scss'],\n  templateUrl: 'document-view-table.component.html',\n})\n\nexport class DocumentViewTableComponent implements OnInit, OnChanges {\n\n  keywords: string[] = [];\n  selectedKeywords: string[] = [];\n  constructor(private api: ApiService, private uploadService: UploadService, private snackBar: MatSnackBar) { }\n  // defines order of columns\n  displayedColumns: string[] = ['select', 'title', 'type', 'language', 'size', 'creation_date', 'MyKeywords'];\n\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(MatTable, { static: true }) table: MatTable;\n  interval: Subscription;\n  @Input() documents: Array | undefined;\n  @Input() filter: string | undefined;\n  dataSource = new MatTableDataSource();\n  selection = new SelectionModel(true, []);\n  breakpoint: number;\n\n\n  public ngOnInit() {\n    this.setDatasource();\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.keywords = data;\n        this.selectedKeywords = this.keywords;\n      });\n    this.breakpoint = (window.innerWidth  {\n        document.creation_date = new Date(document.creation_date);\n      });\n\n      this.dataSource.data = this.documents;\n      setTimeout(() => {\n        this.dataSource.sort = this.sort;\n      });\n    }\n  }\n\n\n  /**\n  * @description\n  * Updates the documents list as well as the filter term\n  * @param {SimpleChanges} changes\n  */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.documents) {\n      this.documents = changes.documents.currentValue;\n      this.ngOnInit();\n    }\n\n    if (changes.filter) {\n      this.dataSource.filter = changes.filter.currentValue;\n    }\n  }\n\n  public focus(event) {\n    setTimeout(() => {\n      event.target.focus();\n    }, 0);\n  }\n\n\n  /**\n  * @description\n  * Checks if all currently displayed items are selected\n  * @returns true if the items are selected, false otherwise\n  */\n  public isAllSelected() {\n    const filteredData = this.dataSource.filteredData;\n    for (let i = 0; i  this.selection.select(row));\n  }\n\n  /**\n  * @description\n  * Adds a new keyword to an IDocument object. Thorws an error if the keyword\n  * is already added to the document\n  * @param {IDocument} document\n  * @param {string} keyword\n  * @returns {Observable} Observable of the document\n  */\n  private addKeywordToDoc = (iDoc, keyword): Observable => {\n    if (iDoc.keywords.includes(keyword) === false) {\n      iDoc.keywords.push(keyword);\n      iDoc.keywords.sort();\n      return of(iDoc);\n    } else {\n      return throwError('Keyword already added to ' + iDoc.title);\n    }\n  }\n\n  /**\n  * @description\n  * Adds a keyword to a document, then sends a PATCH request to the backend\n  * to update the document. If the request is succesfull the datasource gets\n  * updated.\n  * @param {IDocument} document\n  * @param {string} keyword\n  */\n  public applyKeyword(doc, keyword) {\n    this.addKeywordToDoc(doc, keyword).subscribe(\n      res => {\n        this.uploadService.patchKeywords(res).subscribe(() => {\n          const index = this.documents.findIndex(document => document.id === doc.id);\n          const data = this.dataSource.data;\n          data.splice(index, 1);\n          this.dataSource.data = data;\n          data.splice(index, 0, doc);\n          this.dataSource.data = data;\n        });\n      },\n      err => this.snackBar.open(err, ``, { duration: 3000 })\n    );\n  }\n\n   /**\n  * @description\n  * Adds a keyword to all selected documents.\n  * @param {string} keyword\n  */\n  public applyBulkKeywords(keyword) {\n    if (this.selection.selected.length === 0) {\n      this.snackBar.open('no rows selected', ``, { duration: 3000 });\n    }\n    this.selection.selected.forEach(doc => {\n      this.applyKeyword(doc, keyword);\n    });\n  }\n\n  /**\n  * @description\n  * Gets called when a key is pressed while the search field for the keywords\n  * is in focus. Updates the filter term.\n  * @param event\n  */\n  public onKey(event) {\n    this.selectedKeywords = this.search(event.target.value);\n  }\n\n  /**\n  * @description\n  * Searches the keywords list for a search term\n  * @param {string} search term\n  * @returns {string[]} List of keywords matching search term\n  */\n  private search(value: string) {\n    const filter = value.toLowerCase();\n    return this.keywords.filter(option => option.toLowerCase().startsWith(filter));\n  }\n}\n\n\n    \n\n    \n        Edit\nEditing is {{edit.checked ? 'enabled' : 'disabled'}}\nApply Keywords\n\n  \n    Search Keywords...\n    \n  \n  {{keyword}}\n\n\n\n\n  \n  \n    \n      \n      \n    \n    \n      \n      \n    \n  \n\n  \n     Filename \n     {{element.title}} \n  \n\n  \n     Type \n     {{element.type}} \n  \n\n  \n     Language \n     {{element.language}} \n  \n\n  \n     Size \n     {{element.size}} \n  \n\n  \n     CreatedAt \n     {{element.creation_date | date:'dd.MM.yy HH:mm'}} \n  \n\n  \n     MyKeywords \n    \n      {{element.keywords}}\n      \n        add_circle\n      \n      \n        \n          Search Keywords...\n          \n        \n        {{keyword}}\n      \n    \n  \n\n  \n  \n\n    \n\n    \n                \n                    document-view-table.component.scss\n                \n                table {\n    width: 100%;\n}\nbutton:focus {\n    outline: none;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'EditEditing is {{edit.checked ? \\'enabled\\' : \\'disabled\\'}}Apply Keywords      Search Keywords...        {{keyword}}                                                     Filename      {{element.title}}          Type      {{element.type}}          Language      {{element.language}}          Size      {{element.size}}          CreatedAt      {{element.creation_date | date:\\'dd.MM.yy HH:mm\\'}}          MyKeywords           {{element.keywords}}              add_circle                              Search Keywords...                          {{keyword}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentViewTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/documentation/documentation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                styleUrls\n                ./documentation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accordion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accordion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAccordion\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatAccordion)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentation/documentation.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ViewChild} from '@angular/core';\nimport {MatAccordion} from '@angular/material/expansion';\n\n@Component({\n  selector: 'app-documentation',\n  templateUrl: './documentation.component.html',\n  styleUrls: ['./documentation.component.scss']\n})\nexport class DocumentationComponent {\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n}\n\n    \n\n    \n        \n\n  API Documentation\n  \n  Expand All\n  Collapse All\n  \n  \n  \n    \n      \n        /upload\n      \n      \n        Upload a document to the backend\n        POST\n      \n    \n    \n      \n      POST\n      \n        Type: Body\n        Parameters:\n          \n            fileKey: Form data with file under the fileKey key.\n          \n        \n        Returns:\n          \n            200: Successfully saved file\n            400: Sent file could not be read\n            500: Sent file could not be saved\n            502: Sent file could not be entered into the database\n          \n        \n      \n    \n    \n  \n    \n    \n      \n        /changekeywords\n      \n      \n        Change keywords assigned to document\n        PATCH\n      \n    \n    \n      \n      PATCH\n      \n        Type: Body\n        Parameters:\n          \n            id: id of the document to be changed\n            keywords: Array of keywords to assign to the document\n          \n        \n        Returns:\n          \n            200: Successfully updated keywords on file\n            400: Reading of request unsuccessful\n            502: Keywords on document could not be updated in database\n          \n        \n      \n    \n    \n  \n    \n    \n      \n        /documents\n      \n      \n        Get documents from database\n        GET\n      \n    \n    \n      \n      GET\n      \n        Type: Query\n        Parameters:\n        \n        Returns:\n          \n            200: Array of all documents in database\n            502: Database could not be reached\n          \n        \n      \n    \n    \n  \n    \n    \n      \n        /dims\n      \n      \n        Handle uncategorized dimensions\n        GET, POST, DELETE\n      \n    \n    \n      \n      GET\n      \n        Type: Quey\n        Parameters:\n        \n        Returns:\n          \n            200: A list of uncategorized dimensions\n            500: Dimensions could not be fetched\n          \n        \n      \n    \n      \n      \n        POST\n        \n          Type: Body\n          Parameters:\n            \n              dim: String indicating the dimension to be added to the database\n            \n          \n          Returns:\n            \n              200: Dimension succesfully added to database\n              500: Dimension not succesfully added to database\n            \n          \n        \n      \n      \n      \n        DELETE\n        \n          Type: Query\n          Parameters:\n            \n              dimension id: String indicating the dimension to be removed to the database\n            \n          \n          Returns:\n            \n              200: Dimension successfully removed from database\n              500: Dimension not successfully removed from database\n            \n          \n          Example (Angular):\n             {{\"\n              export class DeleteExample {\n                constructor(private httpClient: HttpClient) {}\n                ngOnInit() {\n                   this.httpClient.delete('/dims/123456');\n                }\n              }\n            \"}}\n            \n          \n        \n      \n    \n  \n    \n    \n      \n        /keys\n      \n      \n        Handle uncategorized keys\n        GET, POST, DELETE\n      \n    \n    \n      \n      GET\n      \n        Type: Quey\n        Parameters:\n        \n        Returns:\n          \n            200: A list of uncategorized keys\n            500: keys could not be fetched\n          \n        \n      \n    \n      \n      \n        POST\n        \n          Type: Body\n          Parameters:\n            \n              key: String indicating the key to be added to the database\n            \n          \n          Returns:\n            \n              200: key successfully added to database\n              500: key not successfully added to database\n            \n          \n          Example (Angular):\n             {{\"\n              export class PostExample {\n                constructor(private httpClient: HttpClient) {}\n                ngOnInit() {\n                  const key: {\n                    'key': 'my-key',\n                  };\n                  this.httpClient.post('/keys', key);\n                }\n              }\n            \"}}\n            \n          \n        \n      \n      \n      \n        DELETE\n        \n          Type: Query\n          Parameters:\n            \n              dimension id: String indicating the dimension to be removed to the database\n            \n          \n          Returns:\n            \n              200: Dimension successfully removed from database\n              500: Dimension not successfully removed from database\n            \n          \n          Example (Angular):\n             {{\"\n              export class DeleteExample {\n                constructor(private httpClient: HttpClient) {}\n                ngOnInit() {\n                   this.httpClient.delete('/keys/123456');\n                }\n              }\n            \"}}\n            \n          \n        \n      \n    \n  \n    \n    \n      \n        /health\n      \n      \n        Make sure the backend is running\n        GET\n      \n    \n    \n      \n      GET\n      \n        Type: Query\n        Parameters:\n        \n        Returns:\n          {{\" {status: 'UP'} \"}}\n        \n      \n    \n    \n  \n    \n    \n      \n        /stopServer\n      \n      \n        Stops the backend\n        GET\n      \n    \n    \n      \n      GET\n      \n        Type: Query\n        Parameters:\n        \n        Returns:\n\n          \n            Success: {{\" {success: 'True', message: 'Server is shutting down...'} \"}}\n            Failure: {{\" {success: 'False', message: 'Server could not be shut down'} \"}}\n          \n\n        \n      \n    \n    \n  \n    \n    \n      \n        /\n      \n      \n        Hello World Route\n        GET\n      \n    \n    \n      \n      GET\n      \n        Type: Query\n        Parameters:\n        \n        Returns:\n\n          \n            Success: {{\" 'Hello World' \"}}\n          \n\n        \n      \n    \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./documentation.component.scss\n                \n                .example-action-buttons {\n  padding-bottom: 20px;\n}\n\n.example-headers-align .mat-expansion-panel-header-title,\n.example-headers-align .mat-expansion-panel-header-description {\n  flex-basis: 0;\n}\n\n.example-headers-align .mat-expansion-panel-header-description {\n  justify-content: space-between;\n  align-items: center;\n}\n\n.example-headers-align .mat-form-field + .mat-form-field {\n  margin-left: 8px;\n}\n\n.mat-list-item {\n  height: 100% !important;\n}\n\nmat-expansion-panel-header {\n  h2 {\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  API Documentation    Expand All  Collapse All                        /upload                    Upload a document to the backend        POST                          POST              Type: Body        Parameters:                      fileKey: Form data with file under the fileKey key.                          Returns:                      200: Successfully saved file            400: Sent file could not be read            500: Sent file could not be saved            502: Sent file could not be entered into the database                                                        /changekeywords                    Change keywords assigned to document        PATCH                          PATCH              Type: Body        Parameters:                      id: id of the document to be changed            keywords: Array of keywords to assign to the document                          Returns:                      200: Successfully updated keywords on file            400: Reading of request unsuccessful            502: Keywords on document could not be updated in database                                                        /documents                    Get documents from database        GET                          GET              Type: Query        Parameters:                Returns:                      200: Array of all documents in database            502: Database could not be reached                                                        /dims                    Handle uncategorized dimensions        GET, POST, DELETE                          GET              Type: Quey        Parameters:                Returns:                      200: A list of uncategorized dimensions            500: Dimensions could not be fetched                                                POST                  Type: Body          Parameters:                          dim: String indicating the dimension to be added to the database                                Returns:                          200: Dimension succesfully added to database              500: Dimension not succesfully added to database                                                        DELETE                  Type: Query          Parameters:                          dimension id: String indicating the dimension to be removed to the database                                Returns:                          200: Dimension successfully removed from database              500: Dimension not successfully removed from database                                Example (Angular):             {{\"              export class DeleteExample {                constructor(private httpClient: HttpClient) {}                ngOnInit() {                   this.httpClient.delete(\\'/dims/123456\\');                }              }            \"}}                                                                /keys                    Handle uncategorized keys        GET, POST, DELETE                          GET              Type: Quey        Parameters:                Returns:                      200: A list of uncategorized keys            500: keys could not be fetched                                                POST                  Type: Body          Parameters:                          key: String indicating the key to be added to the database                                Returns:                          200: key successfully added to database              500: key not successfully added to database                                Example (Angular):             {{\"              export class PostExample {                constructor(private httpClient: HttpClient) {}                ngOnInit() {                  const key: {                    \\'key\\': \\'my-key\\',                  };                  this.httpClient.post(\\'/keys\\', key);                }              }            \"}}                                                        DELETE                  Type: Query          Parameters:                          dimension id: String indicating the dimension to be removed to the database                                Returns:                          200: Dimension successfully removed from database              500: Dimension not successfully removed from database                                Example (Angular):             {{\"              export class DeleteExample {                constructor(private httpClient: HttpClient) {}                ngOnInit() {                   this.httpClient.delete(\\'/keys/123456\\');                }              }            \"}}                                                                /health                    Make sure the backend is running        GET                          GET              Type: Query        Parameters:                Returns:          {{\" {status: \\'UP\\'} \"}}                                              /stopServer                    Stops the backend        GET                          GET              Type: Query        Parameters:                Returns:                      Success: {{\" {success: \\'True\\', message: \\'Server is shutting down...\\'} \"}}            Failure: {{\" {success: \\'False\\', message: \\'Server could not be shut down\\'} \"}}                                                        /                    Hello World Route        GET                          GET              Type: Query        Parameters:                Returns:                      Success: {{\" \\'Hello World\\' \"}}                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileUploadComponent.html":{"url":"components/FileUploadComponent.html","title":"component - FileUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FileUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/file-upload/file-upload.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-upload\n            \n\n            \n                styleUrls\n                ./file-upload.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                files\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSelectFile\n                            \n                            \n                                    Private\n                                sendFileToService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(uploadService: UploadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/file-upload/file-upload.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        UploadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelectFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelectFile(files: FileList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : FileList from the input html element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sendFileToService\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendFileToService(file: IFile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : IFile object containing the file to be send\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            files\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UploadService } from '../services/upload.service';\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\ninterface IFile {\n  file: File;\n  status: string;\n  progress: number;\n  icon: string;\n}\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\n\n/**\n * @class FileUploadComponent\n *\n * Component handles the file input and displaying the progress\n */\nexport class FileUploadComponent implements OnInit {\n  files: Array = [];\n\n  constructor(private uploadService: UploadService) { }\n\n  public ngOnInit(): void {}\n\n  /**\n   * @description\n   * Gets called when the file input element is used, parses the files and sends them to sendFileToService()\n   * @param {FileList} files: FileList from the input html element\n   */\n  public onSelectFile(files: FileList) {\n    this.files = [];\n    for (let idx = 0; idx  {\n        file.status = \"failed(check console for info)\";\n        file.icon = \"close\";\n        return throwError(error);\n      })\n    ).subscribe((event: HttpEvent) => {\n      switch (event.type) {\n        case HttpEventType.Sent:\n          file.status = \"request send\";\n          break;\n        case HttpEventType.ResponseHeader:\n          file.status = \"response received\";\n          break;\n        case HttpEventType.UploadProgress:\n          //update progress\n          file.progress = Math.round(event.loaded / event.total * 100);\n          file.status = \"uploading...\";\n          file.icon = \"cloud_upload\";\n          break;\n        case HttpEventType.Response:\n          file.status = \"success\";\n          console.log('Document send', event.body);\n          file.icon = \"cloud_done\";\n          break;\n      }\n    })\n  }\n\n}\n\n    \n\n    \n        File Upload\n\n\n\n  \n    {{file.icon}}\n     {{file.file.name}} \n     {{file.status}} \n    \n  \n\n\n    \n\n    \n                \n                    ./file-upload.component.scss\n                \n                \nmat-list {\n    max-height: 40em;\n    overflow: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'File Upload      {{file.icon}}     {{file.file.name}}      {{file.status}}       '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backendStatus\n                            \n                            \n                                    Public\n                                documents\n                            \n                            \n                                    Public\n                                documentsUrl\n                            \n                            \n                                    Public\n                                downloadUrl\n                            \n                            \n                                    Public\n                                filterString\n                            \n                            \n                                    Public\n                                serverStatus\n                            \n                            \n                                    Public\n                                serverUrl\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                uploadUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                download\n                            \n                            \n                                    Public\n                                handleFileInput\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            download\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    download(document: IDocument)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                IDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleFileInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFileInput(files: FileList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backendStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.serverUrl}/health`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            documents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            documentsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.serverUrl}/documents`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            downloadUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.documentsUrl}/download`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DOWN'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.serverUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'infinitag'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploadUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.documentsUrl}/upload`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IDocument } from '../models/IDocument.model';\nimport { environment } from './../../environments/environment';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n  public title = 'infinitag';\n  public serverUrl = environment.serverUrl;\n  public backendStatus = `${this.serverUrl}/health`;\n  public documentsUrl = `${this.serverUrl}/documents`;\n  public uploadUrl = `${this.documentsUrl}/upload`;\n  public downloadUrl = `${this.documentsUrl}/download`;\n\n  public serverStatus = 'DOWN';\n\n  public documents: Array = [];\n  public filterString = '';\n\n  constructor(private httpClient: HttpClient) { }\n\n  public ngOnInit(): void {\n    this.httpClient.get(this.documentsUrl)\n      .subscribe((value: Array) => {\n        console.log(value)\n        this.documents = value;\n      });\n  }\n\n  public handleFileInput(files: FileList) {\n    const file: File = files[0];\n    const formData: FormData = new FormData();\n    formData.append('file', file, file.name);\n    this.httpClient.post(this.uploadUrl, formData)\n      .subscribe((response: IDocument) => {\n        this.documents.push(response);\n      });\n  }\n\n  public download(document: IDocument) {\n    const url = `${this.downloadUrl}/${document.title}`;\n\n    this.httpClient.get(url)\n      .subscribe((response: any) => {\n        console.log(response);\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Search for documents\n      \n    \n  \n  Available Documents\n  \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Search for documents              Available Documents  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDocument.html":{"url":"interfaces/IDocument.html","title":"interface - IDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/IDocument.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creation_date\n                                \n                                \n                                        id\n                                \n                                \n                                        keywords\n                                \n                                \n                                        language\n                                \n                                \n                                        size\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                    \n                                \n                                \n                                    \n                                        creation_date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keywords\n                                    \n                                \n                                \n                                    \n                                        keywords:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Time } from '@angular/common';\n\nexport interface IDocument {\n  content: string;\n  creation_date: Date;\n  id: string;\n  language: string;\n  size: number;\n  keywords: string[];\n  title: string;\n  type: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFile.html":{"url":"interfaces/IFile.html","title":"interface - IFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/file-upload/file-upload.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        file\n                                \n                                \n                                        icon\n                                \n                                \n                                        progress\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UploadService } from '../services/upload.service';\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\ninterface IFile {\n  file: File;\n  status: string;\n  progress: number;\n  icon: string;\n}\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\n\n/**\n * @class FileUploadComponent\n *\n * Component handles the file input and displaying the progress\n */\nexport class FileUploadComponent implements OnInit {\n  files: Array = [];\n\n  constructor(private uploadService: UploadService) { }\n\n  public ngOnInit(): void {}\n\n  /**\n   * @description\n   * Gets called when the file input element is used, parses the files and sends them to sendFileToService()\n   * @param {FileList} files: FileList from the input html element\n   */\n  public onSelectFile(files: FileList) {\n    this.files = [];\n    for (let idx = 0; idx  {\n        file.status = \"failed(check console for info)\";\n        file.icon = \"close\";\n        return throwError(error);\n      })\n    ).subscribe((event: HttpEvent) => {\n      switch (event.type) {\n        case HttpEventType.Sent:\n          file.status = \"request send\";\n          break;\n        case HttpEventType.ResponseHeader:\n          file.status = \"response received\";\n          break;\n        case HttpEventType.UploadProgress:\n          //update progress\n          file.progress = Math.round(event.loaded / event.total * 100);\n          file.status = \"uploading...\";\n          file.icon = \"cloud_upload\";\n          break;\n        case HttpEventType.Response:\n          file.status = \"success\";\n          console.log('Document send', event.body);\n          file.icon = \"cloud_done\";\n          break;\n      }\n    })\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ItemFlatNode.html":{"url":"classes/ItemFlatNode.html","title":"class - ItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/keywords/keywords.component.ts\n        \n\n            \n                Description\n            \n            \n                Flatitem node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Injectable, ViewChild, ElementRef } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '../services/api.service';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Node for item\n */\nexport class ItemNode {\n  children: ItemNode[];\n  item: string;\n}\n\n/** Flatitem node with expandable and level information */\nexport class ItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The Json object for list data.\n */\nlet TREE_DATA: any = [];\n\n/**\n * Currently selected tree data.\n */\nlet selectedKwm: string;\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n  static data(): any {\n    throw new Error(\"Method not implemented.\");\n  }\n  dataChange = new BehaviorSubject([]);\n\n  get data(): ItemNode[] { return this.dataChange.value; }\n\n  constructor(private api: ApiService) {\n    this.initialize();\n  }\n\n  initialize() {\n    //Build the tree nodes from Json object. The result is a list of `ItemNode` with nested\n    //    file node as children.\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n\n      for (var i = 0 ; i ((accumulator, key) => {\n      const value = obj[key];\n      const node = new ItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  /** Add an item to list */\n  insertItem(parent: ItemNode, name: string): ItemNode {\n    if (!parent.children) {\n      parent.children = [];\n    }\n    const newItem = { item: name } as ItemNode;\n    parent.children.push(newItem);\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemAbove(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node), 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemBelow(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node) + 1, 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  getParentFromNodes(node: ItemNode): ItemNode {\n    for (let i = 0; i  0) {\n      for (let i = 0; i  0) {\n          const parent = this.getParent(child, node);\n          if (parent != null) {\n            return parent;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  updateItem(node: ItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n\n  deleteItem(node: ItemNode) {\n    this.deleteNode(this.data, node);\n    this.dataChange.next(this.data);\n  }\n\n  copyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItem(to, listItem.item);\n    } else {\n      newItem = this.insertItem(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItemAbove(to, listItem.item);\n    } else {\n      newItem = this.insertItemAbove(to, from.item);\n    }\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n\n    let newItem;\n    if(!from) {\n      newItem = this.insertItemBelow(to, listItem.item);\n    } else {\n      newItem = this.insertItemBelow(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  deleteNode(nodes: ItemNode[], nodeToDelete: ItemNode) {\n    const index = nodes.indexOf(nodeToDelete, 0);\n    if (index > -1) {\n      nodes.splice(index, 1);\n    } else {\n      nodes.forEach(node => {\n        if (node.children && node.children.length > 0) {\n          this.deleteNode(node.children, nodeToDelete);\n        }\n      });\n    }\n  }\n}\n\n@Component({\n  selector: 'app-keywords',\n  templateUrl: './keywords.component.html',\n  styleUrls: ['./keywords.component.scss'],\n  providers: [ChecklistDatabase]\n})\nexport class KeywordsComponent implements OnInit {\n\n\n  newDimension: string;\n  newKeyword: string;\n  isNewItem:boolean = false;\n  newItem:any;\n  uncatDimensions = []\n  uncatKeywords = []\n  keywords = []\n\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map();\n\n  /** A selected parent node to be inserted */\n  selectedParent: ItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl;\n\n  treeFlattener: MatTreeFlattener;\n\n  dataSource: MatTreeFlatDataSource;\n\n\n  /* Drag and drop */\n  dragNode: any;\n  dragNodeExpandOverWaitTimeMs = 300;\n  dragNodeExpandOverNode: any;\n  dragNodeExpandOverTime: number;\n  dragNodeExpandOverArea: string;\n  @ViewChild('emptyItem') emptyItem: ElementRef;\n\n  constructor(private api: ApiService, private snackBar: MatSnackBar, private database: ChecklistDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = [];\n      this.dataSource.data = data;\n    });\n   }\n\n  getLevel = (node: ItemFlatNode) => node.level;\n\n  isExpandable = (node: ItemFlatNode) => node.expandable;\n\n  getChildren = (node: ItemNode): ItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: ItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: ItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: ItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n      ? existingNode\n      : new ItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = (node.children && node.children.length > 0);\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  ngOnInit(): void {\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n      this.keywords = data;\n    });\n    this.api.getUncategorizedDimensions()\n      .subscribe((data: []) => {\n        this.uncatDimensions = data;\n      });\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.uncatKeywords = data;\n      });\n  }\n\n  dropDim(event: CdkDragDrop) {\n    moveItemInArray(this.uncatDimensions, event.previousIndex, event.currentIndex);\n  }\n\n  dropKey(event: CdkDragDrop) {\n    moveItemInArray(this.uncatKeywords, event.previousIndex, event.currentIndex);\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized dimension\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onDimEnter() {\n    const dimFormatted = this.newDimension.trim().toLowerCase();\n    if(dimFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatDimensions, dimFormatted)) {\n        this.api.addUncategorizedDimension(dimFormatted)\n          .subscribe(res => {\n            this.uncatDimensions.push(dimFormatted)\n            this.snackBar.open(`${dimFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${dimFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newDimension=\"\";\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized keyword\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onKeyEnter() {\n    const keyFormatted = this.newKeyword.trim().toLowerCase();\n    if(keyFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatKeywords, keyFormatted)) {\n        this.api.addUncategorizedKeyword(keyFormatted)\n          .subscribe(res => {\n            this.uncatKeywords.push(keyFormatted)\n            this.snackBar.open(`${keyFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${keyFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newKeyword=\"\";\n  }\n\n  /**\n  * @description\n  * Checks if a value appears in an array\n  * @param array to be checked\n  * @param value to be checked\n  * @returns true if the value was found, false otherwise\n  */\n  private isDuplicate(arr, value) {\n    const index = arr.findIndex((elem) => elem === value);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the dimension is\n  * removed from the list\n  * @param {string} dimension to be removed\n  */\n  public deleteDimension(dimension: string) {\n    const index = this.uncatDimensions.indexOf(dimension);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedDimension(dimension)\n      .subscribe(res => {\n        this.uncatDimensions.splice(index, 1);\n        this.snackBar.open(`${dimension} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the keyword is\n  * removed from the list\n  * @param {string} keyword to be removed\n  */\n  public deleteKeyword(keyword: string) {\n    const index = this.uncatKeywords.indexOf(keyword);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedKeyword(keyword)\n      .subscribe(res => {\n        this.uncatKeywords.splice(index, 1);\n        this.snackBar.open(`${keyword} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: ItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode, '');\n    this.treeControl.expand(node);\n  }\n\n  /** Save the node to database */\n  saveNode(node: ItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this.database.updateItem(nestedNode, itemValue);\n  }\n\n  handleDragStart(event, node, newItem) {\n    if(newItem) {\n      this.dragNode = new ItemFlatNode;\n      this.dragNode.item = node;\n      this.isNewItem = true;\n      this.newItem = this.dragNode;\n    } else {\n      this.dragNode = node;\n    }\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\n    event.dataTransfer.setData('foo', 'bar');\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\n    this.treeControl.collapse(node);\n  }\n\n  handleDragOver(event, node) {\n    event.preventDefault();\n\n    // Handle node expand\n    if (node === this.dragNodeExpandOverNode) {\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\n          this.treeControl.expand(node);\n        }\n      }\n    } else {\n      this.dragNodeExpandOverNode = node;\n      this.dragNodeExpandOverTime = new Date().getTime();\n    }\n\n    // Handle drag area\n    const percentageX = event.offsetX / event.target.clientWidth;\n    const percentageY = event.offsetY / event.target.clientHeight;\n    if (percentageY  0.75) {\n      this.dragNodeExpandOverArea = 'below';\n    } else {\n      this.dragNodeExpandOverArea = 'center';\n    }\n  }\n\n  handleDrop(event, node) {\n    if (node !== this.dragNode) {\n      let newItem: ItemNode;\n      if (this.dragNodeExpandOverArea === 'above') {\n        newItem = this.database.copyPasteItemAbove(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else if (this.dragNodeExpandOverArea === 'below') {\n        newItem = this.database.copyPasteItemBelow(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else {\n        newItem = this.database.copyPasteItem(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      }\n      this.database.deleteItem(this.flatNodeMap.get(this.dragNode));\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\n    }\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n  }\n\n  handleDragEnd(event) {\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n    this.newItem = null;\n    this.isNewItem = false;\n  }\n\n  selectionChange(event){\n    this.database.dataChange.next(TREE_DATA[event[0].value])\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ItemNode.html":{"url":"classes/ItemNode.html","title":"class - ItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/keywords/keywords.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Injectable, ViewChild, ElementRef } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '../services/api.service';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Node for item\n */\nexport class ItemNode {\n  children: ItemNode[];\n  item: string;\n}\n\n/** Flatitem node with expandable and level information */\nexport class ItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The Json object for list data.\n */\nlet TREE_DATA: any = [];\n\n/**\n * Currently selected tree data.\n */\nlet selectedKwm: string;\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n  static data(): any {\n    throw new Error(\"Method not implemented.\");\n  }\n  dataChange = new BehaviorSubject([]);\n\n  get data(): ItemNode[] { return this.dataChange.value; }\n\n  constructor(private api: ApiService) {\n    this.initialize();\n  }\n\n  initialize() {\n    //Build the tree nodes from Json object. The result is a list of `ItemNode` with nested\n    //    file node as children.\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n\n      for (var i = 0 ; i ((accumulator, key) => {\n      const value = obj[key];\n      const node = new ItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  /** Add an item to list */\n  insertItem(parent: ItemNode, name: string): ItemNode {\n    if (!parent.children) {\n      parent.children = [];\n    }\n    const newItem = { item: name } as ItemNode;\n    parent.children.push(newItem);\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemAbove(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node), 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemBelow(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node) + 1, 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  getParentFromNodes(node: ItemNode): ItemNode {\n    for (let i = 0; i  0) {\n      for (let i = 0; i  0) {\n          const parent = this.getParent(child, node);\n          if (parent != null) {\n            return parent;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  updateItem(node: ItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n\n  deleteItem(node: ItemNode) {\n    this.deleteNode(this.data, node);\n    this.dataChange.next(this.data);\n  }\n\n  copyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItem(to, listItem.item);\n    } else {\n      newItem = this.insertItem(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItemAbove(to, listItem.item);\n    } else {\n      newItem = this.insertItemAbove(to, from.item);\n    }\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n\n    let newItem;\n    if(!from) {\n      newItem = this.insertItemBelow(to, listItem.item);\n    } else {\n      newItem = this.insertItemBelow(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  deleteNode(nodes: ItemNode[], nodeToDelete: ItemNode) {\n    const index = nodes.indexOf(nodeToDelete, 0);\n    if (index > -1) {\n      nodes.splice(index, 1);\n    } else {\n      nodes.forEach(node => {\n        if (node.children && node.children.length > 0) {\n          this.deleteNode(node.children, nodeToDelete);\n        }\n      });\n    }\n  }\n}\n\n@Component({\n  selector: 'app-keywords',\n  templateUrl: './keywords.component.html',\n  styleUrls: ['./keywords.component.scss'],\n  providers: [ChecklistDatabase]\n})\nexport class KeywordsComponent implements OnInit {\n\n\n  newDimension: string;\n  newKeyword: string;\n  isNewItem:boolean = false;\n  newItem:any;\n  uncatDimensions = []\n  uncatKeywords = []\n  keywords = []\n\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map();\n\n  /** A selected parent node to be inserted */\n  selectedParent: ItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl;\n\n  treeFlattener: MatTreeFlattener;\n\n  dataSource: MatTreeFlatDataSource;\n\n\n  /* Drag and drop */\n  dragNode: any;\n  dragNodeExpandOverWaitTimeMs = 300;\n  dragNodeExpandOverNode: any;\n  dragNodeExpandOverTime: number;\n  dragNodeExpandOverArea: string;\n  @ViewChild('emptyItem') emptyItem: ElementRef;\n\n  constructor(private api: ApiService, private snackBar: MatSnackBar, private database: ChecklistDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = [];\n      this.dataSource.data = data;\n    });\n   }\n\n  getLevel = (node: ItemFlatNode) => node.level;\n\n  isExpandable = (node: ItemFlatNode) => node.expandable;\n\n  getChildren = (node: ItemNode): ItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: ItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: ItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: ItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n      ? existingNode\n      : new ItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = (node.children && node.children.length > 0);\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  ngOnInit(): void {\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n      this.keywords = data;\n    });\n    this.api.getUncategorizedDimensions()\n      .subscribe((data: []) => {\n        this.uncatDimensions = data;\n      });\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.uncatKeywords = data;\n      });\n  }\n\n  dropDim(event: CdkDragDrop) {\n    moveItemInArray(this.uncatDimensions, event.previousIndex, event.currentIndex);\n  }\n\n  dropKey(event: CdkDragDrop) {\n    moveItemInArray(this.uncatKeywords, event.previousIndex, event.currentIndex);\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized dimension\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onDimEnter() {\n    const dimFormatted = this.newDimension.trim().toLowerCase();\n    if(dimFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatDimensions, dimFormatted)) {\n        this.api.addUncategorizedDimension(dimFormatted)\n          .subscribe(res => {\n            this.uncatDimensions.push(dimFormatted)\n            this.snackBar.open(`${dimFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${dimFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newDimension=\"\";\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized keyword\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onKeyEnter() {\n    const keyFormatted = this.newKeyword.trim().toLowerCase();\n    if(keyFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatKeywords, keyFormatted)) {\n        this.api.addUncategorizedKeyword(keyFormatted)\n          .subscribe(res => {\n            this.uncatKeywords.push(keyFormatted)\n            this.snackBar.open(`${keyFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${keyFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newKeyword=\"\";\n  }\n\n  /**\n  * @description\n  * Checks if a value appears in an array\n  * @param array to be checked\n  * @param value to be checked\n  * @returns true if the value was found, false otherwise\n  */\n  private isDuplicate(arr, value) {\n    const index = arr.findIndex((elem) => elem === value);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the dimension is\n  * removed from the list\n  * @param {string} dimension to be removed\n  */\n  public deleteDimension(dimension: string) {\n    const index = this.uncatDimensions.indexOf(dimension);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedDimension(dimension)\n      .subscribe(res => {\n        this.uncatDimensions.splice(index, 1);\n        this.snackBar.open(`${dimension} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the keyword is\n  * removed from the list\n  * @param {string} keyword to be removed\n  */\n  public deleteKeyword(keyword: string) {\n    const index = this.uncatKeywords.indexOf(keyword);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedKeyword(keyword)\n      .subscribe(res => {\n        this.uncatKeywords.splice(index, 1);\n        this.snackBar.open(`${keyword} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: ItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode, '');\n    this.treeControl.expand(node);\n  }\n\n  /** Save the node to database */\n  saveNode(node: ItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this.database.updateItem(nestedNode, itemValue);\n  }\n\n  handleDragStart(event, node, newItem) {\n    if(newItem) {\n      this.dragNode = new ItemFlatNode;\n      this.dragNode.item = node;\n      this.isNewItem = true;\n      this.newItem = this.dragNode;\n    } else {\n      this.dragNode = node;\n    }\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\n    event.dataTransfer.setData('foo', 'bar');\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\n    this.treeControl.collapse(node);\n  }\n\n  handleDragOver(event, node) {\n    event.preventDefault();\n\n    // Handle node expand\n    if (node === this.dragNodeExpandOverNode) {\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\n          this.treeControl.expand(node);\n        }\n      }\n    } else {\n      this.dragNodeExpandOverNode = node;\n      this.dragNodeExpandOverTime = new Date().getTime();\n    }\n\n    // Handle drag area\n    const percentageX = event.offsetX / event.target.clientWidth;\n    const percentageY = event.offsetY / event.target.clientHeight;\n    if (percentageY  0.75) {\n      this.dragNodeExpandOverArea = 'below';\n    } else {\n      this.dragNodeExpandOverArea = 'center';\n    }\n  }\n\n  handleDrop(event, node) {\n    if (node !== this.dragNode) {\n      let newItem: ItemNode;\n      if (this.dragNodeExpandOverArea === 'above') {\n        newItem = this.database.copyPasteItemAbove(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else if (this.dragNodeExpandOverArea === 'below') {\n        newItem = this.database.copyPasteItemBelow(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else {\n        newItem = this.database.copyPasteItem(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      }\n      this.database.deleteItem(this.flatNodeMap.get(this.dragNode));\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\n    }\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n  }\n\n  handleDragEnd(event) {\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n    this.newItem = null;\n    this.isNewItem = false;\n  }\n\n  selectionChange(event){\n    this.database.dataChange.next(TREE_DATA[event[0].value])\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent { }\n\n    \n\n    \n        search works!\n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'search works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent { }\n\n    \n\n    \n        settings works!\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'settings works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/upload.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                patchKeywords\n                            \n                            \n                                    Public\n                                postFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/upload.service.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            patchKeywords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patchKeywords(iDoc: IDocument)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/upload.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iDoc\n                                    \n                                                IDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postFile(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/upload.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { IDocument } from './../models/IDocument.model'\n\n\n/**\n *\n * @class UploadService\n *\n * Service handling uploading and updateing documents\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n\n  constructor(private httpClient: HttpClient) { }\n\n\n  public postFile(file: File): Observable {\n      //console.log(\"postFile\" + file.name)\n      const formData: FormData = new FormData();\n      formData.append('fileKey', file, file.name);\n      //formData.append('test', 'abc');\n      return this.httpClient\n        .post(`${environment.serverUrl}/upload`, formData, {\n          reportProgress: true,\n          observe: 'events'\n        });\n\n  }\n\n  public patchKeywords(iDoc: IDocument): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n\n    return this.httpClient.patch(`${environment.serverUrl}/changekeywords`, iDoc, httpOptions);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/documentation/documentation.component.ts\n            \n            component\n            DocumentationComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/documentview/document-view-table.component.ts\n            \n            component\n            DocumentViewTableComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/file-upload/file-upload.component.ts\n            \n            component\n            FileUploadComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/file-upload/file-upload.component.ts\n            \n            interface\n            IFile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            component\n            KeywordsComponent\n            \n                15 %\n                (7/44)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            class\n            ItemFlatNode\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            class\n            ItemNode\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            injectable\n            ChecklistDatabase\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            variable\n            selectedKwm\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            variable\n            TREE_DATA\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/IDocument.model.ts\n            \n            interface\n            IDocument\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/upload.service.ts\n            \n            injectable\n            UploadService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.3\n        \n            @angular/cdk : ^9.2.2\n        \n            @angular/common : ~9.1.3\n        \n            @angular/compiler : ~9.1.3\n        \n            @angular/core : ~9.1.3\n        \n            @angular/forms : ~9.1.3\n        \n            @angular/material : ^9.1.3\n        \n            @angular/platform-browser : ~9.1.3\n        \n            @angular/platform-browser-dynamic : ~9.1.3\n        \n            @angular/router : ~9.1.3\n        \n            bootstrap : ^4.4.1\n        \n            jquery : ^3.5.0\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated with Angular CLI version 9.1.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDocumentViewTableComponent\n\nDocumentViewTableComponent\n\nAppModule -->\n\nDocumentViewTableComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\nAppModule -->\n\nFileUploadComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nKeywordsComponent\n\nKeywordsComponent\n\nAppModule -->\n\nKeywordsComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            selectedKwm   (src/.../keywords.component.ts)\n                        \n                        \n                            TREE_DATA   (src/.../keywords.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  serverUrl: 'http://ec2-52-87-180-131.compute-1.amazonaws.com:5000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  serverUrl: 'http://localhost:5000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/keywords/keywords.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectedKwm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        Currently selected tree data.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TREE_DATA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        The Json object for list data.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

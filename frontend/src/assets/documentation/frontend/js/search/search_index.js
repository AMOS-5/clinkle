var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/ApiService.html",[0,1.031,1,1.273]],["body/injectables/ApiService.html",[0,1.534,1,2.11,2,2.044,3,0.397,4,0.335,5,0.335,6,2.729,7,1.81,8,0.53,9,1.534,10,1.901,11,4.346,12,4.346,13,5.136,14,5.136,15,4.346,16,4.346,17,1.303,18,3.324,19,2.496,20,1.43,21,3.324,22,2.089,23,0.042,24,1.091,25,1.091,26,2.323,27,4.346,28,4.346,29,3.324,30,4.216,31,1.403,32,4.016,33,4.346,34,3.324,35,2.496,36,3.324,37,3.324,38,4.346,39,3.324,40,4.346,41,3.324,42,0.613,43,0.461,44,4.375,45,1.303,46,1.615,47,2.044,48,1.173,49,0.29,50,2.729,51,2.729,52,3.324,53,3.324,54,1.173,55,1.615,56,2.729,57,2.044,58,0.397,59,0.951,60,1.929,61,3.324,62,3.324,63,1.813,64,4.637,65,3.61,66,1.813,67,2.797,68,4.216,69,3.324,70,3.324,71,3.324,72,3.324,73,0.023,74,0.03,75,0.023]],["title/components/AppComponent.html",[76,0.103,77,0.75]],["body/components/AppComponent.html",[3,0.363,4,0.306,5,0.413,8,0.484,9,1.445,10,1.883,17,1.191,19,2.59,20,1.398,22,1.191,23,0.042,24,0.948,25,1.015,26,1.325,31,0.78,42,0.553,43,0.422,45,1.191,46,1.477,47,1.869,49,0.202,54,1.445,57,2.518,58,0.363,59,0.869,73,0.021,74,0.028,75,0.021,76,0.164,77,1.272,78,1.445,79,1.191,80,1.191,81,1.191,82,0.78,83,2.495,84,1.445,85,1.635,86,1.191,87,1.469,88,1.161,89,1.051,90,4.632,91,1.051,92,4.095,93,1.302,94,3.802,95,4.632,96,4.247,97,3.256,98,2.522,99,1.575,100,2.137,101,4.095,102,3.039,103,1.445,104,2.514,105,2.028,106,3.362,107,3.039,108,1.417,109,4.095,110,2.879,111,3.039,112,3.362,113,3.039,114,2.23,115,3.039,116,3.039,117,2.495,118,2.848,119,3.039,120,3.039,121,3.362,122,2.518,123,1.99,124,3.016,125,1.99,126,4.095,127,4.069,128,4.956,129,4.095,130,2.879,131,4.095,132,4.095,133,4.095,134,4.095,135,3.039,136,4.095,137,3.362,138,3.039,139,3.039,140,4.095,141,3.039,142,4.095,143,3.039,144,3.039,145,3.802,146,1.99,147,2.495,148,3.039,149,2.495,150,3.039,151,3.039,152,3.039,153,2.137,154,2.495,155,3.039,156,2.495,157,2.137,158,2.495,159,2.495,160,2.495,161,2.137,162,2.879,163,2.495,164,0.966,165,1.445,166,1.302,167,1.191,168,1.417,169,1.191,170,1.191,171,0.698,172,1.191,173,0.698,174,1.191,175,0.78,176,1.191,177,0.966,178,1.191,179,0.698,180,1.191,181,0.698,182,1.191,183,0.551,184,1.191,185,0.698,186,1.191,187,0.698,188,1.191,189,1.191,190,1.191]],["title/modules/AppModule.html",[191,1.796,192,1.796]],["body/modules/AppModule.html",[3,0.318,4,0.269,5,0.378,23,0.042,42,0.72,43,0.37,45,1.046,49,0.178,58,0.318,73,0.018,74,0.025,75,0.018,77,1.448,88,0.546,114,1.453,124,1.453,164,0.848,171,1.177,173,1.177,175,1.315,177,0.848,179,1.177,181,1.177,183,0.929,185,1.177,187,1.177,191,1.641,192,3.661,193,1.453,194,1.641,195,3.551,196,3.041,197,2.039,198,1.876,199,2.19,200,2.19,201,2.19,202,2.19,203,2.789,204,3.074,205,2.19,206,2.302,207,2.668,208,3.074,209,2.19,210,3.551,211,2.19,212,2.19,213,2.19,214,2.19,215,3.074,216,2.19,217,2.19,218,2.19,219,2.19,220,2.19,221,2.19,222,3.074,223,3.355,224,2.19,225,1.297,226,2.19,227,3.551,228,2.19,229,3.074,230,2.19,231,2.19,232,1.82,233,2.19,234,2.19,235,2.19,236,2.19,237,2.19,238,2.19,239,2.19,240,3.074,241,2.19,242,2.19,243,2.19,244,2.19,245,2.19,246,2.19,247,1.453,248,3.074,249,3.074,250,2.19,251,2.19,252,2.19,253,2.19,254,2.19,255,2.19,256,2.19,257,2.19,258,2.19,259,2.19,260,2.19,261,2.19,262,2.19,263,2.19,264,2.19,265,1.876,266,2.19,267,2.19,268,2.19,269,2.19,270,2.19,271,2.19,272,2.19,273,1.876,274,2.19,275,2.19,276,1.297,277,2.19,278,2.19,279,2.19,280,3.744,281,3.074,282,1.641,283,3.074,284,2.668,285,3.744,286,3.744,287,2.19,288,3.744,289,2.19,290,3.744,291,2.19,292,3.744,293,2.668,294,3.744,295,2.668,296,1.297,297,3.744,298,2.668,299,3.744,300,2.668,301,3.744,302,1.453,303,2.039,304,3.744,305,2.668,306,3.744,307,2.668,308,3.744,309,2.668,310,1.046,311,3.744,312,2.668,313,3.744,314,2.668,315,3.744,316,2.668,317,3.744,318,2.668,319,3.744,320,3.744,321,3.744,322,2.668,323,3.744,324,2.668,325,3.744,326,1.641,327,1.641,328,3.744,329,1.641,330,2.668,331,2.668,332,2.668,333,2.19,334,2.19,335,2.19,336,2.19,337,1.641,338,2.668,339,2.19,340,3.744,341,2.19,342,2.19]],["title/classes/AppPage.html",[49,0.195,343,2.053]],["body/classes/AppPage.html",[3,0.522,4,0.441,5,0.441,8,0.697,9,1.819,20,1.323,23,0.041,31,1.323,42,0.522,49,0.291,57,2.688,58,0.522,60,1.819,67,2.381,73,0.03,74,0.035,75,0.03,166,1.39,282,2.688,343,3.623,344,2.688,345,3.589,346,5.66,347,5.66,348,4.372,349,5.851,350,4.372,351,3.589,352,4.372,353,4.372,354,4.372]],["title/modules/AppRoutingModule.html",[191,1.796,203,1.59]],["body/modules/AppRoutingModule.html",[3,0.411,4,0.347,5,0.347,23,0.042,42,0.679,43,0.478,49,0.23,54,1.216,58,0.411,63,1.216,73,0.023,74,0.03,75,0.023,76,0.199,114,1.876,123,1.674,124,2.422,171,1.022,173,1.022,181,1.132,183,0.807,185,1.022,187,1.022,193,1.876,198,2.422,203,2.422,206,2.119,208,2.829,209,2.829,210,4.045,211,2.829,212,2.829,213,2.829,214,2.829,215,3.652,216,2.829,217,2.829,218,2.829,219,2.829,220,2.829,221,2.829,222,3.652,223,3.536,224,2.829,225,1.674,226,2.829,227,4.045,228,2.829,229,3.652,230,2.829,231,2.829,232,2.162,233,2.829,234,2.829,235,2.829,236,2.829,237,2.829,238,2.829,239,2.829,240,3.652,241,2.829,242,2.829,243,2.829,244,2.829,245,2.829,246,2.829,247,1.876,248,3.652,249,3.652,250,2.829,251,2.829,252,2.829,253,2.829,254,2.829,255,2.829,256,2.829,257,2.829,258,2.829,259,2.829,260,2.829,261,2.829,262,2.829,263,2.829,264,2.829,265,2.422,266,2.829,267,2.829,268,2.829,269,2.829,270,2.829,271,2.829,272,2.829,273,2.422,274,2.829,275,2.829,276,1.674,277,2.829,278,2.829,279,2.829,283,3.652,333,2.829,334,2.829,335,2.829,336,2.829,339,2.829,342,2.829,355,3.446,356,3.446,357,3.029,358,4.449,359,2.829,360,5.617,361,2.119,362,2.422,363,3.446]],["title/injectables/ChecklistDatabase.html",[0,1.031,364,1.59]],["body/injectables/ChecklistDatabase.html",[0,0.73,1,1.508,2,0.761,3,0.148,4,0.125,5,0.269,8,0.689,9,0.73,10,0.657,17,0.485,20,1.3,22,1.873,23,0.042,24,1.131,25,0.978,26,2.083,31,1.267,35,1.512,42,0.473,43,0.172,48,0.437,49,0.207,54,0.73,55,1.512,58,0.371,59,0.591,60,1.716,63,1.84,66,1.787,73,0.014,74,0.014,75,0.008,76,0.073,82,0.96,84,0.437,85,0.73,87,0.318,88,0.253,89,0.318,91,0.318,93,0.657,99,0.393,103,1.221,104,0.602,105,1.837,108,1.543,122,1.272,125,1.294,146,2.022,168,0.354,183,0.224,197,0.674,232,0.602,247,0.674,276,0.602,296,1.005,302,0.674,303,1.126,310,1.694,326,0.761,327,1.638,329,0.761,364,1.694,365,0.674,366,1.63,367,1.454,368,2.558,369,1.913,370,1.454,371,2.558,372,2.277,373,1.454,374,4.013,375,1.454,376,2.817,377,2.79,378,2.187,379,1.694,380,2.036,381,1.272,382,1.872,383,2.068,384,2.068,385,2.068,386,2.068,387,1.638,388,2.323,389,2.068,390,2.068,391,2.068,392,2.068,393,2.187,394,2.068,395,2.068,396,2.068,397,2.068,398,2.068,399,1.016,400,2.068,401,1.238,402,2.79,403,1.73,404,1.238,405,1.238,406,1.238,407,3.241,408,1.238,409,1.454,410,3.038,411,2.815,412,1.238,413,2.663,414,1.454,415,1.238,416,1.454,417,1.238,418,1.238,419,1.454,420,1.238,421,1.454,422,2.187,423,1.238,424,1.872,425,1.238,426,1.238,427,1.238,428,1.454,429,1.238,430,1.238,431,1.454,432,1.238,433,2.432,434,1.454,435,1.238,436,1.454,437,1.238,438,1.454,439,1.238,440,1.872,441,1.238,442,1.238,443,0.674,444,1.454,445,2.187,446,0.87,447,0.87,448,1.272,449,0.761,450,1.454,451,0.87,452,1.454,453,1.454,454,0.87,455,1.454,456,0.87,457,0.761,458,0.674,459,0.674,460,1.126,461,0.674,462,0.87,463,0.87,464,0.87,465,0.87,466,0.87,467,2.432,468,1.638,469,1.913,470,2.006,471,0.87,472,0.87,473,2.432,474,3.294,475,0.87,476,2.187,477,0.87,478,0.87,479,1.454,480,3.885,481,0.87,482,2.432,483,2.432,484,1.454,485,1.454,486,1.454,487,0.87,488,0.87,489,1.872,490,1.454,491,1.872,492,1.872,493,1.872,494,1.872,495,1.872,496,1.454,497,1.454,498,0.87,499,0.87,500,0.87,501,1.454,502,0.87,503,0.87,504,0.87,505,0.87,506,0.87,507,0.87,508,1.512,509,0.87,510,0.87,511,0.87,512,2.187,513,1.454,514,1.454,515,0.87,516,0.87,517,0.87,518,0.87,519,0.87,520,0.87,521,0.761,522,0.87,523,0.87,524,0.87,525,0.87,526,0.87,527,0.87,528,0.87,529,0.761,530,1.872,531,0.87,532,0.87,533,0.87,534,0.87,535,0.87,536,0.87,537,0.87,538,0.87,539,1.45,540,0.761,541,1.454,542,0.87,543,0.87,544,1.454,545,0.87,546,0.87,547,0.87,548,0.87,549,0.87,550,0.87,551,1.272,552,0.87,553,0.87,554,0.87,555,0.87,556,0.87,557,0.87,558,1.454,559,1.454,560,0.87,561,0.87,562,0.87,563,1.454,564,0.87,565,0.87,566,0.87,567,0.87,568,1.872,569,0.87,570,1.872,571,0.87,572,0.87,573,0.87,574,0.87,575,0.87,576,0.87,577,0.761,578,0.87,579,0.87,580,0.87,581,0.87,582,0.87,583,2.187,584,2.187,585,0.87,586,0.87,587,1.512,588,1.005,589,1.454,590,1.272,591,1.272,592,1.638,593,1.512,594,1.272,595,1.272,596,1.454,597,1.272,598,1.126,599,0.87,600,1.454,601,0.87,602,0.87,603,0.87,604,0.87,605,2.187,606,0.87,607,1.454,608,2.299,609,2.299,610,1.272,611,1.454,612,0.87,613,1.638,614,0.87,615,1.454,616,0.87,617,0.87,618,0.87,619,0.87,620,0.87,621,1.454,622,0.87,623,0.761,624,0.87,625,0.81,626,1.512,627,1.454,628,1.161,629,0.87,630,0.87,631,0.87,632,0.87,633,1.005,634,1.272,635,0.901,636,1.454,637,1.913,638,0.87,639,0.87,640,0.87,641,0.87,642,0.87,643,1.454,644,0.87,645,0.87,646,0.87,647,0.87,648,0.87,649,0.87,650,0.87,651,0.87,652,0.87,653,0.87,654,0.87,655,0.761,656,0.87,657,0.87,658,2.432,659,0.87,660,1.454,661,0.87,662,0.87,663,1.454,664,0.87,665,0.87,666,0.87,667,0.87,668,2.79,669,0.87,670,1.454,671,2.432,672,0.87,673,1.454,674,0.87,675,0.87,676,0.87,677,0.87,678,0.87,679,0.87,680,0.87,681,0.87,682,0.87,683,1.272,684,0.761,685,2.187,686,0.87,687,1.454,688,2.187,689,0.87,690,0.87,691,0.87,692,0.87,693,0.87,694,1.454,695,0.87,696,0.87,697,0.87,698,2.187,699,1.454,700,0.761,701,0.87,702,0.87,703,0.87,704,0.87,705,0.87,706,0.87,707,0.87,708,0.87,709,0.87]],["title/components/DashboardComponent.html",[76,0.103,171,0.671]],["body/components/DashboardComponent.html",[3,0.418,4,0.353,5,0.453,7,1.907,8,0.558,9,1.587,17,1.946,20,1.154,23,0.042,24,0.92,31,0.899,42,0.418,43,0.486,49,0.3,58,0.418,73,0.024,74,0.031,75,0.024,76,0.186,77,0.899,78,1.587,79,1.373,80,1.373,81,1.373,82,0.899,84,1.587,85,1.753,86,1.373,87,1.503,88,1.19,89,1.154,91,1.154,99,1.665,103,1.587,114,2.853,146,2.185,153,2.462,154,3.691,156,2.876,157,3.161,158,2.876,159,2.876,160,2.876,161,2.462,162,3.491,163,3.691,164,1.113,165,1.587,166,1.429,167,1.373,168,1.498,169,1.373,170,1.373,171,1.245,172,1.373,173,0.805,174,1.373,175,0.899,176,1.373,177,1.113,178,1.373,179,0.805,180,1.373,181,0.805,182,1.373,183,0.635,184,1.373,185,0.805,186,1.373,187,0.805,188,1.373,189,1.373,190,1.373,223,2.765,362,3.809,710,2.876,711,4.966,712,4.496,713,3.503,714,3.503,715,3.503,716,3.503,717,3.503,718,3.503,719,3.691,720,3.691,721,3.691,722,3.691,723,3.691,724,3.691,725,3.691,726,3.691,727,4.448,728,3.503,729,3.503,730,2.462,731,3.503,732,3.503,733,4.496,734,3.503,735,3.503,736,3.503,737,2.876]],["title/components/DocumentViewTableComponent.html",[76,0.103,175,0.75]],["body/components/DocumentViewTableComponent.html",[1,1.636,3,0.203,4,0.172,5,0.27,7,0.927,8,0.427,9,0.945,10,1.801,17,0.667,19,0.827,20,1.443,22,1.841,23,0.042,24,1.013,25,1.1,26,1.976,31,1.335,32,2.639,35,0.827,42,0.59,43,0.236,45,0.667,48,0.601,49,0.178,54,1.836,55,1.301,58,0.203,59,0.487,60,1.169,63,1.325,66,1.601,73,0.012,74,0.026,75,0.012,76,0.133,77,0.437,78,0.945,79,0.667,80,0.667,81,0.667,82,0.437,84,0.945,85,1.169,86,0.667,87,1.295,88,0.962,89,0.688,91,0.688,93,0.851,98,1.458,99,1.193,103,1.706,104,2.107,105,1.777,108,1.537,123,2.107,125,1.301,146,0.827,157,1.197,164,0.541,165,0.945,166,0.851,167,0.667,168,1.074,169,0.667,170,0.667,171,0.391,172,0.667,173,0.391,174,0.667,175,1.048,176,2.106,177,1.84,178,0.667,179,0.391,180,0.667,181,0.391,182,0.667,183,0.309,184,0.667,185,0.391,186,0.667,187,0.391,188,0.667,189,0.667,190,0.667,265,2.327,276,1.301,289,1.397,291,1.397,296,0.827,302,0.927,303,1.458,310,1.471,361,3.153,366,1.976,372,0.827,379,1.803,380,1.803,387,2.308,388,2.107,399,1.397,403,1.167,443,0.927,448,2.308,449,1.047,457,1.047,459,0.927,460,2.223,468,1.047,469,1.047,470,1.471,508,1.609,521,2.036,529,2.308,539,2.558,540,2.036,551,2.308,577,1.647,587,1.609,588,0.827,590,1.047,593,1.609,594,2.036,597,1.047,608,1.647,609,1.647,610,1.647,613,3.358,623,1.047,625,1.05,626,2.283,628,1.889,633,0.827,635,1.167,655,1.647,727,1.397,738,4.633,739,1.397,740,3.311,741,3.723,742,3.311,743,2.678,744,3.311,745,3.311,746,3.311,747,3.754,748,3.311,749,3.311,750,2.678,751,2.678,752,3.754,753,3.311,754,2.678,755,2.678,756,3.311,757,2.678,758,4.335,759,2.204,760,2.678,761,3.754,762,1.702,763,1.702,764,2.678,765,1.702,766,2.678,767,1.702,768,2.678,769,2.678,770,1.702,771,1.702,772,1.702,773,2.678,774,4.082,775,1.702,776,2.678,777,1.702,778,2.678,779,1.702,780,2.678,781,1.702,782,4.335,783,1.702,784,1.702,785,1.702,786,3.311,787,1.702,788,3.082,789,3.082,790,2.199,791,3.754,792,1.702,793,3.311,794,1.702,795,1.702,796,2.678,797,1.702,798,3.311,799,2.199,800,2.678,801,1.702,802,3.311,803,2.678,804,1.702,805,1.824,806,1.197,807,1.702,808,1.702,809,1.047,810,1.197,811,1.702,812,1.702,813,1.702,814,1.702,815,1.702,816,1.702,817,1.702,818,1.702,819,2.678,820,1.702,821,1.702,822,1.702,823,1.702,824,2.199,825,2.678,826,1.702,827,1.702,828,2.678,829,1.702,830,1.702,831,1.702,832,1.702,833,1.702,834,1.702,835,1.702,836,1.702,837,1.702,838,1.702,839,1.702,840,3.311,841,1.702,842,1.702,843,1.397,844,1.702,845,1.702,846,1.702,847,1.702,848,1.702,849,1.702,850,1.397,851,1.197,852,1.702,853,1.397,854,1.702,855,1.702,856,1.702,857,1.702,858,1.702,859,1.702,860,1.702,861,2.678,862,1.702,863,1.702,864,1.702,865,1.702,866,1.702,867,1.702,868,1.702,869,1.702,870,1.702,871,1.702,872,1.702,873,1.702,874,1.702,875,2.678,876,2.678,877,1.702,878,1.702,879,2.678,880,2.678,881,2.678,882,2.678,883,2.678,884,2.678,885,2.678,886,1.702,887,2.678,888,2.678,889,2.678,890,0.927,891,1.702,892,1.702,893,1.702,894,1.702,895,1.702,896,1.702]],["title/components/DocumentationComponent.html",[76,0.103,173,0.671]],["body/components/DocumentationComponent.html",[3,0.233,4,0.197,5,0.546,7,2.844,8,0.311,19,2.574,20,0.501,22,2.252,23,0.042,24,0.609,25,1.18,30,2.443,31,1.475,35,2.715,42,0.355,43,0.271,49,0.317,54,1.813,55,2.227,58,0.569,59,1.31,63,1.05,65,2.838,67,1.062,73,0.013,74,0.02,75,0.013,76,0.128,77,0.501,78,1.05,79,0.764,80,0.764,81,0.764,82,0.501,86,0.764,87,1.341,88,1.051,89,0.764,91,0.764,93,0.946,98,1.062,99,1.456,108,1.405,110,2.838,118,1.83,123,2.227,124,2.198,125,1.446,130,2.838,137,1.601,145,1.601,149,1.601,153,1.371,161,1.371,162,1.371,164,0.62,165,1.05,166,0.946,167,0.764,168,1.154,169,0.764,170,0.764,171,0.448,172,0.764,173,0.928,174,0.764,175,0.501,176,2.047,177,0.62,178,0.764,179,0.448,180,0.764,181,0.448,182,0.764,183,0.354,184,0.764,185,0.448,186,0.764,187,0.448,188,0.764,189,0.764,190,0.764,273,1.371,296,1.446,310,1.704,341,1.601,366,1.297,368,3.623,376,1.199,379,1.062,380,2.884,381,1.83,388,1.446,443,1.062,470,1.166,508,1.446,591,3.021,592,3.505,595,1.83,625,1.582,628,1.297,634,3.021,635,1.297,637,3.257,683,2.482,684,1.83,700,1.199,730,3.35,737,2.443,799,1.601,850,3.314,853,3.314,890,1.062,897,1.601,898,3.608,899,2.976,900,3.608,901,3.608,902,2.976,903,1.95,904,2.976,905,2.838,906,5.297,907,4.913,908,4.037,909,4.037,910,5.587,911,5.512,912,4.037,913,4.037,914,4.582,915,5.417,916,4.582,917,2.976,918,2.976,919,2.443,920,2.976,921,4.034,922,2.976,923,2.976,924,2.976,925,2.976,926,5.297,927,2.976,928,2.976,929,4.582,930,4.037,931,4.037,932,4.913,933,4.037,934,3.761,935,4.037,936,1.95,937,4.913,938,2.976,939,1.95,940,1.95,941,2.976,942,2.976,943,2.976,944,2.443,945,2.976,946,2.976,947,2.976,948,3.454,949,4.037,950,2.976,951,2.976,952,2.976,953,4.037,954,4.037,955,2.976,956,4.347,957,4.037,958,4.037,959,4.037,960,1.95,961,1.95,962,1.95,963,1.95,964,1.95,965,1.601,966,1.95,967,1.95,968,1.95,969,1.95,970,1.95]],["title/components/FileUploadComponent.html",[76,0.103,179,0.671]],["body/components/FileUploadComponent.html",[3,0.467,4,0.287,5,0.591,8,0.453,9,1.381,10,1.661,17,1.114,20,1.298,22,1.754,23,0.042,24,1.035,25,0.987,26,1.95,31,1.149,42,0.603,43,0.395,45,1.114,48,1.003,49,0.261,58,0.339,59,0.813,60,1.003,73,0.019,74,0.027,75,0.019,76,0.171,77,0.73,78,1.381,79,1.114,80,1.114,81,1.114,82,0.73,84,1.381,85,1.579,86,1.114,87,1.452,88,1.146,89,1.005,91,1.005,93,1.244,99,1.532,103,1.701,104,1.382,105,1.114,108,1.119,118,1.748,147,2.334,164,0.904,165,1.701,166,1.607,167,1.114,168,1.379,169,1.114,170,1.114,171,0.653,172,1.114,173,0.653,174,1.114,175,0.73,176,1.114,177,0.904,178,1.114,179,1.161,180,1.114,181,0.653,182,1.114,183,0.516,184,1.114,185,0.653,186,1.114,187,0.653,188,1.114,189,1.114,190,1.114,225,2.539,310,1.114,337,3.212,366,1.95,372,1.382,403,1.239,470,1.114,539,2.131,587,1.382,588,1.382,593,2.343,598,2.437,625,1.534,626,1.382,633,1.382,635,1.239,730,1.999,759,2.539,809,1.748,810,1.999,851,1.999,890,1.548,905,3.389,948,1.999,965,2.334,971,3.673,972,1.999,973,3.674,974,3.213,975,3.913,976,3.674,977,2.843,978,3.913,979,2.843,980,3.213,981,3.673,982,2.843,983,2.843,984,2.964,985,2.843,986,2.843,987,3.213,988,2.334,989,1.999,990,1.999,991,1.382,992,3.674,993,2.334,994,2.334,995,2.334,996,2.334,997,2.334,998,2.334,999,3.213,1000,4.394,1001,2.334,1002,2.334,1003,4.15,1004,2.334,1005,2.334,1006,2.334,1007,2.334,1008,2.334,1009,3.957,1010,2.334,1011,3.957,1012,2.334,1013,2.334,1014,2.334,1015,2.334,1016,2.334,1017,2.334,1018,2.334,1019,1.999,1020,2.334,1021,2.334,1022,2.334,1023,2.334,1024,2.334,1025,3.913,1026,2.843,1027,2.843,1028,2.843]],["title/components/HomeComponent.html",[76,0.103,181,0.671]],["body/components/HomeComponent.html",[3,0.331,4,0.28,5,0.505,8,0.442,9,1.358,10,1.927,17,1.087,19,2.52,20,1.469,22,1.731,23,0.042,24,1.026,25,1.088,26,1.925,31,1.134,42,0.569,43,0.385,45,1.087,46,1.348,47,1.706,49,0.185,58,0.331,59,0.793,63,1.559,66,0.979,73,0.019,74,0.026,75,0.019,76,0.157,77,0.712,78,1.358,79,1.087,80,1.087,81,1.087,82,0.712,84,1.358,85,1.559,86,1.087,87,1.445,88,1.141,89,0.988,91,0.988,93,1.223,94,3.626,96,3.626,97,3.105,98,2.405,99,1.516,100,1.95,103,1.684,104,2.675,105,2.184,106,3.158,108,1.263,110,2.705,112,3.158,114,2.823,117,2.277,121,3.158,123,2.584,164,0.882,165,1.358,166,1.223,167,1.087,168,1.364,169,1.087,170,1.087,171,0.637,172,1.087,173,0.637,174,1.087,175,0.712,176,1.508,177,0.882,178,1.087,179,0.637,180,1.087,181,1.096,182,1.087,183,0.503,184,1.087,185,0.637,186,1.087,187,0.637,188,1.087,189,1.087,190,1.087,223,2.366,225,1.348,361,2.366,362,2.705,625,1.731,719,3.158,720,3.158,721,3.158,722,3.158,723,3.158,724,3.158,805,2.435,806,1.95,824,2.277,981,3.105,1029,2.277,1030,4.417,1031,3.847,1032,4.417,1033,4.417,1034,4.417,1035,4.417,1036,3.847,1037,3.847,1038,3.847,1039,3.847,1040,2.774,1041,3.847,1042,2.774,1043,2.774,1044,2.774,1045,2.774,1046,3.847,1047,2.774,1048,3.847,1049,2.774,1050,2.774,1051,2.774,1052,2.774,1053,3.847,1054,2.774,1055,2.774,1056,2.774,1057,2.774,1058,3.916,1059,2.774,1060,2.277,1061,2.774,1062,3.847,1063,2.774,1064,2.774,1065,2.774,1066,2.774,1067,2.774,1068,3.158]],["title/interfaces/IDocument.html",[805,1.419,991,1.419]],["body/interfaces/IDocument.html",[3,0.492,4,0.416,5,0.416,8,0.657,23,0.041,25,1.231,42,0.492,54,1.959,58,0.492,67,3.022,73,0.028,74,0.034,75,0.028,93,1.581,98,3.022,108,1.744,403,2.329,788,4.556,789,4.556,790,4.556,805,2.418,921,4.556,991,2.003,1069,2.897,1070,3.383,1071,5.344,1072,4.121,1073,3.383]],["title/interfaces/IFile.html",[984,1.796,991,1.419]],["body/interfaces/IFile.html",[3,0.53,4,0.347,5,0.595,8,0.548,10,1.412,23,0.042,25,1.065,42,0.643,43,0.477,45,1.347,48,1.213,49,0.296,58,0.41,59,0.983,60,1.213,73,0.023,74,0.03,75,0.023,76,0.174,84,1.213,85,1.568,87,0.882,88,0.704,89,0.882,91,0.882,93,1.412,99,1.092,103,1.213,108,1.577,118,3.198,165,1.213,166,1.412,179,1.02,225,2.391,337,2.113,366,1.498,403,2.145,470,1.347,587,1.67,588,1.67,593,2.391,598,2.418,625,1.347,626,1.67,633,1.67,635,1.498,759,2.391,809,2.113,810,2.416,851,2.416,890,1.871,905,2.416,948,2.416,971,2.416,972,2.416,973,2.821,974,2.821,976,2.821,980,2.821,981,3.459,984,2.731,987,3.646,988,2.821,989,2.416,990,2.416,991,1.67,992,4.529,993,4.27,994,2.821,995,2.821,996,2.821,997,2.821,998,2.821,999,3.646,1000,4.422,1001,2.821,1002,2.821,1003,4.04,1004,2.821,1005,2.821,1006,2.821,1007,2.821,1008,2.821,1009,4.27,1010,2.821,1011,4.27,1012,2.821,1013,2.821,1014,2.821,1015,2.821,1016,2.821,1017,2.821,1018,2.821,1019,2.416,1020,2.821,1021,2.821,1022,2.821,1023,2.821,1024,2.821,1069,2.416]],["title/classes/ItemFlatNode.html",[49,0.195,411,1.59]],["body/classes/ItemFlatNode.html",[0,0.823,1,1.286,3,0.171,4,0.144,5,0.235,8,0.727,10,0.742,20,0.758,23,0.042,24,0.934,25,0.604,31,0.368,35,1.653,42,0.505,43,0.199,48,0.506,49,0.227,54,0.823,55,1.653,58,0.406,59,0.667,60,1.758,63,1.895,66,1.808,73,0.016,74,0.016,75,0.01,76,0.083,82,0.758,84,0.506,85,0.823,87,0.368,88,0.293,89,0.368,91,0.368,93,0.742,99,0.455,103,0.506,105,1.788,108,1.511,122,0.881,125,1.134,146,2.144,168,0.41,183,0.26,197,0.78,232,0.696,247,0.78,276,0.696,296,1.134,302,0.78,303,1.27,310,1.659,326,0.881,327,1.814,329,0.881,344,0.881,364,1.607,365,0.78,366,1.749,367,1.007,368,2.602,369,1.434,370,1.007,371,2.091,372,1.951,373,1.007,374,4.002,375,1.007,376,2.952,377,2.391,378,2.074,379,1.27,380,2.039,381,0.881,382,1.007,387,0.881,388,2.144,393,1.007,402,3.101,403,1.749,407,3.1,409,1.007,410,2.074,411,2.753,414,1.007,416,1.007,419,1.007,421,1.007,422,1.64,424,1.64,428,1.007,431,1.007,433,2.391,434,1.007,436,1.007,438,1.007,440,1.64,443,0.78,444,1.64,445,2.391,446,1.007,447,1.007,448,1.434,449,0.881,450,1.64,451,1.007,452,1.64,453,1.64,454,1.64,455,2.632,456,1.64,457,1.434,458,0.78,459,0.78,460,1.27,461,0.78,462,1.007,463,1.007,464,1.007,465,1.007,466,1.007,467,2.632,468,1.814,469,2.091,470,2.071,471,1.007,472,1.007,473,2.632,474,3.442,475,1.007,476,2.391,477,1.007,478,1.007,479,1.64,480,3.965,481,1.007,482,2.632,483,2.632,484,1.64,485,1.64,486,1.64,487,1.007,488,1.007,489,2.074,490,1.64,491,2.074,492,2.074,493,2.074,494,2.074,495,2.074,496,1.64,497,1.64,498,1.007,499,1.007,500,1.007,501,1.64,502,1.007,503,1.007,504,1.007,505,1.007,506,1.007,507,1.007,508,1.653,509,1.007,510,1.007,511,1.007,512,2.391,513,1.64,514,1.64,515,1.007,516,1.007,517,1.007,518,1.007,519,1.007,520,1.007,521,0.881,522,1.007,523,1.007,524,1.007,525,1.007,526,1.007,527,1.007,528,1.007,529,0.881,530,2.074,531,1.007,532,1.007,533,1.007,534,1.007,535,1.007,536,1.007,537,1.007,538,1.007,539,1.607,540,0.881,541,1.64,542,1.007,543,1.007,544,1.64,545,1.007,546,1.007,547,1.007,548,1.007,549,1.007,550,1.007,551,1.434,552,1.007,553,1.007,554,1.007,555,1.007,556,1.007,557,1.007,558,1.64,559,1.64,560,1.007,561,1.007,562,1.007,563,1.64,564,1.007,565,1.007,566,1.007,567,1.007,568,2.074,569,1.007,570,2.074,571,1.007,572,1.007,573,1.007,574,1.007,575,1.007,576,1.007,577,0.881,578,1.007,579,1.007,580,1.007,581,1.007,582,1.007,583,2.391,584,2.391,585,1.007,586,1.007,587,1.653,588,1.134,589,1.64,590,1.434,591,1.434,592,1.814,593,1.653,594,1.434,595,1.434,596,1.64,597,1.434,598,1.27,599,1.007,600,1.64,601,1.007,602,1.007,603,1.007,604,1.007,605,2.391,606,1.007,607,1.64,608,2.468,609,2.468,610,1.434,611,1.64,612,1.007,613,1.814,614,1.007,615,1.64,616,1.007,617,1.007,618,1.007,619,1.007,620,1.007,621,1.64,622,1.007,623,0.881,624,1.007,625,0.914,626,1.653,627,1.64,628,1.286,629,1.007,630,1.007,631,1.007,632,1.007,633,1.134,634,1.434,635,1.017,636,1.64,637,2.091,638,1.007,639,1.007,640,1.007,641,1.007,642,1.007,643,1.64,644,1.007,645,1.007,646,1.007,647,1.007,648,1.007,649,1.007,650,1.007,651,1.007,652,1.007,653,1.007,654,1.007,655,0.881,656,1.007,657,1.007,658,2.632,659,1.007,660,1.64,661,1.007,662,1.007,663,1.64,664,1.007,665,1.007,666,1.007,667,1.007,668,2.975,669,1.007,670,1.64,671,2.632,672,1.007,673,1.64,674,1.007,675,1.007,676,1.007,677,1.007,678,1.007,679,1.007,680,1.007,681,1.007,682,1.007,683,1.434,684,0.881,685,2.391,686,1.007,687,1.64,688,2.391,689,1.007,690,1.007,691,1.007,692,1.007,693,1.007,694,1.64,695,1.007,696,1.007,697,1.007,698,2.391,699,1.64,700,0.881,701,1.007,702,1.007,703,1.007,704,1.007,705,1.007,706,1.007,707,1.007,708,1.007,709,1.007,1074,1.433,1075,1.433,1076,1.433]],["title/classes/ItemNode.html",[49,0.195,407,1.59]],["body/classes/ItemNode.html",[0,0.827,1,1.291,3,0.172,4,0.145,5,0.236,8,0.729,10,0.745,20,0.601,23,0.042,24,0.936,25,0.48,31,0.37,35,1.658,42,0.506,43,0.2,48,0.508,49,0.227,54,0.827,55,1.658,58,0.407,59,0.67,60,1.76,63,1.897,66,1.81,73,0.016,74,0.016,75,0.01,76,0.083,82,0.76,84,0.508,85,0.827,87,0.37,88,0.295,89,0.37,91,0.37,93,0.745,99,0.458,103,0.508,105,1.791,108,1.513,122,0.886,125,1.139,146,2.148,168,0.412,183,0.261,197,0.784,232,0.7,247,0.784,276,0.7,296,1.139,302,0.784,303,1.276,310,1.662,326,0.886,327,1.821,329,0.886,344,0.886,364,1.613,365,0.784,366,1.754,367,1.012,368,2.608,369,1.441,370,1.012,371,2.098,372,1.956,373,1.012,374,4.004,375,1.012,376,3.015,377,2.399,378,2.639,379,1.276,380,2.045,381,0.886,382,1.012,387,0.886,388,2.148,393,1.012,402,2.639,403,1.636,407,3.118,409,1.012,410,2.082,411,2.716,414,1.012,416,1.012,419,1.012,421,1.012,422,1.647,424,1.647,428,1.012,431,1.012,433,2.399,434,1.012,436,1.012,438,1.012,440,1.647,443,0.784,444,1.647,445,2.399,446,1.012,447,1.012,448,1.441,449,0.886,450,1.647,451,1.012,452,1.647,453,1.647,454,1.012,455,1.647,456,1.012,457,0.886,458,0.784,459,0.784,460,1.276,461,0.784,462,1.012,463,1.012,464,1.012,465,1.012,466,1.012,467,2.639,468,1.821,469,2.098,470,2.073,471,1.012,472,1.012,473,2.639,474,3.447,475,1.012,476,2.399,477,1.012,478,1.012,479,1.647,480,3.968,481,1.012,482,2.639,483,2.639,484,1.647,485,1.647,486,1.647,487,1.012,488,1.012,489,2.082,490,1.647,491,2.082,492,2.082,493,2.082,494,2.082,495,2.082,496,1.647,497,1.647,498,1.012,499,1.012,500,1.012,501,1.647,502,1.012,503,1.012,504,1.012,505,1.012,506,1.012,507,1.012,508,1.658,509,1.012,510,1.012,511,1.012,512,2.399,513,1.647,514,1.647,515,1.012,516,1.012,517,1.012,518,1.012,519,1.012,520,1.012,521,0.886,522,1.012,523,1.012,524,1.012,525,1.012,526,1.012,527,1.012,528,1.012,529,0.886,530,2.082,531,1.012,532,1.012,533,1.012,534,1.012,535,1.012,536,1.012,537,1.012,538,1.012,539,1.613,540,0.886,541,1.647,542,1.012,543,1.012,544,1.647,545,1.012,546,1.012,547,1.012,548,1.012,549,1.012,550,1.012,551,1.441,552,1.012,553,1.012,554,1.012,555,1.012,556,1.012,557,1.012,558,1.647,559,1.647,560,1.012,561,1.012,562,1.012,563,1.647,564,1.012,565,1.012,566,1.012,567,1.012,568,2.082,569,1.012,570,2.082,571,1.012,572,1.012,573,1.012,574,1.012,575,1.012,576,1.012,577,0.886,578,1.012,579,1.012,580,1.012,581,1.012,582,1.012,583,2.399,584,2.399,585,1.012,586,1.012,587,1.658,588,1.139,589,1.647,590,1.441,591,1.441,592,1.821,593,1.658,594,1.441,595,1.441,596,1.647,597,1.441,598,1.276,599,1.012,600,1.647,601,1.012,602,1.012,603,1.012,604,1.012,605,2.399,606,1.012,607,1.647,608,2.474,609,2.474,610,1.441,611,1.647,612,1.012,613,1.821,614,1.012,615,1.647,616,1.012,617,1.012,618,1.012,619,1.012,620,1.012,621,1.647,622,1.012,623,0.886,624,1.012,625,0.918,626,1.658,627,1.647,628,1.291,629,1.012,630,1.012,631,1.012,632,1.012,633,1.139,634,1.441,635,1.021,636,1.647,637,2.098,638,1.012,639,1.012,640,1.012,641,1.012,642,1.012,643,1.647,644,1.012,645,1.012,646,1.012,647,1.012,648,1.012,649,1.012,650,1.012,651,1.012,652,1.012,653,1.012,654,1.012,655,0.886,656,1.012,657,1.012,658,2.639,659,1.012,660,1.647,661,1.012,662,1.012,663,1.647,664,1.012,665,1.012,666,1.012,667,1.012,668,2.982,669,1.012,670,1.647,671,2.639,672,1.012,673,1.647,674,1.012,675,1.012,676,1.012,677,1.012,678,1.012,679,1.012,680,1.012,681,1.012,682,1.012,683,1.441,684,0.886,685,2.399,686,1.012,687,1.647,688,2.399,689,1.012,690,1.012,691,1.012,692,1.012,693,1.012,694,1.647,695,1.012,696,1.012,697,1.012,698,2.399,699,1.647,700,0.886,701,1.012,702,1.012,703,1.012,704,1.012,705,1.012,706,1.012,707,1.012,708,1.012,709,1.012,1077,1.44,1078,1.44]],["title/components/SearchComponent.html",[76,0.103,185,0.671]],["body/components/SearchComponent.html",[3,0.483,4,0.408,5,0.496,23,0.041,24,1.007,42,0.483,43,0.562,49,0.27,58,0.483,73,0.028,74,0.034,75,0.028,76,0.188,77,1.039,78,1.737,79,1.586,80,1.586,81,1.586,82,1.039,86,1.586,87,1.534,88,1.218,89,1.264,91,1.264,164,1.287,165,1.737,166,1.564,167,1.586,168,1.578,169,1.586,170,1.586,171,0.93,172,1.586,173,0.93,174,1.586,175,1.039,176,1.586,177,1.287,178,1.586,179,0.93,180,1.586,181,0.93,182,1.586,183,0.734,184,1.586,185,1.267,186,1.586,187,0.93,188,1.586,189,1.586,190,1.586,361,3.392,1079,3.323,1080,5.303,1081,4.921,1082,4.921]],["title/components/SettingsComponent.html",[76,0.103,187,0.671]],["body/components/SettingsComponent.html",[3,0.484,4,0.409,5,0.497,23,0.041,24,1.009,42,0.484,43,0.563,49,0.27,58,0.484,73,0.028,74,0.034,75,0.028,76,0.188,77,1.042,78,1.74,79,1.591,80,1.591,81,1.591,82,1.042,86,1.591,87,1.535,88,1.218,89,1.266,91,1.266,164,1.29,165,1.74,166,1.567,167,1.591,168,1.579,169,1.591,170,1.591,171,0.933,172,1.591,173,0.933,174,1.591,175,1.042,176,1.591,177,1.29,178,1.591,179,0.933,180,1.591,181,0.933,182,1.591,183,0.736,184,1.591,185,0.933,186,1.591,187,1.269,188,2.081,189,1.591,190,1.591,1083,3.333,1084,5.31,1085,4.93]],["title/injectables/UploadService.html",[0,1.031,759,1.419]],["body/injectables/UploadService.html",[0,1.635,2,2.258,3,0.438,4,0.37,5,0.566,7,2,8,0.585,9,1.635,10,1.784,17,1.439,19,2.728,20,1.303,22,1.99,23,0.042,24,1.039,25,1.091,26,2.212,31,1.19,32,3.864,42,0.67,43,0.51,44,3.804,45,1.439,46,1.785,47,2.258,48,1.296,49,0.309,50,3.015,51,3.015,56,3.015,57,2.258,58,0.438,59,1.05,60,1.635,63,1.635,64,3.804,65,2.582,66,1.635,67,2,68,3.015,73,0.025,74,0.032,75,0.025,100,2.582,123,1.785,628,1.6,759,2.467,805,2.591,806,2.582,809,2.258,843,3.804,989,2.582,990,2.582,1019,2.582,1058,4.376,1060,3.804,1086,3.015,1087,4.633,1088,4.633,1089,3.672,1090,4.633,1091,3.672,1092,4.633,1093,3.672,1094,3.672,1095,3.672,1096,3.672,1097,3.672,1098,3.672,1099,3.672,1100,3.672,1101,3.672,1102,3.672,1103,3.672,1104,3.672,1105,3.672,1106,3.672]],["title/coverage.html",[1107,3.272]],["body/coverage.html",[0,1.813,1,1.642,5,0.38,6,3.094,23,0.042,25,0.771,46,2.289,49,0.342,66,1.33,73,0.026,74,0.032,75,0.026,76,0.207,77,0.968,83,3.094,124,2.052,171,0.866,173,0.866,175,0.968,177,1.198,179,0.866,181,0.866,183,0.683,185,0.866,187,0.866,337,2.896,343,2.649,345,3.094,364,2.052,365,3.076,407,2.052,411,2.052,458,2.052,461,2.052,470,2.367,710,3.094,738,3.094,739,3.094,741,3.094,759,1.831,805,1.831,890,2.564,897,3.094,971,3.311,972,3.311,984,2.317,991,2.289,1029,3.094,1070,3.094,1079,3.094,1083,3.094,1086,3.094,1107,3.094,1108,3.769,1109,3.769,1110,4.709,1111,4.709,1112,3.769,1113,3.769,1114,3.769,1115,3.769,1116,3.769,1117,3.769,1118,3.769,1119,3.769,1120,3.769,1121,3.769,1122,3.769,1123,3.769,1124,3.769,1125,5.649,1126,4.709,1127,3.769,1128,5.649,1129,3.769,1130,3.094,1131,3.094,1132,3.866,1133,3.094,1134,3.094,1135,3.769]],["title/dependencies.html",[194,2.16,1136,2.439]],["body/dependencies.html",[23,0.042,43,0.608,48,1.545,73,0.03,74,0.035,75,0.03,194,2.692,196,3.078,281,4.235,282,3.172,287,3.595,359,3.595,1073,3.595,1137,4.379,1138,4.915,1139,4.379,1140,4.379,1141,4.379,1142,4.379,1143,4.379,1144,4.379,1145,4.379,1146,4.379,1147,4.379,1148,4.379,1149,4.379,1150,4.379,1151,4.379,1152,4.379,1153,4.379]],["title/index.html",[8,0.389,1154,2.439,1155,2.439]],["body/index.html",[4,0.415,23,0.034,24,0.842,66,1.452,73,0.028,74,0.034,75,0.028,76,0.189,88,0.842,127,4.554,130,3.494,206,2.53,225,2,232,2.596,351,3.378,369,3.492,919,3.378,934,4.385,944,4.081,1138,3.378,1156,4.115,1157,4.971,1158,4.115,1159,5.341,1160,4.115,1161,4.115,1162,5.679,1163,5.838,1164,4.115,1165,4.115,1166,4.115,1167,4.115,1168,4.115,1169,4.115,1170,4.115,1171,4.115,1172,5.341,1173,4.115,1174,4.115,1175,4.115,1176,4.115,1177,4.115,1178,4.115,1179,4.115,1180,3.378,1181,4.971,1182,5.548,1183,4.115,1184,4.971,1185,4.971,1186,4.115,1187,4.115,1188,4.115,1189,5.341,1190,4.115,1191,4.115,1192,4.115,1193,4.115]],["title/modules.html",[193,2.17]],["body/modules.html",[23,0.037,73,0.032,74,0.037,75,0.032,192,2.887,193,2.556,203,2.556,282,2.887,1068,3.854,1194,4.695,1195,4.695,1196,5.371,1197,4.695]],["title/overview.html",[1198,3.272]],["body/overview.html",[2,2.515,23,0.041,73,0.028,74,0.034,75,0.028,77,1.497,78,1.444,164,1.3,171,1.224,173,1.224,175,1.368,179,1.224,181,1.224,183,0.966,185,1.224,187,1.224,191,2.515,192,3.771,193,2.227,194,2.515,195,3.358,196,2.875,197,2.227,198,2.875,199,3.358,200,3.358,201,3.358,202,3.358,203,2.901,204,4.066,205,3.358,206,2.515,344,2.515,357,2.515,725,4.066,726,4.066,1069,2.875,1198,3.358,1199,4.09,1200,4.09]],["title/routes.html",[357,2.451]],["body/routes.html",[23,0.037,73,0.032,74,0.037,75,0.032,357,2.932]],["title/miscellaneous/variables.html",[1201,2.002,1202,2.883]],["body/miscellaneous/variables.html",[8,0.667,23,0.041,25,1.186,46,2.711,73,0.028,74,0.034,75,0.028,82,1.074,97,3.53,104,2.711,105,2.186,108,1.197,310,1.64,365,2.278,371,2.573,372,2.614,388,2.44,458,2.734,459,2.278,460,2.278,461,2.734,508,2.033,628,2.188,1130,3.435,1131,3.435,1132,3.435,1133,4.122,1134,4.122,1180,4.122,1201,3.435,1202,3.435,1203,5.021,1204,4.184,1205,4.184,1206,5.021,1207,4.184,1208,4.184,1209,4.184,1210,4.184,1211,4.184,1212,4.184,1213,4.184,1214,4.184,1215,4.184,1216,4.184]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":470,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["0.75",{"_index":697,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["0/1",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["1.10.0",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["1.16.1",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["1.amazonaws.com:5000",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["100",{"_index":890,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["10px",{"_index":729,"title":{},"body":{"components/DashboardComponent.html":{}}}],["131.compute",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["180",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":725,"title":{},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["200",{"_index":910,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["200px",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["2020",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["20px",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["25",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":726,"title":{},"body":{"components/DashboardComponent.html":{},"overview.html":{}}}],["3.5.0",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["3/17",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":533,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["3000",{"_index":609,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["33",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["4.4.1",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":913,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["40em",{"_index":1027,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["5",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["500",{"_index":915,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["502",{"_index":916,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["52",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.5.4",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1200,"title":{},"body":{"overview.html":{}}}],["7/44",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8px",{"_index":964,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["9",{"_index":1199,"title":{},"body":{"overview.html":{}}}],["9.1.3",{"_index":1138,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.2.2",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":558,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["_nodedata",{"_index":559,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["_nodedata.expandable",{"_index":560,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["_nodedata.item",{"_index":562,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["abc",{"_index":1100,"title":{},"body":{"injectables/UploadService.html":{}}}],["above",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["accessors",{"_index":398,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["accordion",{"_index":900,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["accumulator",{"_index":471,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["accumulator.concat(node",{"_index":478,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["action",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{}}}],["actual_component",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["add",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["add_circle",{"_index":889,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["added",{"_index":380,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["addkeywordtodoc",{"_index":744,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["addnewitem(node",{"_index":657,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["adds",{"_index":840,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["adduncategorizeddimension",{"_index":11,"title":{},"body":{"injectables/ApiService.html":{}}}],["adduncategorizeddimension(dim",{"_index":28,"title":{},"body":{"injectables/ApiService.html":{}}}],["adduncategorizedkeyword",{"_index":12,"title":{},"body":{"injectables/ApiService.html":{}}}],["adduncategorizedkeyword(key",{"_index":33,"title":{},"body":{"injectables/ApiService.html":{}}}],["align",{"_index":956,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["already",{"_index":610,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["amos",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["and/or",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["angular",{"_index":934,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/collections",{"_index":808,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["angular/cdk/drag",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/cdk/tree",{"_index":451,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/common",{"_index":1073,"title":{},"body":{"interfaces/IDocument.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":45,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["angular/compiler",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":43,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentationComponent.html":{}}}],["angular/material/form",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/material/sort",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentViewTableComponent.html":{}}}],["angular/material/table",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"components/DocumentViewTableComponent.html":{}}}],["angular/material/toolbar",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tree",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["angular/platform",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":359,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["apiservice",{"_index":1,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["app",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"index.html":{}}}],["app.component",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":77,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appears",{"_index":624,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["application/json",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["apply",{"_index":878,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["applybulkkeywords",{"_index":750,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["applybulkkeywords(keyword",{"_index":764,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["applykeyword",{"_index":751,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["applykeyword(doc",{"_index":766,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["appmodule",{"_index":192,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":343,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":203,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":690,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["arising",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["arr.findindex((elem",{"_index":631,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["array",{"_index":625,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["artifacts",{"_index":1174,"title":{},"body":{"index.html":{}}}],["assets/img/infinitag1.png",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["assign",{"_index":923,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["assigned",{"_index":920,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["associated",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["authors",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["auto",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/FileUploadComponent.html":{}}}],["automated",{"_index":720,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["automatically",{"_index":1168,"title":{},"body":{"index.html":{}}}],["available",{"_index":1068,"title":{},"body":{"components/HomeComponent.html":{},"modules.html":{}}}],["back",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["backend",{"_index":55,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["backendstatus",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["bar",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["basis",{"_index":960,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["behaviorsubject",{"_index":440,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["below",{"_index":699,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["between",{"_index":962,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["body",{"_index":907,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["boolean",{"_index":457,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["bootstrap",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":733,"title":{},"body":{"components/DashboardComponent.html":{}}}],["bottom",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["break",{"_index":1011,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["breakpoint",{"_index":745,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["browse",{"_index":1196,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":352,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":280,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":369,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"index.html":{}}}],["buildfiletree",{"_index":383,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["buildfiletree(obj",{"_index":401,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["button:focus",{"_index":891,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["buttons",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{}}}],["c",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["called",{"_index":588,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["case",{"_index":1009,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["catcherror",{"_index":989,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["category",{"_index":377,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["cdkdragdrop",{"_index":445,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["center",{"_index":700,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["change",{"_index":919,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["changed",{"_index":922,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["changekeywords",{"_index":918,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["changes",{"_index":776,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["changes.documents",{"_index":829,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["changes.documents.currentvalue",{"_index":830,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["changes.filter",{"_index":832,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["changes.filter.currentvalue",{"_index":834,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["charge",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["check",{"_index":1192,"title":{},"body":{"index.html":{}}}],["checked",{"_index":627,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["checklist",{"_index":367,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["checklistdatabase",{"_index":364,"title":{"injectables/ChecklistDatabase.html":{}},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["checks",{"_index":623,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["children",{"_index":378,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["claim",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["class",{"_index":49,"title":{"classes/AppPage.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["classes",{"_index":344,"title":{},"body":{"classes/AppPage.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"overview.html":{}}}],["cli",{"_index":1159,"title":{},"body":{"index.html":{}}}],["close",{"_index":1004,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["cloud_done",{"_index":1024,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["cloud_upload",{"_index":1020,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["cluster_appmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1170,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":904,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["column",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["columns",{"_index":817,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["communication",{"_index":52,"title":{},"body":{"injectables/ApiService.html":{}}}],["component",{"_index":76,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["components",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["conditions",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["connection",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["console",{"_index":1002,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["console.log(\"postfile",{"_index":1097,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('document",{"_index":1022,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["console.log(response",{"_index":1067,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(value",{"_index":1056,"title":{},"body":{"components/HomeComponent.html":{}}}],["const",{"_index":63,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["constructor",{"_index":17,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["constructor(api",{"_index":399,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{}}}],["constructor(http",{"_index":18,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(httpclient",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["constructor(private",{"_index":59,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["constructor(uploadservice",{"_index":977,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["container",{"_index":728,"title":{},"body":{"components/DashboardComponent.html":{}}}],["containing",{"_index":986,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["content",{"_index":67,"title":{},"body":{"injectables/ApiService.html":{},"classes/AppPage.html":{},"components/DocumentationComponent.html":{},"interfaces/IDocument.html":{},"injectables/UploadService.html":{}}}],["context",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["convert",{"_index":564,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copies",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["copy",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["copypasteitem",{"_index":384,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["copypasteitem(from",{"_index":409,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copypasteitemabove",{"_index":385,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["copypasteitemabove(from",{"_index":414,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copypasteitembelow",{"_index":386,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["copypasteitembelow(from",{"_index":416,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["copyright",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["coverage",{"_index":1107,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createdat",{"_index":884,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["creation_date",{"_index":790,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"interfaces/IDocument.html":{}}}],["currently",{"_index":459,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["currentroot",{"_index":427,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["damages",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboard",{"_index":362,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["dashboard'},{'name",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["dashboard.component.html",{"_index":712,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":711,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.component",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboardcomponent",{"_index":171,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":388,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["data.splice(index",{"_index":861,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["database",{"_index":368,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["database.datachange.subscribe(data",{"_index":550,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["datachange",{"_index":382,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["datasource",{"_index":529,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["date",{"_index":1071,"title":{},"body":{"interfaces/IDocument.html":{}}}],["date().gettime",{"_index":687,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["date(document.creation_date",{"_index":823,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["date:'dd.mm.yy",{"_index":886,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["date:\\'dd.mm.yy",{"_index":896,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["deal",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dealings",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["declarations",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorators",{"_index":799,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{}}}],["default",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":20,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["defines",{"_index":815,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["delete",{"_index":634,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deleted",{"_index":643,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deletedimension(dimension",{"_index":638,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deleteexample",{"_index":935,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["deleteitem",{"_index":389,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["deleteitem(node",{"_index":419,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deletekeyword(keyword",{"_index":644,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deletenode",{"_index":390,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["deletenode(nodes",{"_index":421,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dependencies",{"_index":194,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":366,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["deutch",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["dev",{"_index":1165,"title":{},"body":{"index.html":{}}}],["development",{"_index":1161,"title":{},"body":{"index.html":{}}}],["dim",{"_index":30,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{}}}],["dimension",{"_index":592,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dimensions",{"_index":929,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["dimformatted",{"_index":600,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dims",{"_index":928,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["direction",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["directives",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1173,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1177,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":877,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["disabled\\'}}apply",{"_index":895,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["display",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["displayed",{"_index":836,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["displayedcolumns",{"_index":746,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["displaying",{"_index":995,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["displays",{"_index":811,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["dist",{"_index":1176,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["doc",{"_index":768,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["doc.id",{"_index":860,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["document",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["document.creation_date",{"_index":822,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["document.id",{"_index":859,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["documentation",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DocumentationComponent.html":{},"coverage.html":{}}}],["documentation'},{'name",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["documentation.component.html",{"_index":899,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.scss",{"_index":898,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation/documentation.component",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["documentationcomponent",{"_index":173,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["documents",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["documentsurl",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentview/document",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["documentviewtablecomponent",{"_index":175,"title":{"components/DocumentViewTableComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["doe",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["doesnt",{"_index":675,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dom",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["down",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{}}}],["download",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{}}}],["download(document",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["downloadurl",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{}}}],["drag",{"_index":530,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragdropmodule",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["dragnode",{"_index":531,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandoverarea",{"_index":536,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandovernode",{"_index":534,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandovertime",{"_index":535,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dragnodeexpandoverwaittimems",{"_index":532,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["drop",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["drop(event",{"_index":649,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dropdim(event",{"_index":581,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dropkey(event",{"_index":585,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["duration",{"_index":608,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["dynamic",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1187,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":345,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":350,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":348,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":373,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["edit",{"_index":727,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{}}}],["edit.checked",{"_index":875,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["editediting",{"_index":894,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["editing",{"_index":874,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["elem",{"_index":632,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["element",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["element(by.css('app",{"_index":353,"title":{},"body":{"classes/AppPage.html":{}}}],["element.creation_date",{"_index":885,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.keywords",{"_index":888,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.language",{"_index":882,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.size",{"_index":883,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.title",{"_index":880,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["element.type",{"_index":881,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["elementref",{"_index":444,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["emptyitem",{"_index":538,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["enabled",{"_index":876,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["end",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["english",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["enter",{"_index":589,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["entered",{"_index":917,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["environment",{"_index":46,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.serverurl",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["environments/environment",{"_index":47,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["err",{"_index":862,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["error",{"_index":842,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["error(\"method",{"_index":463,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DocumentViewTableComponent.html":{}}}],["event.body",{"_index":1023,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["event.container",{"_index":651,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.container.data",{"_index":654,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.currentindex",{"_index":584,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.datatransfer.setdata('foo",{"_index":678,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.datatransfer.setdragimage(this.emptyitem.nativeelement",{"_index":679,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.offsetx",{"_index":692,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.offsety",{"_index":695,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.preventdefault",{"_index":682,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.previouscontainer",{"_index":650,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.previousindex",{"_index":583,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.target.clientheight",{"_index":696,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.target.clientwidth",{"_index":693,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["event.target.focus",{"_index":835,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["event.total",{"_index":1018,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["event.type",{"_index":1008,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["events",{"_index":1105,"title":{},"body":{"injectables/UploadService.html":{}}}],["example",{"_index":7,"title":{},"body":{"injectables/ApiService.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"injectables/UploadService.html":{}}}],["execute",{"_index":1184,"title":{},"body":{"index.html":{}}}],["existingnode",{"_index":568,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["existingnode.item",{"_index":571,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["expand",{"_index":684,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["expandable",{"_index":455,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["expansion",{"_index":957,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["export",{"_index":58,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{}}}],["exports",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["failed(check",{"_index":1001,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["failure",{"_index":951,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["false",{"_index":508,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["fetched",{"_index":931,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["field",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["file.file.name",{"_index":1025,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["file.icon",{"_index":1003,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["file.name",{"_index":1060,"title":{},"body":{"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["file.progress",{"_index":1016,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["file.status",{"_index":1000,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["filekey",{"_index":908,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["filelist",{"_index":981,"title":{},"body":{"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{}}}],["filename",{"_index":879,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["files",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"index.html":{}}}],["files[0",{"_index":1057,"title":{},"body":{"components/HomeComponent.html":{}}}],["fileuploadcomponent",{"_index":179,"title":{"components/FileUploadComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fill",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["fills",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["filter",{"_index":758,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["filtered",{"_index":812,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["filtereddata",{"_index":837,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["filterstring",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{}}}],["finding",{"_index":515,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["firefox",{"_index":673,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["fitness",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["fixed",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["flag",{"_index":1179,"title":{},"body":{"index.html":{}}}],["flat",{"_index":513,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatitem",{"_index":454,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode",{"_index":570,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode.expandable",{"_index":574,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode.item",{"_index":572,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnode.level",{"_index":573,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flatnodemap",{"_index":517,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flattened",{"_index":518,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flattreecontrol",{"_index":450,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flattreecontrol(this.getlevel",{"_index":547,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["flex",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{}}}],["flexbox",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["focus",{"_index":594,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["focus(event",{"_index":769,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["following",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["footer",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["form",{"_index":909,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["formatted",{"_index":596,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["formdata",{"_index":1058,"title":{},"body":{"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["formdata.append('file",{"_index":1059,"title":{},"body":{"components/HomeComponent.html":{}}}],["formdata.append('filekey",{"_index":1098,"title":{},"body":{"injectables/UploadService.html":{}}}],["formdata.append('test",{"_index":1099,"title":{},"body":{"injectables/UploadService.html":{}}}],["formsmodule",{"_index":286,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":629,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["free",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["from.children",{"_index":493,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["from.children.foreach(child",{"_index":494,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["from.item",{"_index":492,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["front",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["frontend",{"_index":1156,"title":{},"body":{"index.html":{}}}],["functionality",{"_index":717,"title":{},"body":{"components/DashboardComponent.html":{}}}],["furnished",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["further",{"_index":1188,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1172,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1158,"title":{},"body":{"index.html":{}}}],["getchildren",{"_index":556,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getdata",{"_index":442,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["getlevel",{"_index":552,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getparent",{"_index":391,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["getparent(currentroot",{"_index":425,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["getparentfromnodes",{"_index":392,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["getparentfromnodes(node",{"_index":428,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["gets",{"_index":587,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["getting",{"_index":1154,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":346,"title":{},"body":{"classes/AppPage.html":{}}}],["getuncategorizeddimensions",{"_index":13,"title":{},"body":{"injectables/ApiService.html":{}}}],["getuncategorizedkeywords",{"_index":14,"title":{},"body":{"injectables/ApiService.html":{}}}],["go",{"_index":1191,"title":{},"body":{"index.html":{}}}],["granted",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["graph",{"_index":1197,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":731,"title":{},"body":{"components/DashboardComponent.html":{}}}],["h2",{"_index":967,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["handle",{"_index":683,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledragend(event",{"_index":707,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledragover(event",{"_index":681,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledragstart(event",{"_index":666,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handledrop(event",{"_index":701,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["handlefileinput",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["handlefileinput(files",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{}}}],["handles",{"_index":994,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["handling",{"_index":51,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["haschild",{"_index":557,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["hasnocontent",{"_index":561,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["header",{"_index":959,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["headers",{"_index":65,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentationComponent.html":{},"injectables/UploadService.html":{}}}],["health",{"_index":941,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["height",{"_index":965,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["hello",{"_index":953,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["help",{"_index":1189,"title":{},"body":{"index.html":{}}}],["helps",{"_index":514,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["hereby",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["hh:mm",{"_index":887,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["holders",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["home",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["home.component.html",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":181,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["html5",{"_index":676,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["http",{"_index":27,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://ec2",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1167,"title":{},"body":{"index.html":{}}}],["http://localhost:5000",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":19,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["httpclientmodule",{"_index":285,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1095,"title":{},"body":{"injectables/UploadService.html":{}}}],["httpevent",{"_index":987,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype",{"_index":988,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype.response",{"_index":1021,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype.responseheader",{"_index":1012,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype.sent",{"_index":1010,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpeventtype.uploadprogress",{"_index":1015,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["httpheaders",{"_index":44,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["httpoptions",{"_index":64,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["httpresponse",{"_index":1094,"title":{},"body":{"injectables/UploadService.html":{}}}],["https://stackoverflow.com/questions/19055264/why",{"_index":674,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["icon",{"_index":993,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["iconpath",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["id",{"_index":921,"title":{},"body":{"components/DocumentationComponent.html":{},"interfaces/IDocument.html":{}}}],["identifier",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["idoc",{"_index":843,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"injectables/UploadService.html":{}}}],["idoc.keywords.includes(keyword",{"_index":844,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["idoc.keywords.push(keyword",{"_index":845,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["idoc.keywords.sort",{"_index":846,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["idoc.title",{"_index":849,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["idocument",{"_index":805,"title":{"interfaces/IDocument.html":{}},"body":{"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["idx",{"_index":999,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["if(!from",{"_index":489,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(!this.isduplicate(this.uncatdimensions",{"_index":603,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(!this.isduplicate(this.uncatkeywords",{"_index":618,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(dimformatted",{"_index":602,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(keyformatted",{"_index":617,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["if(newitem",{"_index":667,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["ifile",{"_index":984,"title":{"interfaces/IFile.html":{}},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["implemented",{"_index":464,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["implements",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["implied",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["import",{"_index":42,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{}}}],["important",{"_index":966,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["imports",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["included",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["including",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["indicating",{"_index":932,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["infineon",{"_index":724,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["infinitag",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{}}}],["information",{"_index":456,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["initialize",{"_index":393,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"injectables/UploadService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"injectables/UploadService.html":{},"overview.html":{}}}],["input",{"_index":593,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["inputs",{"_index":757,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["insert",{"_index":656,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["inserted",{"_index":523,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insertitem",{"_index":394,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["insertitem(parent",{"_index":431,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insertitemabove",{"_index":395,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["insertitemabove(node",{"_index":434,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["insertitembelow",{"_index":396,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["insertitembelow(node",{"_index":436,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["interface",{"_index":991,"title":{"interfaces/IDocument.html":{},"interfaces/IFile.html":{}},"body":{"components/FileUploadComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["interfaces",{"_index":1069,"title":{},"body":{"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"overview.html":{}}}],["interval",{"_index":747,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["isallselected",{"_index":752,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["isduplicate(arr",{"_index":630,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["isexpandable",{"_index":554,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["isnewitem:boolean",{"_index":507,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["item",{"_index":376,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["item's",{"_index":525,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["itemflatnode",{"_index":411,"title":{"classes/ItemFlatNode.html":{}},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["itemnode",{"_index":407,"title":{"classes/ItemNode.html":{}},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{}}}],["items",{"_index":379,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["itemvalue",{"_index":663,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["jjohn",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["jquery",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":371,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["justify",{"_index":961,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["karma",{"_index":1186,"title":{},"body":{"index.html":{}}}],["keep",{"_index":519,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["key",{"_index":35,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keyformatted",{"_index":615,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keys",{"_index":937,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["keyword",{"_index":613,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keyword).subscribe",{"_index":855,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["keywords",{"_index":54,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/IDocument.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywords'},{'name",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["keywords.component.html",{"_index":503,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywords.component.scss",{"_index":504,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["keywords/keywords.component",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["keywordscomponent",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["kind",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["language",{"_index":788,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"interfaces/IDocument.html":{}}}],["later",{"_index":567,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["layout",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["learning",{"_index":722,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["left",{"_index":963,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["legend",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"overview.html":{}}}],["level",{"_index":402,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["liability",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["liable",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["license",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["limitation",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["limited",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["listitem",{"_index":410,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["listitem.item",{"_index":491,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["literal",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["machine",{"_index":721,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["make",{"_index":942,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["map",{"_index":512,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["maps",{"_index":566,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["margin",{"_index":737,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["mastertoggle",{"_index":753,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["mat",{"_index":730,"title":{},"body":{"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{}}}],["mataccordion",{"_index":901,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["matbuttonmodule",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttontogglemodule",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["math.round(event.loaded",{"_index":1017,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["maticonmodule",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodule",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":448,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["matsnackbarmodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["matsort",{"_index":798,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["matsortmodule",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["mattable",{"_index":802,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["mattabledatasource",{"_index":786,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["mattablemodule",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["mattreeflatdatasource",{"_index":452,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreeflatdatasource(this.treecontrol",{"_index":549,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreeflattener",{"_index":453,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreeflattener(this.transformer",{"_index":542,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mattreemodule",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1026,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["merchantability",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["merge",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["message",{"_index":949,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["metadata",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["methods",{"_index":9,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["miscellaneous",{"_index":1201,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["models/idocument.model",{"_index":806,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["modified",{"_index":516,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["modify",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["module",{"_index":191,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":193,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1190,"title":{},"body":{"index.html":{}}}],["moveiteminarray",{"_index":446,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["moveiteminarray(event.container.data",{"_index":652,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["moveiteminarray(this.uncatdimensions",{"_index":582,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["moveiteminarray(this.uncatkeywords",{"_index":586,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["mykeywords",{"_index":791,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["name",{"_index":24,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["nav",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1166,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":347,"title":{},"body":{"classes/AppPage.html":{}}}],["nested",{"_index":467,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nestednode",{"_index":664,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nestednodemap",{"_index":522,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["new",{"_index":66,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"coverage.html":{},"index.html":{}}}],["newdimension",{"_index":505,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newitem",{"_index":480,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newitem:any",{"_index":509,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newitemname",{"_index":526,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["newkeyword",{"_index":506,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["ng",{"_index":1163,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":754,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["ngonchanges(changes",{"_index":773,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["ngoninit",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node",{"_index":374,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.children",{"_index":476,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.children.length",{"_index":501,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.expandable",{"_index":555,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.item",{"_index":473,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["node.level",{"_index":553,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes",{"_index":424,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes.foreach(node",{"_index":500,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes.indexof(nodetodelete",{"_index":498,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodes.splice(index",{"_index":499,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["nodetodelete",{"_index":422,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["none",{"_index":893,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["noninfringement",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["notice",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["now",{"_index":718,"title":{},"body":{"components/DashboardComponent.html":{}}}],["null",{"_index":474,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["number",{"_index":403,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["obj",{"_index":408,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["obj[key",{"_index":472,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["object",{"_index":372,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":32,"title":{},"body":{"injectables/ApiService.html":{},"components/DocumentViewTableComponent.html":{},"injectables/UploadService.html":{}}}],["observe",{"_index":1104,"title":{},"body":{"injectables/UploadService.html":{}}}],["obtaining",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["of(idoc",{"_index":847,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["onchanges",{"_index":740,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["ondimenter",{"_index":599,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["oninit",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["onkey",{"_index":755,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["onkey(event",{"_index":778,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["onkeyenter",{"_index":614,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["onselectfile",{"_index":975,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["onselectfile(files",{"_index":980,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["open_in_new",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["option.tolowercase().startswith(filter",{"_index":873,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["optional",{"_index":26,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["order",{"_index":816,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["otherwise",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["out",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":892,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["overflow",{"_index":1028,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["overview",{"_index":1198,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1136,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentationComponent.html":{}}}],["panel",{"_index":958,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["param",{"_index":626,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"injectables/UploadService.html":{}}}],["parent",{"_index":433,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parent.children",{"_index":479,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parent.children.push(newitem",{"_index":481,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parentnode",{"_index":483,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parentnode.children.splice(parentnode.children.indexof(node",{"_index":485,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["parses",{"_index":997,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["particular",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["patch",{"_index":850,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{}}}],["patchkeywords",{"_index":1087,"title":{},"body":{"injectables/UploadService.html":{}}}],["patchkeywords(idoc",{"_index":1090,"title":{},"body":{"injectables/UploadService.html":{}}}],["path",{"_index":360,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["percentagex",{"_index":691,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["percentagey",{"_index":694,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["permission",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["permit",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["person",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["persons",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["popper.js",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["position",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["post",{"_index":906,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["post(`${environment.serverurl}/upload",{"_index":1102,"title":{},"body":{"injectables/UploadService.html":{}}}],["postexample",{"_index":938,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["postfile",{"_index":1088,"title":{},"body":{"injectables/UploadService.html":{}}}],["postfile(file",{"_index":1092,"title":{},"body":{"injectables/UploadService.html":{}}}],["present",{"_index":611,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["pressed",{"_index":590,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["private",{"_index":539,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["prod",{"_index":1178,"title":{},"body":{"index.html":{}}}],["production",{"_index":1180,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":992,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["project",{"_index":1157,"title":{},"body":{"index.html":{}}}],["promise",{"_index":349,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["protractor",{"_index":351,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provided",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["providedin",{"_index":56,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["providers",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"overview.html":{}}}],["public",{"_index":10,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["publish",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["purpose",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["query",{"_index":926,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["quey",{"_index":930,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["reached",{"_index":927,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["read",{"_index":595,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["reading",{"_index":924,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["readme",{"_index":1193,"title":{},"body":{"index.html":{}}}],["received",{"_index":1014,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["record",{"_index":565,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["regarding",{"_index":53,"title":{},"body":{"injectables/ApiService.html":{}}}],["reload",{"_index":1169,"title":{},"body":{"index.html":{}}}],["remaining",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["removed",{"_index":637,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["removeuncategorizeddimension",{"_index":15,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeuncategorizeddimension(dim",{"_index":38,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeuncategorizedkeyword",{"_index":16,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeuncategorizedkeyword(key",{"_index":40,"title":{},"body":{"injectables/ApiService.html":{}}}],["reportprogress",{"_index":1103,"title":{},"body":{"injectables/UploadService.html":{}}}],["representing",{"_index":715,"title":{},"body":{"components/DashboardComponent.html":{}}}],["represents",{"_index":375,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["request",{"_index":635,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["require",{"_index":1134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":672,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["res",{"_index":856,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["reset",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":1013,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["restriction",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["result",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":60,"title":{},"body":{"injectables/ApiService.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["returns",{"_index":31,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{}}}],["right",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["rights",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["root",{"_index":57,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/UploadService.html":{}}}],["root'},{'name",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["route",{"_index":955,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["routermodule",{"_index":358,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":363,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":357,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":356,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["rows",{"_index":866,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["run",{"_index":1162,"title":{},"body":{"index.html":{}}}],["running",{"_index":944,"title":{},"body":{"components/DocumentationComponent.html":{},"index.html":{}}}],["rxjs",{"_index":48,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":990,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["same",{"_index":520,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["save",{"_index":661,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["saved",{"_index":912,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["savenode(node",{"_index":662,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["scaffolding",{"_index":1171,"title":{},"body":{"index.html":{}}}],["search",{"_index":361,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{}}}],["search'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["search(value",{"_index":780,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["search.component.html",{"_index":1081,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.scss",{"_index":1080,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/search.component",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["searchcomponent",{"_index":185,"title":{"components/SearchComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searches",{"_index":870,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["select",{"_index":655,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selected",{"_index":460,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["selectedkeywords",{"_index":748,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["selectedkwm",{"_index":461,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectedparent",{"_index":524,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selection",{"_index":521,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selectionchange(event",{"_index":708,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["selectionmodel",{"_index":807,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["selectionmodel(true",{"_index":796,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["selector",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["sell",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["send",{"_index":598,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["sendfiletoservice",{"_index":976,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["sendfiletoservice(file",{"_index":983,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["sends",{"_index":633,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["sent",{"_index":914,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["serve",{"_index":1164,"title":{},"body":{"index.html":{}}}],["server",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{},"index.html":{}}}],["serverstatus",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["serverurl",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":50,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UploadService.html":{}}}],["services/api.service",{"_index":449,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["services/upload.service",{"_index":810,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["setdatasource",{"_index":756,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["settimeout",{"_index":825,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["settings",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["settings.component.html",{"_index":1085,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":1084,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings/settings.component",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["settingscomponent",{"_index":187,"title":{"components/SettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shall",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["shut",{"_index":952,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["shutting",{"_index":950,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["simplechanges",{"_index":774,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["size",{"_index":789,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"interfaces/IDocument.html":{}}}],["snackbar",{"_index":540,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["software",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["solid",{"_index":735,"title":{},"body":{"components/DashboardComponent.html":{}}}],["solution",{"_index":723,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["sort",{"_index":749,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["space",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{}}}],["span')).gettext",{"_index":354,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../keywords.component.ts",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:34",{"_index":115,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":113,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:39",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":710,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:39",{"_index":713,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:43",{"_index":714,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/documentation/documentation.component.ts",{"_index":897,"title":{},"body":{"components/DocumentationComponent.html":{},"coverage.html":{}}}],["src/app/documentation/documentation.component.ts:34",{"_index":903,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/documentview/document",{"_index":738,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"coverage.html":{}}}],["src/app/file",{"_index":971,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:36",{"_index":1052,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:37",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:38",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:39",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:40",{"_index":1054,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:41",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:43",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:45",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:46",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:50",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:58",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:68",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/keywords/keywords.component.ts",{"_index":365,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/keywords/keywords.component.ts:115",{"_index":432,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:125",{"_index":435,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:137",{"_index":437,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:149",{"_index":429,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:160",{"_index":426,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:177",{"_index":439,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:182",{"_index":420,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:187",{"_index":412,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:204",{"_index":415,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:220",{"_index":417,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:237",{"_index":423,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:37",{"_index":1077,"title":{},"body":{"classes/ItemNode.html":{}}}],["src/app/keywords/keywords.component.ts:38",{"_index":1078,"title":{},"body":{"classes/ItemNode.html":{}}}],["src/app/keywords/keywords.component.ts:43",{"_index":1075,"title":{},"body":{"classes/ItemFlatNode.html":{}}}],["src/app/keywords/keywords.component.ts:44",{"_index":1076,"title":{},"body":{"classes/ItemFlatNode.html":{}}}],["src/app/keywords/keywords.component.ts:45",{"_index":1074,"title":{},"body":{"classes/ItemFlatNode.html":{}}}],["src/app/keywords/keywords.component.ts:64",{"_index":418,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:67",{"_index":441,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:69",{"_index":400,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:75",{"_index":430,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/keywords/keywords.component.ts:96",{"_index":404,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["src/app/models/idocument.model.ts",{"_index":1070,"title":{},"body":{"interfaces/IDocument.html":{},"coverage.html":{}}}],["src/app/search/search.component.ts",{"_index":1079,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts",{"_index":6,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts:40",{"_index":21,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:44",{"_index":36,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:48",{"_index":37,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:52",{"_index":29,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:61",{"_index":34,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:70",{"_index":39,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/api.service.ts:79",{"_index":41,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/upload.service.ts",{"_index":1086,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/services/upload.service.ts:44",{"_index":1089,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:50",{"_index":1093,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:63",{"_index":1091,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/settings/settings.component.ts",{"_index":1083,"title":{},"body":{"components/SettingsComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1131,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1155,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":387,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["status",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["stops",{"_index":947,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["stopserver",{"_index":946,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["stored",{"_index":1175,"title":{},"body":{"index.html":{}}}],["string",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":405,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["structured",{"_index":370,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["style",{"_index":734,"title":{},"body":{"components/DashboardComponent.html":{}}}],["styles",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["styleurls",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["sub",{"_index":406,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["subject",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["sublicense",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["subscribe((data",{"_index":469,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["subscribe((event",{"_index":1006,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["subscribe((response",{"_index":1062,"title":{},"body":{"components/HomeComponent.html":{}}}],["subscribe((value",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["subscribe(res",{"_index":605,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["subscription",{"_index":793,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["substantial",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["succedes",{"_index":636,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["succesfull",{"_index":852,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["succesfully",{"_index":933,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["success",{"_index":948,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["successfully",{"_index":911,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["support",{"_index":1194,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":943,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["svg",{"_index":1195,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1007,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["tab",{"_index":716,"title":{},"body":{"components/DashboardComponent.html":{}}}],["table",{"_index":741,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["table.component",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["table.component.html",{"_index":743,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.scss",{"_index":742,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts",{"_index":739,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:103",{"_index":775,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:114",{"_index":770,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:126",{"_index":771,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:140",{"_index":772,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:154",{"_index":784,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:172",{"_index":767,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:193",{"_index":765,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:208",{"_index":779,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:218",{"_index":781,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:54",{"_index":795,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:55",{"_index":760,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:58",{"_index":792,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:60",{"_index":801,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:61",{"_index":804,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:62",{"_index":794,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:63",{"_index":762,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:64",{"_index":763,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:65",{"_index":787,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:66",{"_index":797,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:67",{"_index":785,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:70",{"_index":777,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["table.component.ts:84",{"_index":783,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":814,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["template",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["templateurl",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["term",{"_index":782,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["test",{"_index":1183,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1182,"title":{},"body":{"index.html":{}}}],["thin",{"_index":736,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.addkeywordtodoc(doc",{"_index":854,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.api.adduncategorizeddimension(dimformatted",{"_index":604,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.adduncategorizedkeyword(keyformatted",{"_index":619,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.getuncategorizeddimensions",{"_index":578,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.getuncategorizedkeywords",{"_index":468,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.removeuncategorizeddimension(dimension",{"_index":640,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.api.removeuncategorizedkeyword(keyword",{"_index":646,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.applykeyword(doc",{"_index":868,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.breakpoint",{"_index":820,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.buildfiletree(value",{"_index":477,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.copypasteitem(child",{"_index":495,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.data.splice(this.data.indexof(node",{"_index":486,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.copypasteitem(this.flatnodemap.get(this.dragnode",{"_index":704,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.copypasteitemabove(this.flatnodemap.get(this.dragnode",{"_index":702,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.copypasteitembelow(this.flatnodemap.get(this.dragnode",{"_index":703,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.datachange.next(tree_data[event[0].value",{"_index":709,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.deleteitem(this.flatnodemap.get(this.dragnode",{"_index":705,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.insertitem(parentnode",{"_index":659,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.database.updateitem(nestednode",{"_index":665,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datachange.next(this.data",{"_index":482,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datachange.value",{"_index":465,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datasource",{"_index":548,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datasource.data",{"_index":551,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.datasource.filter",{"_index":833,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.datasource.filtereddata",{"_index":838,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.datasource.sort",{"_index":826,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.deletenode(node.children",{"_index":502,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.deletenode(this.data",{"_index":488,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.documents",{"_index":824,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/HomeComponent.html":{}}}],["this.documents.findindex(document",{"_index":858,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.documents.push(response",{"_index":1063,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.documentsurl}/download",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.documentsurl}/upload",{"_index":1053,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.downloadurl}/${document.title",{"_index":1065,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.dragnode",{"_index":668,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnode.item",{"_index":669,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandoverarea",{"_index":698,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandovernode",{"_index":685,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandovertime",{"_index":688,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.dragnodeexpandoverwaittimems",{"_index":689,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.files",{"_index":998,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["this.flatnodemap.get(node",{"_index":658,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.flatnodemap.set(flatnode",{"_index":575,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getchildren",{"_index":545,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getlevel",{"_index":543,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getparent(child",{"_index":487,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.getparentfromnodes(node",{"_index":484,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.http.delete(`${environment.serverurl}/dims/${dim",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.delete(`${environment.serverurl}/keys/${key",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${environment.serverurl}/dims",{"_index":61,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.get(`${environment.serverurl}/keys",{"_index":62,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${environment.serverurl}/dims",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${environment.serverurl}/keys",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.httpclient",{"_index":1101,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.httpclient.delete('/dims/123456",{"_index":936,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.delete('/keys/123456",{"_index":940,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.delete(\\'/dims/123456",{"_index":968,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.delete(\\'/keys/123456",{"_index":970,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.get(this.backendstatus",{"_index":116,"title":{},"body":{"components/AppComponent.html":{}}}],["this.httpclient.get(this.documentsurl",{"_index":1055,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.httpclient.get(url",{"_index":1066,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.httpclient.patch(`${environment.serverurl}/changekeywords",{"_index":1106,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.httpclient.post('/keys",{"_index":939,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.post(\\'/keys",{"_index":969,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["this.httpclient.post(this.uploadurl",{"_index":1061,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.initialize",{"_index":466,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.insertitem(to",{"_index":490,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.insertitemabove(to",{"_index":496,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.insertitembelow(to",{"_index":497,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.isexpandable",{"_index":544,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.isnewitem",{"_index":670,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywords",{"_index":577,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.keywords.filter(option",{"_index":872,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.nestednodemap.get(node",{"_index":569,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.nestednodemap.set(node",{"_index":576,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newdimension",{"_index":612,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newdimension.trim().tolowercase",{"_index":601,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newitem",{"_index":671,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newkeyword",{"_index":622,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.newkeyword.trim().tolowercase",{"_index":616,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.ngoninit",{"_index":831,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.search(event.target.value",{"_index":869,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.selectedkeywords",{"_index":819,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.selection.select(row",{"_index":839,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.selection.selected.foreach(doc",{"_index":867,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.selection.selected.length",{"_index":864,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.serverstatus",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["this.serverurl}/documents",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.serverurl}/health",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["this.setdatasource",{"_index":818,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.snackbar.open('no",{"_index":865,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.snackbar.open(`${dimension",{"_index":642,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${dimformatted",{"_index":607,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${keyformatted",{"_index":621,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(`${keyword",{"_index":648,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.snackbar.open(err",{"_index":863,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.sort",{"_index":827,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["this.treecontrol",{"_index":546,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.collapse(node",{"_index":680,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.expand(node",{"_index":660,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.expanddescendants(this.nestednodemap.get(newitem",{"_index":706,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treecontrol.isexpanded(node",{"_index":686,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.treeflattener",{"_index":541,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions",{"_index":579,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions.indexof(dimension",{"_index":639,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions.push(dimformatted",{"_index":606,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatdimensions.splice(index",{"_index":641,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords",{"_index":580,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords.indexof(keyword",{"_index":645,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords.push(keyformatted",{"_index":620,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uncatkeywords.splice(index",{"_index":647,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["this.uploadservice.patchkeywords(res).subscribe",{"_index":857,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["thorws",{"_index":841,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["through",{"_index":813,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["throw",{"_index":462,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["throwerror",{"_index":809,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["throwerror('keyword",{"_index":848,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["throwerror(error",{"_index":1005,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["tile",{"_index":732,"title":{},"body":{"components/DashboardComponent.html":{}}}],["time",{"_index":1072,"title":{},"body":{"interfaces/IDocument.html":{}}}],["title",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{}}}],["toggle",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["toolbar",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["tort",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["transferarrayitem",{"_index":447,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["transferarrayitem(event.previouscontainer.data",{"_index":653,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["transformer",{"_index":563,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["tree",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["tree_data",{"_index":458,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["treecontrol",{"_index":527,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["treeflattener",{"_index":528,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["true",{"_index":628,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IDocument.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"injectables/UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":475,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["uncatdimensions",{"_index":510,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["uncategorized",{"_index":591,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["uncatkeywords",{"_index":511,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["undefined",{"_index":761,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["under",{"_index":381,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["unit",{"_index":1181,"title":{},"body":{"index.html":{}}}],["unsuccessful",{"_index":925,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["up",{"_index":945,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["update",{"_index":851,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["updated",{"_index":853,"title":{},"body":{"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{}}}],["updateing",{"_index":1096,"title":{},"body":{"injectables/UploadService.html":{}}}],["updateitem",{"_index":397,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["updateitem(node",{"_index":438,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["updates",{"_index":828,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["upload",{"_index":905,"title":{},"body":{"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["upload'},{'name",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["upload.component",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["upload.component.html",{"_index":974,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["upload.component.scss",{"_index":973,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["upload.component.ts",{"_index":972,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["upload.component.ts:48",{"_index":978,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:52",{"_index":979,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:59",{"_index":982,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload.component.ts:73",{"_index":985,"title":{},"body":{"components/FileUploadComponent.html":{}}}],["upload/file",{"_index":337,"title":{},"body":{"modules/AppModule.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"coverage.html":{}}}],["uploading",{"_index":1019,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{}}}],["uploadservice",{"_index":759,"title":{"injectables/UploadService.html":{}},"body":{"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"interfaces/IFile.html":{},"injectables/UploadService.html":{},"coverage.html":{}}}],["uploadurl",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["url",{"_index":1064,"title":{},"body":{"components/HomeComponent.html":{}}}],["use",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"index.html":{}}}],["used",{"_index":996,"title":{},"body":{"components/FileUploadComponent.html":{},"interfaces/IFile.html":{}}}],["uses",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["using",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["value",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"miscellaneous/variables.html":{}}}],["value.status",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["value.tolowercase",{"_index":871,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["var",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{}}}],["variable",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1202,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1160,"title":{},"body":{"index.html":{}}}],["via",{"_index":1185,"title":{},"body":{"index.html":{}}}],["view",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"components/SearchComponent.html":{},"components/SettingsComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":443,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"components/DocumentationComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["viewchild('emptyitem",{"_index":537,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["viewchild(mataccordion",{"_index":902,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["viewchild(matsort",{"_index":800,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["viewchild(mattable",{"_index":803,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["void",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChecklistDatabase.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{},"components/FileUploadComponent.html":{},"components/HomeComponent.html":{},"interfaces/IFile.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["warranties",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["warranty",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["welcome",{"_index":719,"title":{},"body":{"components/DashboardComponent.html":{},"components/HomeComponent.html":{}}}],["well",{"_index":597,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"components/DocumentViewTableComponent.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["whether",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["width",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DocumentViewTableComponent.html":{}}}],["window.innerwidth",{"_index":821,"title":{},"body":{"components/DocumentViewTableComponent.html":{}}}],["without",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["work",{"_index":677,"title":{},"body":{"injectables/ChecklistDatabase.html":{},"classes/ItemFlatNode.html":{},"classes/ItemNode.html":{}}}],["works",{"_index":1082,"title":{},"body":{"components/SearchComponent.html":{}}}],["world",{"_index":954,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["yes",{"_index":413,"title":{},"body":{"injectables/ChecklistDatabase.html":{}}}],["zone.js",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addUncategorizedDimension\n                            \n                            \n                                    Public\n                                addUncategorizedKeyword\n                            \n                            \n                                    Public\n                                getUncategorizedDimensions\n                            \n                            \n                                    Public\n                                getUncategorizedKeywords\n                            \n                            \n                                    Public\n                                removeUncategorizedDimension\n                            \n                            \n                                    Public\n                                removeUncategorizedKeyword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api.service.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addUncategorizedDimension\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUncategorizedDimension(dim)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dim\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addUncategorizedKeyword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUncategorizedKeyword(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUncategorizedDimensions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUncategorizedDimensions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUncategorizedKeywords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUncategorizedKeywords()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeUncategorizedDimension\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUncategorizedDimension(dim)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dim\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            removeUncategorizedKeyword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUncategorizedKeyword(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\nimport { Observable } from 'rxjs';\n\n/**\n *\n * @class ApiService\n *\n * Service handling communication regarding the keywords with the backend\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  public getUncategorizedDimensions() {\n    return this.http.get(`${environment.serverUrl}/dims`);\n  }\n\n  public getUncategorizedKeywords() {\n    return this.http.get(`${environment.serverUrl}/keys`);\n  }\n\n  public addUncategorizedDimension(dim): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(`${environment.serverUrl}/dims`, { dim: dim }, httpOptions);\n  }\n\n  public addUncategorizedKeyword(key): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n    return this.http.post(`${environment.serverUrl}/keys`, { key: key }, httpOptions);\n  }\n\n  public removeUncategorizedDimension(dim): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.delete(`${environment.serverUrl}/dims/${dim}`, httpOptions);\n  }\n\n  public removeUncategorizedKeyword(key): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.delete(`${environment.serverUrl}/keys/${key}`, httpOptions);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backendStatus\n                            \n                            \n                                    Public\n                                iconPath\n                            \n                            \n                                    Public\n                                serverStatus\n                            \n                            \n                                    Public\n                                serverUrl\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backendStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.serverUrl}/health`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            iconPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/img/InfiniTag1.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DOWN'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.serverUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'infinitag'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../environments/environment';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  public title = 'infinitag';\n  public serverUrl = environment.serverUrl;\n  public backendStatus = `${this.serverUrl}/health`;\n  public serverStatus = 'DOWN';\n\n  public iconPath = 'assets/img/InfiniTag1.png';\n\n\n  constructor(private httpClient: HttpClient) {\n  }\n  public ngOnInit(): void {\n    this.httpClient.get(this.backendStatus)\n      .subscribe((value: { status: string }) => {\n        this.serverStatus = value.status;\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n      Home\n      Add Documents\n      Keywords\n      Documentation\n      \n        API Documentation\n        Front End Documentation open_in_new\n        Back End Documentation open_in_new\n      \n    \n    \n    \n    Server Status: {{serverStatus}}\n      JJohn Doe \n      \n        \n          \n            English\n            Deutch\n          \n        \n      \n\n  \n\n\n\n\n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .fill-remaining-space {\n  /* This fills the remaining space, by using flexbox.\n     Every toolbar row uses a flexbox row layout. */\n  flex: 1 1 auto;\n}\n\n.nav-buttons {\n  display: flex;\n  flex-direction: column;\n  padding-top: 10%;\n}\n.footer {\n    width: 200px;\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Home      Add Documents      Keywords      Documentation              API Documentation        Front End Documentation open_in_new        Back End Documentation open_in_new                      Server Status: {{serverStatus}}      JJohn Doe                                     English            Deutch                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDocumentViewTableComponent\n\nDocumentViewTableComponent\n\nAppModule -->\n\nDocumentViewTableComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\nAppModule -->\n\nFileUploadComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nKeywordsComponent\n\nKeywordsComponent\n\nAppModule -->\n\nKeywordsComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            DocumentViewTableComponent\n                        \n                        \n                            DocumentationComponent\n                        \n                        \n                            FileUploadComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            KeywordsComponent\n                        \n                        \n                            SearchComponent\n                        \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * @license\n * InfiniTag\n * Copyright (c) 2020 AMOS-5.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { AppComponent } from './app.component';\nimport { DocumentViewTableComponent } from './documentview/document-view-table.component';\nimport { HomeComponent } from './home/home.component';\nimport { SearchComponent } from './search/search.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FileUploadComponent } from './file-upload/file-upload.component';\nimport { DocumentationComponent } from './documentation/documentation.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { KeywordsComponent } from './keywords/keywords.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent,\n    SettingsComponent,\n    DocumentViewTableComponent,\n    HomeComponent,\n    FileUploadComponent,\n    DashboardComponent,\n    DocumentationComponent,\n    KeywordsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    MatTableModule,\n    MatSortModule,\n    BrowserAnimationsModule,\n    MatChipsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatListModule,\n    MatProgressBarModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatButtonToggleModule,\n    DragDropModule,\n    MatTreeModule,\n    MatExpansionModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /**\n * @license\n * InfiniTag\n * Copyright (c) 2020 AMOS-5.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { SearchComponent } from './search/search.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { KeywordsComponent } from './keywords/keywords.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport {DocumentationComponent} from './documentation/documentation.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'search', component: SearchComponent },\n  { path: 'documents', component: SettingsComponent },\n  { path: 'keywords', component: KeywordsComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'documentation', component: DocumentationComponent },\n  { path: '**', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChecklistDatabase.html":{"url":"injectables/ChecklistDatabase.html","title":"injectable - ChecklistDatabase","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChecklistDatabase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/keywords/keywords.component.ts\n        \n\n            \n                Description\n            \n            \n                Checklist database, it can build a tree structured Json object.\nEach node in Json object represents a item or a category.\nIf a node is a category, it has children items and new items can be added under the category.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildFileTree\n                            \n                            \n                                copyPasteItem\n                            \n                            \n                                copyPasteItemAbove\n                            \n                            \n                                copyPasteItemBelow\n                            \n                            \n                                    Static\n                                data\n                            \n                            \n                                deleteItem\n                            \n                            \n                                deleteNode\n                            \n                            \n                                getParent\n                            \n                            \n                                getParentFromNodes\n                            \n                            \n                                initialize\n                            \n                            \n                                insertItem\n                            \n                            \n                                insertItemAbove\n                            \n                            \n                                insertItemBelow\n                            \n                            \n                                updateItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/keywords/keywords.component.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildFileTree\n                        \n                        \n                    \n                \n            \n            \n                \nbuildFileTree(obj: object, level: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:96\n                \n            \n\n\n            \n                \n                    Build the file structure tree. The value is the Json object, or a sub-tree of a Json object.\nThe return value is the list of ItemNode.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyPasteItem\n                        \n                        \n                    \n                \n            \n            \n                \ncopyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listItem\n                                    \n                                                ItemFlatNode\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyPasteItemAbove\n                        \n                        \n                    \n                \n            \n            \n                \ncopyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listItem\n                                    \n                                                ItemFlatNode\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copyPasteItemBelow\n                        \n                        \n                    \n                \n            \n            \n                \ncopyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    listItem\n                                    \n                                                ItemFlatNode\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data()\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteItem(node: ItemNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteNode\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteNode(nodes: ItemNode[], nodeToDelete: ItemNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                                ItemNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nodeToDelete\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParent\n                        \n                        \n                    \n                \n            \n            \n                \ngetParent(currentRoot: ItemNode, node: ItemNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentRoot\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParentFromNodes\n                        \n                        \n                    \n                \n            \n            \n                \ngetParentFromNodes(node: ItemNode)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \ninitialize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insertItem\n                        \n                        \n                    \n                \n            \n            \n                \ninsertItem(parent: ItemNode, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:115\n                \n            \n\n\n            \n                \n                    Add an item to list \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parent\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insertItemAbove\n                        \n                        \n                    \n                \n            \n            \n                \ninsertItemAbove(node: ItemNode, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insertItemBelow\n                        \n                        \n                    \n                \n            \n            \n                \ninsertItemBelow(node: ItemNode, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ItemNode\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateItem\n                        \n                        \n                    \n                \n            \n            \n                \nupdateItem(node: ItemNode, name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/keywords/keywords.component.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                                ItemNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:67\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in src/app/keywords/keywords.component.ts:69\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Component, OnInit, Injectable, ViewChild, ElementRef } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '../services/api.service';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Node for item\n */\nexport class ItemNode {\n  children: ItemNode[];\n  item: string;\n}\n\n/** Flatitem node with expandable and level information */\nexport class ItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The Json object for list data.\n */\nlet TREE_DATA: any = [];\n\n/**\n * Currently selected tree data.\n */\nlet selectedKwm: string;\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n  static data(): any {\n    throw new Error(\"Method not implemented.\");\n  }\n  dataChange = new BehaviorSubject([]);\n\n  get data(): ItemNode[] { return this.dataChange.value; }\n\n  constructor(private api: ApiService) {\n    this.initialize();\n  }\n\n  initialize() {\n    //Build the tree nodes from Json object. The result is a list of `ItemNode` with nested\n    //    file node as children.\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n\n      for (var i = 0 ; i ((accumulator, key) => {\n      const value = obj[key];\n      const node = new ItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  /** Add an item to list */\n  insertItem(parent: ItemNode, name: string): ItemNode {\n    if (!parent.children) {\n      parent.children = [];\n    }\n    const newItem = { item: name } as ItemNode;\n    parent.children.push(newItem);\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemAbove(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node), 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemBelow(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node) + 1, 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  getParentFromNodes(node: ItemNode): ItemNode {\n    for (let i = 0; i  0) {\n      for (let i = 0; i  0) {\n          const parent = this.getParent(child, node);\n          if (parent != null) {\n            return parent;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  updateItem(node: ItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n\n  deleteItem(node: ItemNode) {\n    this.deleteNode(this.data, node);\n    this.dataChange.next(this.data);\n  }\n\n  copyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItem(to, listItem.item);\n    } else {\n      newItem = this.insertItem(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItemAbove(to, listItem.item);\n    } else {\n      newItem = this.insertItemAbove(to, from.item);\n    }\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n\n    let newItem;\n    if(!from) {\n      newItem = this.insertItemBelow(to, listItem.item);\n    } else {\n      newItem = this.insertItemBelow(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  deleteNode(nodes: ItemNode[], nodeToDelete: ItemNode) {\n    const index = nodes.indexOf(nodeToDelete, 0);\n    if (index > -1) {\n      nodes.splice(index, 1);\n    } else {\n      nodes.forEach(node => {\n        if (node.children && node.children.length > 0) {\n          this.deleteNode(node.children, nodeToDelete);\n        }\n      });\n    }\n  }\n}\n\n@Component({\n  selector: 'app-keywords',\n  templateUrl: './keywords.component.html',\n  styleUrls: ['./keywords.component.scss'],\n  providers: [ChecklistDatabase]\n})\nexport class KeywordsComponent implements OnInit {\n\n\n  newDimension: string;\n  newKeyword: string;\n  isNewItem:boolean = false;\n  newItem:any;\n  uncatDimensions = []\n  uncatKeywords = []\n  keywords = []\n\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map();\n\n  /** A selected parent node to be inserted */\n  selectedParent: ItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl;\n\n  treeFlattener: MatTreeFlattener;\n\n  dataSource: MatTreeFlatDataSource;\n\n\n  /* Drag and drop */\n  dragNode: any;\n  dragNodeExpandOverWaitTimeMs = 300;\n  dragNodeExpandOverNode: any;\n  dragNodeExpandOverTime: number;\n  dragNodeExpandOverArea: string;\n  @ViewChild('emptyItem') emptyItem: ElementRef;\n\n  constructor(private api: ApiService, private snackBar: MatSnackBar, private database: ChecklistDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = [];\n      this.dataSource.data = data;\n    });\n   }\n\n  getLevel = (node: ItemFlatNode) => node.level;\n\n  isExpandable = (node: ItemFlatNode) => node.expandable;\n\n  getChildren = (node: ItemNode): ItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: ItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: ItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: ItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n      ? existingNode\n      : new ItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = (node.children && node.children.length > 0);\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  ngOnInit(): void {\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n      this.keywords = data;\n    });\n    this.api.getUncategorizedDimensions()\n      .subscribe((data: []) => {\n        this.uncatDimensions = data;\n      });\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.uncatKeywords = data;\n      });\n  }\n\n  dropDim(event: CdkDragDrop) {\n    moveItemInArray(this.uncatDimensions, event.previousIndex, event.currentIndex);\n  }\n\n  dropKey(event: CdkDragDrop) {\n    moveItemInArray(this.uncatKeywords, event.previousIndex, event.currentIndex);\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized dimension\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onDimEnter() {\n    const dimFormatted = this.newDimension.trim().toLowerCase();\n    if(dimFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatDimensions, dimFormatted)) {\n        this.api.addUncategorizedDimension(dimFormatted)\n          .subscribe(res => {\n            this.uncatDimensions.push(dimFormatted)\n            this.snackBar.open(`${dimFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${dimFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newDimension=\"\";\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized keyword\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onKeyEnter() {\n    const keyFormatted = this.newKeyword.trim().toLowerCase();\n    if(keyFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatKeywords, keyFormatted)) {\n        this.api.addUncategorizedKeyword(keyFormatted)\n          .subscribe(res => {\n            this.uncatKeywords.push(keyFormatted)\n            this.snackBar.open(`${keyFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${keyFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newKeyword=\"\";\n  }\n\n  /**\n  * @description\n  * Checks if a value appears in an array\n  * @param array to be checked\n  * @param value to be checked\n  * @returns true if the value was found, false otherwise\n  */\n  private isDuplicate(arr, value) {\n    const index = arr.findIndex((elem) => elem === value);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the dimension is\n  * removed from the list\n  * @param {string} dimension to be removed\n  */\n  public deleteDimension(dimension: string) {\n    const index = this.uncatDimensions.indexOf(dimension);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedDimension(dimension)\n      .subscribe(res => {\n        this.uncatDimensions.splice(index, 1);\n        this.snackBar.open(`${dimension} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the keyword is\n  * removed from the list\n  * @param {string} keyword to be removed\n  */\n  public deleteKeyword(keyword: string) {\n    const index = this.uncatKeywords.indexOf(keyword);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedKeyword(keyword)\n      .subscribe(res => {\n        this.uncatKeywords.splice(index, 1);\n        this.snackBar.open(`${keyword} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: ItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode, '');\n    this.treeControl.expand(node);\n  }\n\n  /** Save the node to database */\n  saveNode(node: ItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this.database.updateItem(nestedNode, itemValue);\n  }\n\n  handleDragStart(event, node, newItem) {\n    if(newItem) {\n      this.dragNode = new ItemFlatNode;\n      this.dragNode.item = node;\n      this.isNewItem = true;\n      this.newItem = this.dragNode;\n    } else {\n      this.dragNode = node;\n    }\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\n    event.dataTransfer.setData('foo', 'bar');\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\n    this.treeControl.collapse(node);\n  }\n\n  handleDragOver(event, node) {\n    event.preventDefault();\n\n    // Handle node expand\n    if (node === this.dragNodeExpandOverNode) {\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\n          this.treeControl.expand(node);\n        }\n      }\n    } else {\n      this.dragNodeExpandOverNode = node;\n      this.dragNodeExpandOverTime = new Date().getTime();\n    }\n\n    // Handle drag area\n    const percentageX = event.offsetX / event.target.clientWidth;\n    const percentageY = event.offsetY / event.target.clientHeight;\n    if (percentageY  0.75) {\n      this.dragNodeExpandOverArea = 'below';\n    } else {\n      this.dragNodeExpandOverArea = 'center';\n    }\n  }\n\n  handleDrop(event, node) {\n    if (node !== this.dragNode) {\n      let newItem: ItemNode;\n      if (this.dragNodeExpandOverArea === 'above') {\n        newItem = this.database.copyPasteItemAbove(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else if (this.dragNodeExpandOverArea === 'below') {\n        newItem = this.database.copyPasteItemBelow(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else {\n        newItem = this.database.copyPasteItem(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      }\n      this.database.deleteItem(this.flatNodeMap.get(this.dragNode));\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\n    }\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n  }\n\n  handleDragEnd(event) {\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n    this.newItem = null;\n    this.isNewItem = false;\n  }\n\n  selectionChange(event){\n    this.database.dataChange.next(TREE_DATA[event[0].value])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:39\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dashboard.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *\n * @class DashboardComponent\n *\n * Component representing the dashboard tab (no functionality right now)\n *\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    Dashboard InfiniTag\n     Welcome to InfiniTag - The automated machine learning software solution of Infineon\n    \n        1\n        2\n        3\n    \n    \n        Edit\n        edit\n    \n    \n\n        \n\n    \n\n\n\n\n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                .container {\n    padding-top: 10px;\n}\nmat-grid-tile{\n    border-style: solid;\n    border-width: thin;\n}\n\n.edit {\n    margin-top: 20px;\n}\n\n.footer {\n    width: 200px;\n    position: fixed;\n    bottom: 20px;\n    right: 20px;\n}\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Dashboard InfiniTag     Welcome to InfiniTag - The automated machine learning software solution of Infineon            1        2        3                Edit        edit                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentViewTableComponent.html":{"url":"components/DocumentViewTableComponent.html","title":"component - DocumentViewTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentViewTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/documentview/document-view-table.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                document-view-table\n            \n\n            \n                styleUrls\n                document-view-table.component.scss\n            \n\n\n\n            \n                templateUrl\n                document-view-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addKeywordToDoc\n                            \n                            \n                                breakpoint\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                interval\n                            \n                            \n                                keywords\n                            \n                            \n                                selectedKeywords\n                            \n                            \n                                selection\n                            \n                            \n                                sort\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyBulkKeywords\n                            \n                            \n                                    Public\n                                applyKeyword\n                            \n                            \n                                    Public\n                                focus\n                            \n                            \n                                    Public\n                                isAllSelected\n                            \n                            \n                                    Public\n                                masterToggle\n                            \n                            \n                                    Public\n                                ngOnChanges\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onKey\n                            \n                            \n                                    Private\n                                search\n                            \n                            \n                                    Public\n                                setDatasource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                documents\n                            \n                            \n                                filter\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, uploadService: UploadService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/documentview/document-view-table.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        UploadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        documents\n                    \n                \n                \n                    \n                        Type :         Array | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filter\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:64\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyBulkKeywords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyBulkKeywords(keyword)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keyword\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            applyKeyword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyKeyword(doc, keyword)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keyword\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    focus(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isAllSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isAllSelected()\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the items are selected, false otherwise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            masterToggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    masterToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onKey(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:208\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        List of keywords matching search term\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDatasource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDatasource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/documentview/document-view-table.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addKeywordToDoc\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:154\n                            \n                        \n\n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        document\n                                                \n                                                \n                                                        keyword\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            breakpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dataSource\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MatTableDataSource()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['select', 'title', 'type', 'language', 'size', 'creation_date', 'MyKeywords']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interval\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keywords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedKeywords\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SelectionModel(true, [])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sort\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSort\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatSort, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatTable\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatTable, {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentview/document-view-table.component.ts:61\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { IDocument } from '../models/IDocument.model';\n\nimport { Component, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource, MatTable } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { of, throwError, Observable, Subscription, interval } from 'rxjs';\nimport { ApiService } from '../services/api.service';\n\nimport { UploadService } from '../services/upload.service';\n\n\n/**\n * @class DocumentViewTableComponent\n *\n * Component gets document data from the backend and displays it as a table.\n * The data can be filtered through a search bar and new tags can be added\n * to the documents\n */\n@Component({\n  selector: 'document-view-table',\n  styleUrls: ['document-view-table.component.scss'],\n  templateUrl: 'document-view-table.component.html',\n})\n\nexport class DocumentViewTableComponent implements OnInit, OnChanges {\n\n  keywords: string[] = [];\n  selectedKeywords: string[] = [];\n  constructor(private api: ApiService, private uploadService: UploadService, private snackBar: MatSnackBar) { }\n  // defines order of columns\n  displayedColumns: string[] = ['select', 'title', 'type', 'language', 'size', 'creation_date', 'MyKeywords'];\n\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild(MatTable, { static: true }) table: MatTable;\n  interval: Subscription;\n  @Input() documents: Array | undefined;\n  @Input() filter: string | undefined;\n  dataSource = new MatTableDataSource();\n  selection = new SelectionModel(true, []);\n  breakpoint: number;\n\n\n  public ngOnInit() {\n    this.setDatasource();\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.keywords = data;\n        this.selectedKeywords = this.keywords;\n      });\n    this.breakpoint = (window.innerWidth  {\n        document.creation_date = new Date(document.creation_date);\n      });\n\n      this.dataSource.data = this.documents;\n      setTimeout(() => {\n        this.dataSource.sort = this.sort;\n      });\n    }\n  }\n\n\n  /**\n  * @description\n  * Updates the documents list as well as the filter term\n  * @param {SimpleChanges} changes\n  */\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.documents) {\n      this.documents = changes.documents.currentValue;\n      this.ngOnInit();\n    }\n\n    if (changes.filter) {\n      this.dataSource.filter = changes.filter.currentValue;\n    }\n  }\n\n  public focus(event) {\n    setTimeout(() => {\n      event.target.focus();\n    }, 0);\n  }\n\n\n  /**\n  * @description\n  * Checks if all currently displayed items are selected\n  * @returns true if the items are selected, false otherwise\n  */\n  public isAllSelected() {\n    const filteredData = this.dataSource.filteredData;\n    for (let i = 0; i  this.selection.select(row));\n  }\n\n  /**\n  * @description\n  * Adds a new keyword to an IDocument object. Thorws an error if the keyword\n  * is already added to the document\n  * @param {IDocument} document\n  * @param {string} keyword\n  * @returns {Observable} Observable of the document\n  */\n  private addKeywordToDoc = (iDoc, keyword): Observable => {\n    if (iDoc.keywords.includes(keyword) === false) {\n      iDoc.keywords.push(keyword);\n      iDoc.keywords.sort();\n      return of(iDoc);\n    } else {\n      return throwError('Keyword already added to ' + iDoc.title);\n    }\n  }\n\n  /**\n  * @description\n  * Adds a keyword to a document, then sends a PATCH request to the backend\n  * to update the document. If the request is succesfull the datasource gets\n  * updated.\n  * @param {IDocument} document\n  * @param {string} keyword\n  */\n  public applyKeyword(doc, keyword) {\n    this.addKeywordToDoc(doc, keyword).subscribe(\n      res => {\n        this.uploadService.patchKeywords(res).subscribe(() => {\n          const index = this.documents.findIndex(document => document.id === doc.id);\n          const data = this.dataSource.data;\n          data.splice(index, 1);\n          this.dataSource.data = data;\n          data.splice(index, 0, doc);\n          this.dataSource.data = data;\n        });\n      },\n      err => this.snackBar.open(err, ``, { duration: 3000 })\n    );\n  }\n\n   /**\n  * @description\n  * Adds a keyword to all selected documents.\n  * @param {string} keyword\n  */\n  public applyBulkKeywords(keyword) {\n    if (this.selection.selected.length === 0) {\n      this.snackBar.open('no rows selected', ``, { duration: 3000 });\n    }\n    this.selection.selected.forEach(doc => {\n      this.applyKeyword(doc, keyword);\n    });\n  }\n\n  /**\n  * @description\n  * Gets called when a key is pressed while the search field for the keywords\n  * is in focus. Updates the filter term.\n  * @param event\n  */\n  public onKey(event) {\n    this.selectedKeywords = this.search(event.target.value);\n  }\n\n  /**\n  * @description\n  * Searches the keywords list for a search term\n  * @param {string} search term\n  * @returns {string[]} List of keywords matching search term\n  */\n  private search(value: string) {\n    const filter = value.toLowerCase();\n    return this.keywords.filter(option => option.toLowerCase().startsWith(filter));\n  }\n}\n\n\n    \n\n    \n        Edit\nEditing is {{edit.checked ? 'enabled' : 'disabled'}}\nApply Keywords\n\n  \n    Search Keywords...\n    \n  \n  {{keyword}}\n\n\n\n\n  \n  \n    \n      \n      \n    \n    \n      \n      \n    \n  \n\n  \n     Filename \n     {{element.title}} \n  \n\n  \n     Type \n     {{element.type}} \n  \n\n  \n     Language \n     {{element.language}} \n  \n\n  \n     Size \n     {{element.size}} \n  \n\n  \n     CreatedAt \n     {{element.creation_date | date:'dd.MM.yy HH:mm'}} \n  \n\n  \n     MyKeywords \n    \n      {{element.keywords}}\n      \n        add_circle\n      \n      \n        \n          Search Keywords...\n          \n        \n        {{keyword}}\n      \n    \n  \n\n  \n  \n\n    \n\n    \n                \n                    document-view-table.component.scss\n                \n                table {\n    width: 100%;\n}\nbutton:focus {\n    outline: none;\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'EditEditing is {{edit.checked ? \\'enabled\\' : \\'disabled\\'}}Apply Keywords      Search Keywords...        {{keyword}}                                                     Filename      {{element.title}}          Type      {{element.type}}          Language      {{element.language}}          Size      {{element.size}}          CreatedAt      {{element.creation_date | date:\\'dd.MM.yy HH:mm\\'}}          MyKeywords           {{element.keywords}}              add_circle                              Search Keywords...                          {{keyword}}                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentViewTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/documentation/documentation.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                styleUrls\n                ./documentation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accordion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accordion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAccordion\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(MatAccordion)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/documentation/documentation.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, ViewChild} from '@angular/core';\nimport {MatAccordion} from '@angular/material/expansion';\n\n@Component({\n  selector: 'app-documentation',\n  templateUrl: './documentation.component.html',\n  styleUrls: ['./documentation.component.scss']\n})\nexport class DocumentationComponent {\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n}\n\n    \n\n    \n        \n\n  API Documentation\n  \n  Expand All\n  Collapse All\n  \n  \n  \n    \n      \n        /upload\n      \n      \n        Upload a document to the backend\n        POST\n      \n    \n    \n      \n      POST\n      \n        Type: Body\n        Parameters:\n          \n            fileKey: Form data with file under the fileKey key.\n          \n        \n        Returns:\n          \n            200: Successfully saved file\n            400: Sent file could not be read\n            500: Sent file could not be saved\n            502: Sent file could not be entered into the database\n          \n        \n      \n    \n    \n  \n    \n    \n      \n        /changekeywords\n      \n      \n        Change keywords assigned to document\n        PATCH\n      \n    \n    \n      \n      PATCH\n      \n        Type: Body\n        Parameters:\n          \n            id: id of the document to be changed\n            keywords: Array of keywords to assign to the document\n          \n        \n        Returns:\n          \n            200: Successfully updated keywords on file\n            400: Reading of request unsuccessful\n            502: Keywords on document could not be updated in database\n          \n        \n      \n    \n    \n  \n    \n    \n      \n        /documents\n      \n      \n        Get documents from database\n        GET\n      \n    \n    \n      \n      GET\n      \n        Type: Query\n        Parameters:\n        \n        Returns:\n          \n            200: Array of all documents in database\n            502: Database could not be reached\n          \n        \n      \n    \n    \n  \n    \n    \n      \n        /dims\n      \n      \n        Handle uncategorized dimensions\n        GET, POST, DELETE\n      \n    \n    \n      \n      GET\n      \n        Type: Quey\n        Parameters:\n        \n        Returns:\n          \n            200: A list of uncategorized dimensions\n            500: Dimensions could not be fetched\n          \n        \n      \n    \n      \n      \n        POST\n        \n          Type: Body\n          Parameters:\n            \n              dim: String indicating the dimension to be added to the database\n            \n          \n          Returns:\n            \n              200: Dimension succesfully added to database\n              500: Dimension not succesfully added to database\n            \n          \n        \n      \n      \n      \n        DELETE\n        \n          Type: Query\n          Parameters:\n            \n              dimension id: String indicating the dimension to be removed to the database\n            \n          \n          Returns:\n            \n              200: Dimension successfully removed from database\n              500: Dimension not successfully removed from database\n            \n          \n          Example (Angular):\n             {{\"\n              export class DeleteExample {\n                constructor(private httpClient: HttpClient) {}\n                ngOnInit() {\n                   this.httpClient.delete('/dims/123456');\n                }\n              }\n            \"}}\n            \n          \n        \n      \n    \n  \n    \n    \n      \n        /keys\n      \n      \n        Handle uncategorized keys\n        GET, POST, DELETE\n      \n    \n    \n      \n      GET\n      \n        Type: Quey\n        Parameters:\n        \n        Returns:\n          \n            200: A list of uncategorized keys\n            500: keys could not be fetched\n          \n        \n      \n    \n      \n      \n        POST\n        \n          Type: Body\n          Parameters:\n            \n              key: String indicating the key to be added to the database\n            \n          \n          Returns:\n            \n              200: key successfully added to database\n              500: key not successfully added to database\n            \n          \n          Example (Angular):\n             {{\"\n              export class PostExample {\n                constructor(private httpClient: HttpClient) {}\n                ngOnInit() {\n                  const key: {\n                    'key': 'my-key',\n                  };\n                  this.httpClient.post('/keys', key);\n                }\n              }\n            \"}}\n            \n          \n        \n      \n      \n      \n        DELETE\n        \n          Type: Query\n          Parameters:\n            \n              dimension id: String indicating the dimension to be removed to the database\n            \n          \n          Returns:\n            \n              200: Dimension successfully removed from database\n              500: Dimension not successfully removed from database\n            \n          \n          Example (Angular):\n             {{\"\n              export class DeleteExample {\n                constructor(private httpClient: HttpClient) {}\n                ngOnInit() {\n                   this.httpClient.delete('/keys/123456');\n                }\n              }\n            \"}}\n            \n          \n        \n      \n    \n  \n    \n    \n      \n        /health\n      \n      \n        Make sure the backend is running\n        GET\n      \n    \n    \n      \n      GET\n      \n        Type: Query\n        Parameters:\n        \n        Returns:\n          {{\" {status: 'UP'} \"}}\n        \n      \n    \n    \n  \n    \n    \n      \n        /stopServer\n      \n      \n        Stops the backend\n        GET\n      \n    \n    \n      \n      GET\n      \n        Type: Query\n        Parameters:\n        \n        Returns:\n\n          \n            Success: {{\" {success: 'True', message: 'Server is shutting down...'} \"}}\n            Failure: {{\" {success: 'False', message: 'Server could not be shut down'} \"}}\n          \n\n        \n      \n    \n    \n  \n    \n    \n      \n        /\n      \n      \n        Hello World Route\n        GET\n      \n    \n    \n      \n      GET\n      \n        Type: Query\n        Parameters:\n        \n        Returns:\n\n          \n            Success: {{\" 'Hello World' \"}}\n          \n\n        \n      \n    \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./documentation.component.scss\n                \n                .example-action-buttons {\n  padding-bottom: 20px;\n}\n\n.example-headers-align .mat-expansion-panel-header-title,\n.example-headers-align .mat-expansion-panel-header-description {\n  flex-basis: 0;\n}\n\n.example-headers-align .mat-expansion-panel-header-description {\n  justify-content: space-between;\n  align-items: center;\n}\n\n.example-headers-align .mat-form-field + .mat-form-field {\n  margin-left: 8px;\n}\n\n.mat-list-item {\n  height: 100% !important;\n}\n\nmat-expansion-panel-header {\n  h2 {\n    margin: 0;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  API Documentation    Expand All  Collapse All                        /upload                    Upload a document to the backend        POST                          POST              Type: Body        Parameters:                      fileKey: Form data with file under the fileKey key.                          Returns:                      200: Successfully saved file            400: Sent file could not be read            500: Sent file could not be saved            502: Sent file could not be entered into the database                                                        /changekeywords                    Change keywords assigned to document        PATCH                          PATCH              Type: Body        Parameters:                      id: id of the document to be changed            keywords: Array of keywords to assign to the document                          Returns:                      200: Successfully updated keywords on file            400: Reading of request unsuccessful            502: Keywords on document could not be updated in database                                                        /documents                    Get documents from database        GET                          GET              Type: Query        Parameters:                Returns:                      200: Array of all documents in database            502: Database could not be reached                                                        /dims                    Handle uncategorized dimensions        GET, POST, DELETE                          GET              Type: Quey        Parameters:                Returns:                      200: A list of uncategorized dimensions            500: Dimensions could not be fetched                                                POST                  Type: Body          Parameters:                          dim: String indicating the dimension to be added to the database                                Returns:                          200: Dimension succesfully added to database              500: Dimension not succesfully added to database                                                        DELETE                  Type: Query          Parameters:                          dimension id: String indicating the dimension to be removed to the database                                Returns:                          200: Dimension successfully removed from database              500: Dimension not successfully removed from database                                Example (Angular):             {{\"              export class DeleteExample {                constructor(private httpClient: HttpClient) {}                ngOnInit() {                   this.httpClient.delete(\\'/dims/123456\\');                }              }            \"}}                                                                /keys                    Handle uncategorized keys        GET, POST, DELETE                          GET              Type: Quey        Parameters:                Returns:                      200: A list of uncategorized keys            500: keys could not be fetched                                                POST                  Type: Body          Parameters:                          key: String indicating the key to be added to the database                                Returns:                          200: key successfully added to database              500: key not successfully added to database                                Example (Angular):             {{\"              export class PostExample {                constructor(private httpClient: HttpClient) {}                ngOnInit() {                  const key: {                    \\'key\\': \\'my-key\\',                  };                  this.httpClient.post(\\'/keys\\', key);                }              }            \"}}                                                        DELETE                  Type: Query          Parameters:                          dimension id: String indicating the dimension to be removed to the database                                Returns:                          200: Dimension successfully removed from database              500: Dimension not successfully removed from database                                Example (Angular):             {{\"              export class DeleteExample {                constructor(private httpClient: HttpClient) {}                ngOnInit() {                   this.httpClient.delete(\\'/keys/123456\\');                }              }            \"}}                                                                /health                    Make sure the backend is running        GET                          GET              Type: Query        Parameters:                Returns:          {{\" {status: \\'UP\\'} \"}}                                              /stopServer                    Stops the backend        GET                          GET              Type: Query        Parameters:                Returns:                      Success: {{\" {success: \\'True\\', message: \\'Server is shutting down...\\'} \"}}            Failure: {{\" {success: \\'False\\', message: \\'Server could not be shut down\\'} \"}}                                                        /                    Hello World Route        GET                          GET              Type: Query        Parameters:                Returns:                      Success: {{\" \\'Hello World\\' \"}}                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FileUploadComponent.html":{"url":"components/FileUploadComponent.html","title":"component - FileUploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FileUploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/file-upload/file-upload.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-file-upload\n            \n\n            \n                styleUrls\n                ./file-upload.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./file-upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                files\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSelectFile\n                            \n                            \n                                    Private\n                                sendFileToService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(uploadService: UploadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/file-upload/file-upload.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uploadService\n                                                  \n                                                        \n                                                                        UploadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelectFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelectFile(files: FileList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : FileList from the input html element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sendFileToService\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendFileToService(file: IFile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file-upload/file-upload.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                IFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : IFile object containing the file to be send\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            files\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file-upload/file-upload.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UploadService } from '../services/upload.service';\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\ninterface IFile {\n  file: File;\n  status: string;\n  progress: number;\n  icon: string;\n}\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\n\n/**\n * @class FileUploadComponent\n *\n * Component handles the file input and displaying the progress\n */\nexport class FileUploadComponent implements OnInit {\n  files: Array = [];\n\n  constructor(private uploadService: UploadService) { }\n\n  public ngOnInit(): void {}\n\n  /**\n   * @description\n   * Gets called when the file input element is used, parses the files and sends them to sendFileToService()\n   * @param {FileList} files: FileList from the input html element\n   */\n  public onSelectFile(files: FileList) {\n    this.files = [];\n    for (let idx = 0; idx  {\n        file.status = \"failed(check console for info)\";\n        file.icon = \"close\";\n        return throwError(error);\n      })\n    ).subscribe((event: HttpEvent) => {\n      switch (event.type) {\n        case HttpEventType.Sent:\n          file.status = \"request send\";\n          break;\n        case HttpEventType.ResponseHeader:\n          file.status = \"response received\";\n          break;\n        case HttpEventType.UploadProgress:\n          //update progress\n          file.progress = Math.round(event.loaded / event.total * 100);\n          file.status = \"uploading...\";\n          file.icon = \"cloud_upload\";\n          break;\n        case HttpEventType.Response:\n          file.status = \"success\";\n          console.log('Document send', event.body);\n          file.icon = \"cloud_done\";\n          break;\n      }\n    })\n  }\n\n}\n\n    \n\n    \n        File Upload\n\n\n\n  \n    {{file.icon}}\n     {{file.file.name}} \n     {{file.status}} \n    \n  \n\n\n    \n\n    \n                \n                    ./file-upload.component.scss\n                \n                \nmat-list {\n    max-height: 40em;\n    overflow: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'File Upload      {{file.icon}}     {{file.file.name}}      {{file.status}}       '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FileUploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                backendStatus\n                            \n                            \n                                    Public\n                                documents\n                            \n                            \n                                    Public\n                                documentsUrl\n                            \n                            \n                                    Public\n                                downloadUrl\n                            \n                            \n                                    Public\n                                filterString\n                            \n                            \n                                    Public\n                                serverStatus\n                            \n                            \n                                    Public\n                                serverUrl\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                uploadUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                download\n                            \n                            \n                                    Public\n                                handleFileInput\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            download\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    download(document: IDocument)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    document\n                                    \n                                                IDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            handleFileInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFileInput(files: FileList)\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            backendStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.serverUrl}/health`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            documents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            documentsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.serverUrl}/documents`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            downloadUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.documentsUrl}/download`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DOWN'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serverUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.serverUrl\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'infinitag'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uploadUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.documentsUrl}/upload`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home/home.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IDocument } from '../models/IDocument.model';\nimport { environment } from './../../environments/environment';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n  public title = 'infinitag';\n  public serverUrl = environment.serverUrl;\n  public backendStatus = `${this.serverUrl}/health`;\n  public documentsUrl = `${this.serverUrl}/documents`;\n  public uploadUrl = `${this.documentsUrl}/upload`;\n  public downloadUrl = `${this.documentsUrl}/download`;\n\n  public serverStatus = 'DOWN';\n\n  public documents: Array = [];\n  public filterString = '';\n\n  constructor(private httpClient: HttpClient) { }\n\n  public ngOnInit(): void {\n    this.httpClient.get(this.documentsUrl)\n      .subscribe((value: Array) => {\n        console.log(value)\n        this.documents = value;\n      });\n  }\n\n  public handleFileInput(files: FileList) {\n    const file: File = files[0];\n    const formData: FormData = new FormData();\n    formData.append('file', file, file.name);\n    this.httpClient.post(this.uploadUrl, formData)\n      .subscribe((response: IDocument) => {\n        this.documents.push(response);\n      });\n  }\n\n  public download(document: IDocument) {\n    const url = `${this.downloadUrl}/${document.title}`;\n\n    this.httpClient.get(url)\n      .subscribe((response: any) => {\n        console.log(response);\n      });\n  }\n}\n\n    \n\n    \n        \n  Dashboard InfiniTag\n   Welcome to InfiniTag - The automated machine learning software solution of Infineon\n  \n    \n      Search for documents\n      \n    \n  \n  Available Documents\n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Dashboard InfiniTag   Welcome to InfiniTag - The automated machine learning software solution of Infineon            Search for documents              Available Documents  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDocument.html":{"url":"interfaces/IDocument.html","title":"interface - IDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/IDocument.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creation_date\n                                \n                                \n                                        id\n                                \n                                \n                                        keywords\n                                \n                                \n                                        language\n                                \n                                \n                                        size\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creation_date\n                                    \n                                \n                                \n                                    \n                                        creation_date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keywords\n                                    \n                                \n                                \n                                    \n                                        keywords:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Time } from '@angular/common';\n\nexport interface IDocument {\n  content: string;\n  creation_date: Date;\n  id: string;\n  language: string;\n  size: number;\n  keywords: string[];\n  title: string;\n  type: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFile.html":{"url":"interfaces/IFile.html","title":"interface - IFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/file-upload/file-upload.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        file\n                                \n                                \n                                        icon\n                                \n                                \n                                        progress\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UploadService } from '../services/upload.service';\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\ninterface IFile {\n  file: File;\n  status: string;\n  progress: number;\n  icon: string;\n}\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\n\n/**\n * @class FileUploadComponent\n *\n * Component handles the file input and displaying the progress\n */\nexport class FileUploadComponent implements OnInit {\n  files: Array = [];\n\n  constructor(private uploadService: UploadService) { }\n\n  public ngOnInit(): void {}\n\n  /**\n   * @description\n   * Gets called when the file input element is used, parses the files and sends them to sendFileToService()\n   * @param {FileList} files: FileList from the input html element\n   */\n  public onSelectFile(files: FileList) {\n    this.files = [];\n    for (let idx = 0; idx  {\n        file.status = \"failed(check console for info)\";\n        file.icon = \"close\";\n        return throwError(error);\n      })\n    ).subscribe((event: HttpEvent) => {\n      switch (event.type) {\n        case HttpEventType.Sent:\n          file.status = \"request send\";\n          break;\n        case HttpEventType.ResponseHeader:\n          file.status = \"response received\";\n          break;\n        case HttpEventType.UploadProgress:\n          //update progress\n          file.progress = Math.round(event.loaded / event.total * 100);\n          file.status = \"uploading...\";\n          file.icon = \"cloud_upload\";\n          break;\n        case HttpEventType.Response:\n          file.status = \"success\";\n          console.log('Document send', event.body);\n          file.icon = \"cloud_done\";\n          break;\n      }\n    })\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ItemFlatNode.html":{"url":"classes/ItemFlatNode.html","title":"class - ItemFlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ItemFlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/keywords/keywords.component.ts\n        \n\n            \n                Description\n            \n            \n                Flatitem node with expandable and level information \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expandable\n                            \n                            \n                                item\n                            \n                            \n                                level\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Injectable, ViewChild, ElementRef } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '../services/api.service';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Node for item\n */\nexport class ItemNode {\n  children: ItemNode[];\n  item: string;\n}\n\n/** Flatitem node with expandable and level information */\nexport class ItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The Json object for list data.\n */\nlet TREE_DATA: any = [];\n\n/**\n * Currently selected tree data.\n */\nlet selectedKwm: string;\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n  static data(): any {\n    throw new Error(\"Method not implemented.\");\n  }\n  dataChange = new BehaviorSubject([]);\n\n  get data(): ItemNode[] { return this.dataChange.value; }\n\n  constructor(private api: ApiService) {\n    this.initialize();\n  }\n\n  initialize() {\n    //Build the tree nodes from Json object. The result is a list of `ItemNode` with nested\n    //    file node as children.\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n\n      for (var i = 0 ; i ((accumulator, key) => {\n      const value = obj[key];\n      const node = new ItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  /** Add an item to list */\n  insertItem(parent: ItemNode, name: string): ItemNode {\n    if (!parent.children) {\n      parent.children = [];\n    }\n    const newItem = { item: name } as ItemNode;\n    parent.children.push(newItem);\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemAbove(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node), 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemBelow(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node) + 1, 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  getParentFromNodes(node: ItemNode): ItemNode {\n    for (let i = 0; i  0) {\n      for (let i = 0; i  0) {\n          const parent = this.getParent(child, node);\n          if (parent != null) {\n            return parent;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  updateItem(node: ItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n\n  deleteItem(node: ItemNode) {\n    this.deleteNode(this.data, node);\n    this.dataChange.next(this.data);\n  }\n\n  copyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItem(to, listItem.item);\n    } else {\n      newItem = this.insertItem(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItemAbove(to, listItem.item);\n    } else {\n      newItem = this.insertItemAbove(to, from.item);\n    }\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n\n    let newItem;\n    if(!from) {\n      newItem = this.insertItemBelow(to, listItem.item);\n    } else {\n      newItem = this.insertItemBelow(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  deleteNode(nodes: ItemNode[], nodeToDelete: ItemNode) {\n    const index = nodes.indexOf(nodeToDelete, 0);\n    if (index > -1) {\n      nodes.splice(index, 1);\n    } else {\n      nodes.forEach(node => {\n        if (node.children && node.children.length > 0) {\n          this.deleteNode(node.children, nodeToDelete);\n        }\n      });\n    }\n  }\n}\n\n@Component({\n  selector: 'app-keywords',\n  templateUrl: './keywords.component.html',\n  styleUrls: ['./keywords.component.scss'],\n  providers: [ChecklistDatabase]\n})\nexport class KeywordsComponent implements OnInit {\n\n\n  newDimension: string;\n  newKeyword: string;\n  isNewItem:boolean = false;\n  newItem:any;\n  uncatDimensions = []\n  uncatKeywords = []\n  keywords = []\n\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map();\n\n  /** A selected parent node to be inserted */\n  selectedParent: ItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl;\n\n  treeFlattener: MatTreeFlattener;\n\n  dataSource: MatTreeFlatDataSource;\n\n\n  /* Drag and drop */\n  dragNode: any;\n  dragNodeExpandOverWaitTimeMs = 300;\n  dragNodeExpandOverNode: any;\n  dragNodeExpandOverTime: number;\n  dragNodeExpandOverArea: string;\n  @ViewChild('emptyItem') emptyItem: ElementRef;\n\n  constructor(private api: ApiService, private snackBar: MatSnackBar, private database: ChecklistDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = [];\n      this.dataSource.data = data;\n    });\n   }\n\n  getLevel = (node: ItemFlatNode) => node.level;\n\n  isExpandable = (node: ItemFlatNode) => node.expandable;\n\n  getChildren = (node: ItemNode): ItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: ItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: ItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: ItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n      ? existingNode\n      : new ItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = (node.children && node.children.length > 0);\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  ngOnInit(): void {\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n      this.keywords = data;\n    });\n    this.api.getUncategorizedDimensions()\n      .subscribe((data: []) => {\n        this.uncatDimensions = data;\n      });\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.uncatKeywords = data;\n      });\n  }\n\n  dropDim(event: CdkDragDrop) {\n    moveItemInArray(this.uncatDimensions, event.previousIndex, event.currentIndex);\n  }\n\n  dropKey(event: CdkDragDrop) {\n    moveItemInArray(this.uncatKeywords, event.previousIndex, event.currentIndex);\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized dimension\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onDimEnter() {\n    const dimFormatted = this.newDimension.trim().toLowerCase();\n    if(dimFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatDimensions, dimFormatted)) {\n        this.api.addUncategorizedDimension(dimFormatted)\n          .subscribe(res => {\n            this.uncatDimensions.push(dimFormatted)\n            this.snackBar.open(`${dimFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${dimFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newDimension=\"\";\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized keyword\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onKeyEnter() {\n    const keyFormatted = this.newKeyword.trim().toLowerCase();\n    if(keyFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatKeywords, keyFormatted)) {\n        this.api.addUncategorizedKeyword(keyFormatted)\n          .subscribe(res => {\n            this.uncatKeywords.push(keyFormatted)\n            this.snackBar.open(`${keyFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${keyFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newKeyword=\"\";\n  }\n\n  /**\n  * @description\n  * Checks if a value appears in an array\n  * @param array to be checked\n  * @param value to be checked\n  * @returns true if the value was found, false otherwise\n  */\n  private isDuplicate(arr, value) {\n    const index = arr.findIndex((elem) => elem === value);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the dimension is\n  * removed from the list\n  * @param {string} dimension to be removed\n  */\n  public deleteDimension(dimension: string) {\n    const index = this.uncatDimensions.indexOf(dimension);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedDimension(dimension)\n      .subscribe(res => {\n        this.uncatDimensions.splice(index, 1);\n        this.snackBar.open(`${dimension} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the keyword is\n  * removed from the list\n  * @param {string} keyword to be removed\n  */\n  public deleteKeyword(keyword: string) {\n    const index = this.uncatKeywords.indexOf(keyword);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedKeyword(keyword)\n      .subscribe(res => {\n        this.uncatKeywords.splice(index, 1);\n        this.snackBar.open(`${keyword} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: ItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode, '');\n    this.treeControl.expand(node);\n  }\n\n  /** Save the node to database */\n  saveNode(node: ItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this.database.updateItem(nestedNode, itemValue);\n  }\n\n  handleDragStart(event, node, newItem) {\n    if(newItem) {\n      this.dragNode = new ItemFlatNode;\n      this.dragNode.item = node;\n      this.isNewItem = true;\n      this.newItem = this.dragNode;\n    } else {\n      this.dragNode = node;\n    }\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\n    event.dataTransfer.setData('foo', 'bar');\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\n    this.treeControl.collapse(node);\n  }\n\n  handleDragOver(event, node) {\n    event.preventDefault();\n\n    // Handle node expand\n    if (node === this.dragNodeExpandOverNode) {\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\n          this.treeControl.expand(node);\n        }\n      }\n    } else {\n      this.dragNodeExpandOverNode = node;\n      this.dragNodeExpandOverTime = new Date().getTime();\n    }\n\n    // Handle drag area\n    const percentageX = event.offsetX / event.target.clientWidth;\n    const percentageY = event.offsetY / event.target.clientHeight;\n    if (percentageY  0.75) {\n      this.dragNodeExpandOverArea = 'below';\n    } else {\n      this.dragNodeExpandOverArea = 'center';\n    }\n  }\n\n  handleDrop(event, node) {\n    if (node !== this.dragNode) {\n      let newItem: ItemNode;\n      if (this.dragNodeExpandOverArea === 'above') {\n        newItem = this.database.copyPasteItemAbove(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else if (this.dragNodeExpandOverArea === 'below') {\n        newItem = this.database.copyPasteItemBelow(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else {\n        newItem = this.database.copyPasteItem(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      }\n      this.database.deleteItem(this.flatNodeMap.get(this.dragNode));\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\n    }\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n  }\n\n  handleDragEnd(event) {\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n    this.newItem = null;\n    this.isNewItem = false;\n  }\n\n  selectionChange(event){\n    this.database.dataChange.next(TREE_DATA[event[0].value])\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ItemNode.html":{"url":"classes/ItemNode.html","title":"class - ItemNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ItemNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/keywords/keywords.component.ts\n        \n\n            \n                Description\n            \n            \n                Node for item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                children\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ItemNode[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/keywords/keywords.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Injectable, ViewChild, ElementRef } from '@angular/core';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ApiService } from '../services/api.service';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Node for item\n */\nexport class ItemNode {\n  children: ItemNode[];\n  item: string;\n}\n\n/** Flatitem node with expandable and level information */\nexport class ItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The Json object for list data.\n */\nlet TREE_DATA: any = [];\n\n/**\n * Currently selected tree data.\n */\nlet selectedKwm: string;\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n  static data(): any {\n    throw new Error(\"Method not implemented.\");\n  }\n  dataChange = new BehaviorSubject([]);\n\n  get data(): ItemNode[] { return this.dataChange.value; }\n\n  constructor(private api: ApiService) {\n    this.initialize();\n  }\n\n  initialize() {\n    //Build the tree nodes from Json object. The result is a list of `ItemNode` with nested\n    //    file node as children.\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n\n      for (var i = 0 ; i ((accumulator, key) => {\n      const value = obj[key];\n      const node = new ItemNode();\n      node.item = key;\n\n      if (value != null) {\n        if (typeof value === 'object') {\n          node.children = this.buildFileTree(value, level + 1);\n        } else {\n          node.item = value;\n        }\n      }\n\n      return accumulator.concat(node);\n    }, []);\n  }\n\n  /** Add an item to list */\n  insertItem(parent: ItemNode, name: string): ItemNode {\n    if (!parent.children) {\n      parent.children = [];\n    }\n    const newItem = { item: name } as ItemNode;\n    parent.children.push(newItem);\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemAbove(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node), 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  insertItemBelow(node: ItemNode, name: string): ItemNode {\n    const parentNode = this.getParentFromNodes(node);\n    const newItem = { item: name } as ItemNode;\n    if (parentNode != null) {\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\n    } else {\n      this.data.splice(this.data.indexOf(node) + 1, 0, newItem);\n    }\n    this.dataChange.next(this.data);\n    return newItem;\n  }\n\n  getParentFromNodes(node: ItemNode): ItemNode {\n    for (let i = 0; i  0) {\n      for (let i = 0; i  0) {\n          const parent = this.getParent(child, node);\n          if (parent != null) {\n            return parent;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  updateItem(node: ItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n\n  deleteItem(node: ItemNode) {\n    this.deleteNode(this.data, node);\n    this.dataChange.next(this.data);\n  }\n\n  copyPasteItem(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItem(to, listItem.item);\n    } else {\n      newItem = this.insertItem(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemAbove(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n    let newItem;\n\n    if(!from) {\n      newItem = this.insertItemAbove(to, listItem.item);\n    } else {\n      newItem = this.insertItemAbove(to, from.item);\n    }\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  copyPasteItemBelow(from: ItemNode, to: ItemNode, listItem?: ItemFlatNode): ItemNode {\n\n    let newItem;\n    if(!from) {\n      newItem = this.insertItemBelow(to, listItem.item);\n    } else {\n      newItem = this.insertItemBelow(to, from.item);\n    }\n\n    if (from && from.children) {\n      from.children.forEach(child => {\n        this.copyPasteItem(child, newItem);\n      });\n    }\n    return newItem;\n  }\n\n  deleteNode(nodes: ItemNode[], nodeToDelete: ItemNode) {\n    const index = nodes.indexOf(nodeToDelete, 0);\n    if (index > -1) {\n      nodes.splice(index, 1);\n    } else {\n      nodes.forEach(node => {\n        if (node.children && node.children.length > 0) {\n          this.deleteNode(node.children, nodeToDelete);\n        }\n      });\n    }\n  }\n}\n\n@Component({\n  selector: 'app-keywords',\n  templateUrl: './keywords.component.html',\n  styleUrls: ['./keywords.component.scss'],\n  providers: [ChecklistDatabase]\n})\nexport class KeywordsComponent implements OnInit {\n\n\n  newDimension: string;\n  newKeyword: string;\n  isNewItem:boolean = false;\n  newItem:any;\n  uncatDimensions = []\n  uncatKeywords = []\n  keywords = []\n\n\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap = new Map();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap = new Map();\n\n  /** A selected parent node to be inserted */\n  selectedParent: ItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName = '';\n\n  treeControl: FlatTreeControl;\n\n  treeFlattener: MatTreeFlattener;\n\n  dataSource: MatTreeFlatDataSource;\n\n\n  /* Drag and drop */\n  dragNode: any;\n  dragNodeExpandOverWaitTimeMs = 300;\n  dragNodeExpandOverNode: any;\n  dragNodeExpandOverTime: number;\n  dragNodeExpandOverArea: string;\n  @ViewChild('emptyItem') emptyItem: ElementRef;\n\n  constructor(private api: ApiService, private snackBar: MatSnackBar, private database: ChecklistDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = [];\n      this.dataSource.data = data;\n    });\n   }\n\n  getLevel = (node: ItemFlatNode) => node.level;\n\n  isExpandable = (node: ItemFlatNode) => node.expandable;\n\n  getChildren = (node: ItemNode): ItemNode[] => node.children;\n\n  hasChild = (_: number, _nodeData: ItemFlatNode) => _nodeData.expandable;\n\n  hasNoContent = (_: number, _nodeData: ItemFlatNode) => _nodeData.item === '';\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: ItemNode, level: number) => {\n    const existingNode = this.nestedNodeMap.get(node);\n    const flatNode = existingNode && existingNode.item === node.item\n      ? existingNode\n      : new ItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = (node.children && node.children.length > 0);\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  ngOnInit(): void {\n    this.api.getUncategorizedKeywords()\n    .subscribe((data: []) => {\n      this.keywords = data;\n    });\n    this.api.getUncategorizedDimensions()\n      .subscribe((data: []) => {\n        this.uncatDimensions = data;\n      });\n    this.api.getUncategorizedKeywords()\n      .subscribe((data: []) => {\n        this.uncatKeywords = data;\n      });\n  }\n\n  dropDim(event: CdkDragDrop) {\n    moveItemInArray(this.uncatDimensions, event.previousIndex, event.currentIndex);\n  }\n\n  dropKey(event: CdkDragDrop) {\n    moveItemInArray(this.uncatKeywords, event.previousIndex, event.currentIndex);\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized dimension\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onDimEnter() {\n    const dimFormatted = this.newDimension.trim().toLowerCase();\n    if(dimFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatDimensions, dimFormatted)) {\n        this.api.addUncategorizedDimension(dimFormatted)\n          .subscribe(res => {\n            this.uncatDimensions.push(dimFormatted)\n            this.snackBar.open(`${dimFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${dimFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newDimension=\"\";\n  }\n\n  /**\n  * @description\n  * Gets called when the enter key is pressed while the uncategorized keyword\n  * input field is in focus. The string gets read from the input, formatted\n  * and added to the list as well as send to the backend\n  */\n  onKeyEnter() {\n    const keyFormatted = this.newKeyword.trim().toLowerCase();\n    if(keyFormatted !== \"\") {\n      if(!this.isDuplicate(this.uncatKeywords, keyFormatted)) {\n        this.api.addUncategorizedKeyword(keyFormatted)\n          .subscribe(res => {\n            this.uncatKeywords.push(keyFormatted)\n            this.snackBar.open(`${keyFormatted} added into the database`, '', { duration: 3000 });\n          });\n      } else {\n        this.snackBar.open(`${keyFormatted} already present`, '', { duration: 3000 });\n      }\n    }\n    this.newKeyword=\"\";\n  }\n\n  /**\n  * @description\n  * Checks if a value appears in an array\n  * @param array to be checked\n  * @param value to be checked\n  * @returns true if the value was found, false otherwise\n  */\n  private isDuplicate(arr, value) {\n    const index = arr.findIndex((elem) => elem === value);\n    if (index === -1) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the dimension is\n  * removed from the list\n  * @param {string} dimension to be removed\n  */\n  public deleteDimension(dimension: string) {\n    const index = this.uncatDimensions.indexOf(dimension);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedDimension(dimension)\n      .subscribe(res => {\n        this.uncatDimensions.splice(index, 1);\n        this.snackBar.open(`${dimension} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  /**\n  * @description\n  * Sends a DELETE request to the backend. If it succedes the keyword is\n  * removed from the list\n  * @param {string} keyword to be removed\n  */\n  public deleteKeyword(keyword: string) {\n    const index = this.uncatKeywords.indexOf(keyword);\n\n    if (index >= 0) {\n      this.api.removeUncategorizedKeyword(keyword)\n      .subscribe(res => {\n        this.uncatKeywords.splice(index, 1);\n        this.snackBar.open(`${keyword} deleted from the database`, '', { duration: 3000 });\n      });\n    }\n  }\n\n  drop(event: CdkDragDrop) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data,\n                        event.container.data,\n                        event.previousIndex,\n                        event.currentIndex);\n    }\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: ItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode, '');\n    this.treeControl.expand(node);\n  }\n\n  /** Save the node to database */\n  saveNode(node: ItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this.database.updateItem(nestedNode, itemValue);\n  }\n\n  handleDragStart(event, node, newItem) {\n    if(newItem) {\n      this.dragNode = new ItemFlatNode;\n      this.dragNode.item = node;\n      this.isNewItem = true;\n      this.newItem = this.dragNode;\n    } else {\n      this.dragNode = node;\n    }\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\n    event.dataTransfer.setData('foo', 'bar');\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\n    this.treeControl.collapse(node);\n  }\n\n  handleDragOver(event, node) {\n    event.preventDefault();\n\n    // Handle node expand\n    if (node === this.dragNodeExpandOverNode) {\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\n          this.treeControl.expand(node);\n        }\n      }\n    } else {\n      this.dragNodeExpandOverNode = node;\n      this.dragNodeExpandOverTime = new Date().getTime();\n    }\n\n    // Handle drag area\n    const percentageX = event.offsetX / event.target.clientWidth;\n    const percentageY = event.offsetY / event.target.clientHeight;\n    if (percentageY  0.75) {\n      this.dragNodeExpandOverArea = 'below';\n    } else {\n      this.dragNodeExpandOverArea = 'center';\n    }\n  }\n\n  handleDrop(event, node) {\n    if (node !== this.dragNode) {\n      let newItem: ItemNode;\n      if (this.dragNodeExpandOverArea === 'above') {\n        newItem = this.database.copyPasteItemAbove(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else if (this.dragNodeExpandOverArea === 'below') {\n        newItem = this.database.copyPasteItemBelow(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      } else {\n        newItem = this.database.copyPasteItem(this.flatNodeMap.get(this.dragNode), this.flatNodeMap.get(node), this.newItem);\n      }\n      this.database.deleteItem(this.flatNodeMap.get(this.dragNode));\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\n    }\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n  }\n\n  handleDragEnd(event) {\n    this.dragNode = null;\n    this.dragNodeExpandOverNode = null;\n    this.dragNodeExpandOverTime = 0;\n    this.newItem = null;\n    this.isNewItem = false;\n  }\n\n  selectionChange(event){\n    this.database.dataChange.next(TREE_DATA[event[0].value])\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/search/search.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent { }\n\n    \n\n    \n        search works!\n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'search works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/settings/settings.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent { }\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'DocumentViewTableComponent', 'selector': 'document-view-table'},{'name': 'FileUploadComponent', 'selector': 'app-file-upload'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'KeywordsComponent', 'selector': 'app-keywords'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingsComponent', 'selector': 'app-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/upload.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                patchKeywords\n                            \n                            \n                                    Public\n                                postFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/upload.service.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            patchKeywords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patchKeywords(iDoc: IDocument)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/upload.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    iDoc\n                                    \n                                                IDocument\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postFile(file: File)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/upload.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from './../../environments/environment';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { IDocument } from './../models/IDocument.model'\n\n\n/**\n *\n * @class UploadService\n *\n * Service handling uploading and updateing documents\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n\n  constructor(private httpClient: HttpClient) { }\n\n\n  public postFile(file: File): Observable {\n      //console.log(\"postFile\" + file.name)\n      const formData: FormData = new FormData();\n      formData.append('fileKey', file, file.name);\n      //formData.append('test', 'abc');\n      return this.httpClient\n        .post(`${environment.serverUrl}/upload`, formData, {\n          reportProgress: true,\n          observe: 'events'\n        });\n\n  }\n\n  public patchKeywords(iDoc: IDocument): Observable {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      })\n    };\n\n    return this.httpClient.patch(`${environment.serverUrl}/changekeywords`, iDoc, httpOptions);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/documentation/documentation.component.ts\n            \n            component\n            DocumentationComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/documentview/document-view-table.component.ts\n            \n            component\n            DocumentViewTableComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/file-upload/file-upload.component.ts\n            \n            component\n            FileUploadComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/file-upload/file-upload.component.ts\n            \n            interface\n            IFile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            component\n            KeywordsComponent\n            \n                15 %\n                (7/44)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            class\n            ItemFlatNode\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            class\n            ItemNode\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            injectable\n            ChecklistDatabase\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            variable\n            selectedKwm\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/keywords/keywords.component.ts\n            \n            variable\n            TREE_DATA\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/IDocument.model.ts\n            \n            interface\n            IDocument\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/upload.service.ts\n            \n            injectable\n            UploadService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.3\n        \n            @angular/cdk : ^9.2.2\n        \n            @angular/common : ~9.1.3\n        \n            @angular/compiler : ~9.1.3\n        \n            @angular/core : ~9.1.3\n        \n            @angular/forms : ~9.1.3\n        \n            @angular/material : ^9.1.3\n        \n            @angular/platform-browser : ~9.1.3\n        \n            @angular/platform-browser-dynamic : ~9.1.3\n        \n            @angular/router : ~9.1.3\n        \n            bootstrap : ^4.4.1\n        \n            jquery : ^3.5.0\n        \n            popper.js : ^1.16.1\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated with Angular CLI version 9.1.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nDocumentViewTableComponent\n\nDocumentViewTableComponent\n\nAppModule -->\n\nDocumentViewTableComponent->AppModule\n\n\n\n\n\nDocumentationComponent\n\nDocumentationComponent\n\nAppModule -->\n\nDocumentationComponent->AppModule\n\n\n\n\n\nFileUploadComponent\n\nFileUploadComponent\n\nAppModule -->\n\nFileUploadComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nKeywordsComponent\n\nKeywordsComponent\n\nAppModule -->\n\nKeywordsComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nAppModule -->\n\nSettingsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            selectedKwm   (src/.../keywords.component.ts)\n                        \n                        \n                            TREE_DATA   (src/.../keywords.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  serverUrl: 'http://localhost:5000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  serverUrl: 'http://ec2-52-87-180-131.compute-1.amazonaws.com:5000'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/keywords/keywords.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectedKwm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n\n                \n                    \n                        Currently selected tree data.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TREE_DATA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n                \n                    \n                        The Json object for list data.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
